{
  "name": "v0.0.1",
  "desc": [],
  "date": 1664951236401,
  "data": {
    "name": "apiJSON",
    "describe": "apiJSON",
    "avatar": "",
    "version": "4.1.3",
    "createdTime": "2022-9-21 14:57:37",
    "updatedTime": "2022-9-21 20:10:03",
    "dbConns": [],
    "profile": {
      "default": {
        "db": "29D1CE08-4C35-4D2D-AAA9-23D93305B52E",
        "dbConn": "F5814C1E-7161-4D4C-8117-FE77D7D3EA11",
        "entityInitFields": [
          {
            "defKey": "TENANT_ID",
            "defName": "租户号",
            "comment": "",
            "type": "",
            "len": 32,
            "scale": "",
            "primaryKey": false,
            "notNull": false,
            "autoIncrement": false,
            "defaultValue": "",
            "hideInGraph": true,
            "domain": "16120F75-6AA7-4483-868D-F07F511BB081",
            "refDict": "",
            "uiHint": "",
            "id": "ADB3AD14-6603-43E2-8261-114E32442B5B"
          },
          {
            "defKey": "REVISION",
            "defName": "乐观锁",
            "comment": "",
            "domain": "16120F75-6AA7-4483-868D-F07F511BB081",
            "type": "",
            "len": 32,
            "scale": "",
            "primaryKey": false,
            "notNull": false,
            "autoIncrement": false,
            "defaultValue": "",
            "hideInGraph": true,
            "refDict": "",
            "uiHint": "",
            "id": "92BF430E-01FA-4AEF-944F-25A142632654"
          },
          {
            "defKey": "CREATED_BY",
            "defName": "创建人",
            "comment": "",
            "domain": "16120F75-6AA7-4483-868D-F07F511BB081",
            "type": "",
            "len": 32,
            "scale": "",
            "primaryKey": false,
            "notNull": false,
            "autoIncrement": false,
            "defaultValue": "",
            "hideInGraph": true,
            "refDict": "",
            "uiHint": "",
            "id": "C8BE2C7A-8251-4ADD-BB4F-411C5754DA62"
          },
          {
            "defKey": "CREATED_TIME",
            "defName": "创建时间",
            "comment": "",
            "domain": "7CFFA0D3-6A93-4DDC-BC10-DF21211064DC",
            "type": "",
            "len": "",
            "scale": "",
            "primaryKey": false,
            "notNull": false,
            "autoIncrement": false,
            "defaultValue": "",
            "hideInGraph": true,
            "refDict": "",
            "uiHint": "",
            "id": "4E471FD6-3E73-4A90-B660-51598A482409"
          },
          {
            "defKey": "UPDATED_BY",
            "defName": "更新人",
            "comment": "",
            "domain": "16120F75-6AA7-4483-868D-F07F511BB081",
            "type": "",
            "len": 32,
            "scale": "",
            "primaryKey": false,
            "notNull": false,
            "autoIncrement": false,
            "defaultValue": "",
            "hideInGraph": true,
            "refDict": "",
            "uiHint": "",
            "id": "0DC24AA9-4CD0-45D8-95CF-FA546BE343AB"
          },
          {
            "defKey": "UPDATED_TIME",
            "defName": "更新时间",
            "comment": "",
            "domain": "7CFFA0D3-6A93-4DDC-BC10-DF21211064DC",
            "type": "",
            "len": "",
            "scale": "",
            "primaryKey": false,
            "notNull": false,
            "autoIncrement": false,
            "defaultValue": "",
            "hideInGraph": true,
            "refDict": "",
            "uiHint": "",
            "id": "09F64AC4-4DEE-428F-AF64-4C103884E1AC"
          }
        ],
        "entityInitProperties": {
          "partitioned by": "(date string)",
          "row format delimited": "",
          "fields terminated by ','": "",
          "collection items terminated by '-'": "",
          "map keys terminated by ':'": "",
          "store as textfile;": ""
        }
      },
      "javaHome": "",
      "sql": {
        "delimiter": ""
      },
      "dataTypeSupports": [
        {
          "defKey": "MYSQL",
          "id": "29D1CE08-4C35-4D2D-AAA9-23D93305B52E"
        },
        {
          "defKey": "ORACLE",
          "id": "A4E23CB7-BB01-4BD1-9F71-F73F3E15A542"
        },
        {
          "defKey": "SQLServer",
          "id": "BFC87171-C74F-494A-B7C2-76B9C55FACC9"
        },
        {
          "defKey": "PostgreSQL",
          "id": "DFBEC1DD-AA84-456E-BBF3-C95DD0DB2022"
        },
        {
          "defKey": "DB2",
          "id": "89504F5D-94BF-4C9E-8B2E-44F37305FED5"
        },
        {
          "defKey": "DM",
          "id": "0BBCABA5-B8E4-41B0-B8E4-8F5EA6029307"
        },
        {
          "defKey": "GaussDB",
          "id": "592C7013-143D-4E7B-AF64-0D7BF1E28230"
        },
        {
          "defKey": "Kingbase",
          "id": "77BD85E5-9D0D-4096-8427-CBA306FC9C6A"
        },
        {
          "defKey": "MaxCompute",
          "id": "11D1FB71-A587-4217-89BA-611B8A1F83E0"
        },
        {
          "defKey": "SQLite",
          "id": "B363BE0B-F852-49B8-9B2E-F6D2174DEAC1"
        },
        {
          "defKey": "JAVA",
          "id": "797A1496-D649-4261-89B4-544132EC3F36"
        },
        {
          "defKey": "JavaMybatis",
          "id": "895CFD1D-4273-4D32-A2C4-CAC70200AB5B"
        },
        {
          "defKey": "JavaMybatisPlus",
          "id": "A2EE7B4A-CE62-4290-B00C-B26C1BF18073"
        },
        {
          "defKey": "C#",
          "id": "F3AC2415-E86B-40C6-9FEB-F4B7937D2C30"
        },
        {
          "defKey": "Hive",
          "id": "81CCA482-3F4D-4EAC-8CF9-F5E7BC098AD2"
        },
        {
          "defKey": "Golang",
          "id": "B91D99E0-9B7C-416C-8737-B760957DAF09"
        }
      ],
      "codeTemplates": [
        {
          "type": "appCode",
          "applyFor": "797A1496-D649-4261-89B4-544132EC3F36",
          " JpaBean": "{{  var today=new Date();\n    var fullYear=today.getFullYear();\n    var month=today.getMonth() + 1;\n    var days=today.getDate();\n    \n    var pkVarName = \"undefinedId\";\n    var pkDataType = \"String\";\n    it.entity.fields.forEach(function(field){\n        if(field.primaryKey){\n            pkVarName = it.func.camel(field.defKey,false);\n            pkDataType = field[\"type\"];\n            return;\n        }\n    });\n    \n    var pkgName = it.entity.env.base.nameSpace;\n    var beanClass = it.entity.env.base.codeRoot;\n    var beanVarName = beanClass.charAt(0).toLowerCase()+beanClass.slice(1);\n    var serviceClass = beanClass+'Service';\n    var serviceVarName= beanVarName+'Service';\n    \n}}package {{=pkgName}}.entity;\n$blankline\nimport io.swagger.annotations.ApiModel;\nimport io.swagger.annotations.ApiModelProperty;\nimport javax.persistence.*;\nimport java.io.Serializable;\nimport java.util.Date;\n$blankline\n\n /**\n * {{=it.entity.defName}};{{=it.entity.comment}}\n * @author : http://www.chiner.pro\n * @date : {{=fullYear}}-{{=month}}-{{=days}}\n */\n@ApiModel(value = \"{{=it.entity.defName}}\",description = \"{{=it.entity.comment}}\")\n@Table(name=\"{{=it.entity.defKey}}\")\npublic class {{=beanClass}} implements Serializable,Cloneable{\n{{~it.entity.fields:field:index}}\n    /** {{=it.func.join(field.defName,field.comment,';')}} */\n    {{? field.primaryKey }}\n    @Id\n    @GeneratedValue\n    {{?}}\n    @ApiModelProperty(name = \"{{=field.defName}}\",notes = \"{{=field.comment}}\")\n    private {{=field.type}} {{=it.func.camel(field.defKey,false)}} ;\n{{~}}\n$blankline\n\n{{~it.entity.fields:field:index}}\n    /** {{=it.func.join(field.defName,field.comment,';')}} */\n    public {{=field.type}} get{{=it.func.camel(field.defKey,true)}}(){\n        return this.{{=it.func.camel(field.defKey,false)}};\n    }\n    /** {{=it.func.join(field.defName,field.comment,';')}} */\n    public void set{{=it.func.camel(field.defKey,true)}}({{=field.type}} {{= it.func.camel(field.defKey,false) }}){\n        this.{{=it.func.camel(field.defKey,false)}}={{=it.func.camel(field.defKey,false)}};\n    }\n{{~}}\n}"
        },
        {
          "type": "appCode",
          "applyFor": "F3AC2415-E86B-40C6-9FEB-F4B7937D2C30",
          "Default": "using System;\nusing System.Collections.Generic;\n\n$blankline\n{{\n    var today=new Date();\n    var fullYear=today.getFullYear();\n    var month=today.getMonth() + 1;\n    var days=today.getDate();\n}}\n/*\n * @author : http://www.chiner.com.cn\n * @date : {{=fullYear}}-{{=month}}-{{=days}}\n * @desc : {{=it.func.join(it.entity.defName,it.entity.comment,'-')}}\n */\nnamespace PDManer.Application\n{\n    public partial class {{=it.func.camel(it.entity.defKey,true) }}\n    {\n    \n        {{~it.entity.fields:field:index}}\n        /// <summary>\n        /// {{=it.func.join(field.defName,field.comment,';')}}\n        /// </summary>\n        public {{=field.type}} {{=it.func.camel(field.defKey,true)}} { get; set; }\n        $blankline\n        {{~}}\n        \n    }\n}",
          "SqlSugar": "using System;\nusing System.Collections.Generic;\nusing SqlSugar;\n\n$blankline\n{{\n    var today=new Date();\n    var fullYear=today.getFullYear();\n    var month=today.getMonth() + 1;\n    var days=today.getDate();\n    var sqlSugartable='[SugarTable(\"{{=it.entity.defKey}}\", TableDescription = \"{{=it.func.join(it.entity.defName,it.entity.comment,';')}}\")]';\n}}\n/*\n * @author : xkdong@163.com\n * @date : {{=fullYear}}-{{=month}}-{{=days}}\n * @desc : {{=it.func.join(it.entity.defName,it.entity.comment,'-')}}\n */\nnamespace Model.DBModel\n{\n    /// <summary>\n    /// {{=it.func.join(it.entity.defName,it.entity.comment,';')}}\n    /// </summary>\n    {{=sqlSugartable}}\n    public class {{=it.entity.defKey}}\n    {\n        {{~it.entity.fields:field:index}}\n        /// <summary>\n        /// {{=it.func.join(field.defName,field.comment,';')}}\n        /// </summary>\n        {{? field.primaryKey }}\n        [SugarColumn(IsIdentity = true, IsPrimaryKey = true)]\n        {{?}}\n        public {{=field.type}} {{=it.func.camel(field.defKey,true)}}{ get; set; }\n        $blankline\n        {{~}}\n    }\n}"
        },
        {
          "applyFor": "895CFD1D-4273-4D32-A2C4-CAC70200AB5B",
          "type": "appCode",
          "Controller": "{{  var today=new Date();\n    var fullYear=today.getFullYear();\n    var month=today.getMonth() + 1;\n    var days=today.getDate();\n    \n    var pkVarName = \"undefinedId\";\n    var pkDataType = \"String\";\n    it.entity.fields.forEach(function(field){\n        if(field.primaryKey){\n            pkVarName = it.func.camel(field.defKey,false);\n            pkDataType = field[\"type\"];\n            return;\n        }\n    });\n    \n    var pkgName = it.entity.env.base.nameSpace;\n    var beanClass = it.entity.env.base.codeRoot;\n    var beanVarName = beanClass.charAt(0).toLowerCase()+beanClass.slice(1);\n    var serviceClass = beanClass+'Service';\n    var serviceVarName= beanVarName+'Service';\n    \n}}package {{=pkgName}}.controller;\n$blankline\nimport io.swagger.annotations.Api;\nimport io.swagger.annotations.ApiOperation;\nimport org.springframework.beans.factory.annotation.Autowired;\nimport org.springframework.data.domain.Page;\nimport org.springframework.data.domain.PageRequest;\nimport org.springframework.http.ResponseEntity;\nimport org.springframework.web.bind.annotation.*;\nimport {{=pkgName}}.entity.{{=beanClass}};\nimport {{=pkgName}}.service.{{=serviceClass}};\n$blankline\n\n /**\n * {{=it.entity.defName}};({{=it.entity.defKey}})表控制层\n * @author : http://www.chiner.pro\n * @date : {{=fullYear}}-{{=month}}-{{=days}}\n */\n@Api(tags = \"{{=it.entity.defName}}对象功能接口\")\n@RestController\n@RequestMapping(\"/{{=it.func.camel(it.entity.defKey,false)}}\")\npublic class {{=beanClass}}Controller{\n    @Autowired\n    private {{=serviceClass}} {{=serviceVarName}};\n    $blankline\n    /** \n     * 通过ID查询单条数据 \n     *\n     * @param {{=pkVarName}} 主键\n     * @return 实例对象\n     */\n    @ApiOperation(\"通过ID查询单条数据\")\n    @GetMapping(\"{{{=it.func.camel(pkVarName,false)}}}\")\n    public ResponseEntity<{{=beanClass}}> queryById({{=pkDataType}} {{=pkVarName}}){\n        return ResponseEntity.ok({{=serviceVarName}}.queryById({{=pkVarName}}));\n    }\n    $blankline\n    /** \n     * 分页查询\n     *\n     * @param {{=beanVarName}} 筛选条件\n     * @param pageRequest 分页对象\n     * @return 查询结果\n     */\n    @ApiOperation(\"分页查询\")\n    @GetMapping\n    public ResponseEntity<Page<{{=beanClass}}>> paginQuery({{=beanClass}} {{=beanVarName}}, PageRequest pageRequest){\n        return ResponseEntity.ok({{=serviceVarName}}.paginQuery({{=beanVarName}}, pageRequest));\n    }\n    $blankline\n    /** \n     * 新增数据\n     *\n     * @param {{=beanVarName}} 实例对象\n     * @return 实例对象\n     */\n    @ApiOperation(\"新增数据\")\n    @PostMapping\n    public ResponseEntity<{{=beanClass}}> add({{=beanClass}} {{=beanVarName}}){\n        return ResponseEntity.ok({{=serviceVarName}}.insert({{=beanVarName}}));\n    }\n    $blankline\n    /** \n     * 更新数据\n     *\n     * @param {{=beanVarName}} 实例对象\n     * @return 实例对象\n     */\n    @ApiOperation(\"更新数据\")\n    @PutMapping\n    public ResponseEntity<{{=beanClass}}> edit({{=beanClass}} {{=beanVarName}}){\n        return ResponseEntity.ok({{=serviceVarName}}.update({{=beanVarName}}));\n    }\n    $blankline\n    /** \n     * 通过主键删除数据\n     *\n     * @param {{=pkVarName}} 主键\n     * @return 是否成功\n     */\n    @ApiOperation(\"通过主键删除数据\")\n    @DeleteMapping\n    public ResponseEntity<Boolean> deleteById({{=pkDataType}} {{=pkVarName}}){\n        return ResponseEntity.ok({{=serviceVarName}}.deleteById({{=pkVarName}}));\n    }\n}",
          "Service": "{{  var today=new Date();\n    var fullYear=today.getFullYear();\n    var month=today.getMonth() + 1;\n    var days=today.getDate();\n    \n    var pkVarName = \"undefinedId\";\n    var pkDataType = \"String\";\n    it.entity.fields.forEach(function(field){\n        if(field.primaryKey){\n            pkVarName = it.func.camel(field.defKey,false);\n            pkDataType = field[\"type\"];\n            return;\n        }\n    });\n    \n    var pkgName = it.entity.env.base.nameSpace;\n    var beanClass = it.entity.env.base.codeRoot;\n    var beanVarName = beanClass.charAt(0).toLowerCase()+beanClass.slice(1);\n    var serviceClass = beanClass+'Service';\n    var serviceVarName= beanVarName+'Service';\n    \n}}package {{=pkgName}}.service;\n$blankline\nimport org.springframework.data.domain.Page;\nimport org.springframework.data.domain.PageRequest;\nimport {{=pkgName}}.entity.{{=beanClass}};\n$blankline\n\n /**\n * {{=it.entity.defName}};({{=it.entity.defKey}})表服务接口\n * @author : http://www.chiner.pro\n * @date : {{=fullYear}}-{{=month}}-{{=days}}\n */\npublic interface {{=serviceClass}}{\n    /** \n     * 通过ID查询单条数据 \n     *\n     * @param {{=pkVarName}} 主键\n     * @return 实例对象\n     */\n    {{=beanClass}} queryById({{=pkDataType}} {{=pkVarName}});\n    \n    /** \n     * 分页查询\n     *\n     * @param {{=beanVarName}} 筛选条件\n     * @param pageRequest 分页对象\n     * @return 查询结果\n     */\n    Page<{{=beanClass}}> paginQuery({{=beanClass}} {{=beanVarName}}, PageRequest pageRequest);\n\n    /** \n     * 新增数据\n     *\n     * @param {{=beanVarName}} 实例对象\n     * @return 实例对象\n     */\n    {{=beanClass}} insert({{=beanClass}} {{=beanVarName}});\n\n    \n    /** \n     * 更新数据\n     *\n     * @param {{=beanVarName}} 实例对象\n     * @return 实例对象\n     */\n    {{=beanClass}} update({{=beanClass}} {{=beanVarName}});\n\n    /** \n     * 通过主键删除数据\n     *\n     * @param {{=pkVarName}} 主键\n     * @return 是否成功\n     */\n    boolean deleteById({{=pkDataType}} {{=pkVarName}});\n}",
          "ServiceImpl": "{{  var today=new Date();\n    var fullYear=today.getFullYear();\n    var month=today.getMonth() + 1;\n    var days=today.getDate();\n    \n    var pkVarName = \"undefinedId\";\n    var pkVarNameU = \"UndefinedId\";\n    var pkDataType = \"String\";\n    it.entity.fields.forEach(function(field){\n        if(field.primaryKey){\n            pkVarName = it.func.camel(field.defKey,false);\n            pkVarNameU = it.func.camel(field.defKey,true);\n            pkDataType = field[\"type\"];\n            return;\n        }\n    });\n    \n    var pkgName = it.entity.env.base.nameSpace;\n    var beanClass = it.entity.env.base.codeRoot;\n    var beanVarName = beanClass.charAt(0).toLowerCase()+beanClass.slice(1);\n    var serviceClass = beanClass+'Service';\n    var serviceVarName= beanVarName+'Service';\n    var mapperName = beanVarName+'Mapper';\n    \n}}package {{=pkgName}}.service.impl;\n$blankline\nimport org.springframework.beans.factory.annotation.Autowired;\nimport org.springframework.stereotype.Service;\nimport org.springframework.data.domain.Page;\nimport org.springframework.data.domain.PageImpl;\nimport org.springframework.data.domain.PageRequest;\nimport {{=pkgName}}.entity.{{=beanClass}};\nimport {{=pkgName}}.mapper.{{=beanClass}}Mapper;\nimport {{=pkgName}}.service.{{=serviceClass}};\n\n /**\n * {{=it.entity.defName}};({{=it.entity.defKey}})表服务实现类\n * @author : http://www.chiner.pro\n * @date : {{=fullYear}}-{{=month}}-{{=days}}\n */\n@Service\npublic class {{=serviceClass}}Impl implements {{=serviceClass}}{\n    @Autowired\n    private {{=beanClass}}Mapper {{=mapperName}};\n    $blankline\n    /** \n     * 通过ID查询单条数据 \n     *\n     * @param {{=pkVarName}} 主键\n     * @return 实例对象\n     */\n    public {{=beanClass}} queryById({{=pkDataType}} {{=pkVarName}}){\n        return {{=mapperName}}.queryById({{=pkVarName}});\n    }\n    $blankline\n    /** \n     * 分页查询\n     *\n     * @param {{=beanVarName}} 筛选条件\n     * @param pageRequest 分页对象\n     * @return 查询结果\n     */\n    public Page<{{=beanClass}}> paginQuery({{=beanClass}} {{=beanVarName}}, PageRequest pageRequest){\n        long total = {{=mapperName}}.count({{=beanVarName}});\n        return new PageImpl<>({{=mapperName}}.queryAllByLimit({{=beanVarName}}, pageRequest), pageRequest, total);\n    }\n    $blankline\n    /** \n     * 新增数据\n     *\n     * @param {{=beanVarName}} 实例对象\n     * @return 实例对象\n     */\n    public {{=beanClass}} insert({{=beanClass}} {{=beanVarName}}){\n        {{=mapperName}}.insert({{=beanVarName}});\n        return {{=beanVarName}};\n    }\n    $blankline\n    /** \n     * 更新数据\n     *\n     * @param {{=beanVarName}} 实例对象\n     * @return 实例对象\n     */\n    public {{=beanClass}} update({{=beanClass}} {{=beanVarName}}){\n        {{=mapperName}}.update({{=beanVarName}});\n        return queryById({{=beanVarName}}.get{{=pkVarNameU}}());\n    }\n    $blankline\n    /** \n     * 通过主键删除数据\n     *\n     * @param {{=pkVarName}} 主键\n     * @return 是否成功\n     */\n    public boolean deleteById({{=pkDataType}} {{=pkVarName}}){\n        int total = {{=mapperName}}.deleteById({{=pkVarName}});\n        return total > 0;\n    }\n}",
          "Mapper": "{{  var today=new Date();\n    var fullYear=today.getFullYear();\n    var month=today.getMonth() + 1;\n    var days=today.getDate();\n    \n    var pkVarName = \"undefinedId\";\n    var pkDataType = \"String\";\n    it.entity.fields.forEach(function(field){\n        if(field.primaryKey){\n            pkVarName = it.func.camel(field.defKey,false);\n            pkDataType = field[\"type\"];\n            return;\n        }\n    });\n    \n    var pkgName = it.entity.env.base.nameSpace;\n    var beanClass = it.entity.env.base.codeRoot;\n    var beanVarName = beanClass.charAt(0).toLowerCase()+beanClass.slice(1);\n    var serviceClass = beanClass+'Service';\n    var serviceVarName= beanVarName+'Service';\n    \n}}package {{=pkgName}}.mapper;\n$blankline\nimport java.util.List;\nimport org.apache.ibatis.annotations.Mapper;\nimport org.apache.ibatis.annotations.Param;\nimport org.springframework.data.domain.Pageable;\nimport {{=pkgName}}.entity.{{=beanClass}};\n$blankline\n\n /**\n * {{=it.entity.defName}};({{=it.entity.defKey}})表数据库访问层\n * @author : http://www.chiner.pro\n * @date : {{=fullYear}}-{{=month}}-{{=days}}\n */\n@Mapper\npublic interface {{=beanClass}}Mapper{\n    /** \n     * 通过ID查询单条数据 \n     *\n     * @param {{=pkVarName}} 主键\n     * @return 实例对象\n     */\n    {{=beanClass}} queryById({{=pkDataType}} {{=pkVarName}});\n    \n    /** \n     * 分页查询指定行数据\n     *\n     * @param {{=beanVarName}} 查询条件\n     * @param pageable 分页对象\n     * @return 对象列表\n     */\n    List<{{=beanClass}}> queryAllByLimit({{=beanClass}} {{=beanVarName}}, @Param(\"pageable\") Pageable pageable);\n\n    /** \n     * 统计总行数\n     *\n     * @param {{=beanVarName}} 查询条件\n     * @return 总行数\n     */\n    long count({{=beanClass}} {{=beanVarName}});\n\n    /** \n     * 新增数据\n     *\n     * @param {{=beanVarName}} 实例对象\n     * @return 影响行数\n     */\n    int insert({{=beanClass}} {{=beanVarName}});\n\n    /** \n     * 批量新增数据\n     *\n     * @param entities List<{{=beanClass}}> 实例对象列表\n     * @return 影响行数\n     */\n    int insertBatch(@Param(\"entities\") List<{{=beanClass}}> entities);\n    \n    /** \n     * 批量新增或按主键更新数据\n     *\n     * @param entities List<{{=beanClass}}> 实例对象列表\n     * @return 影响行数\n     */\n    int insertOrUpdateBatch(@Param(\"entities\") List<{{=beanClass}}> entities);\n    \n    /** \n     * 更新数据\n     *\n     * @param {{=beanVarName}} 实例对象\n     * @return 影响行数\n     */\n    int update({{=beanClass}} {{=beanVarName}});\n\n    /** \n     * 通过主键删除数据\n     *\n     * @param {{=pkVarName}} 主键\n     * @return 影响行数\n     */\n    int deleteById({{=pkDataType}} {{=pkVarName}});\n}",
          "Mapper.xml": "{{  var today=new Date();\n    var fullYear=today.getFullYear();\n    var month=today.getMonth() + 1;\n    var days=today.getDate();\n    \n    var pkVarName = \"undefinedId\";\n    var pkDataType = \"String\";\n    var pkField = \"UNDEFINED_ID\";\n    it.entity.fields.forEach(function(field){\n        if(field.primaryKey){\n            pkField = field.defKey;\n            pkVarName = it.func.camel(field.defKey,false);\n            pkDataType = field[\"type\"];\n            return;\n        }\n    });\n    \n    var pkgName = it.entity.env.base.nameSpace;\n    var beanClass = it.entity.env.base.codeRoot;\n    var beanVarName = beanClass.charAt(0).toLowerCase()+beanClass.slice(1);\n    var serviceClass = beanClass+'Service';\n    var serviceVarName= beanVarName+'Service';\n    \n}}<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<!DOCTYPE mapper PUBLIC \"-//mybatis.org//DTD Mapper 3.0//EN\" \"http://mybatis.org/dtd/mybatis-3-mapper.dtd\">\n<mapper namespace=\"{{=pkgName}}.mapper.{{=beanClass}}Mapper\">\n    <resultMap type=\"{{=pkgName}}.entity.{{=beanClass}}\" id=\"{{=beanClass}}Map\">\n    {{~it.entity.fields:field:index}}\n        <result property=\"{{=it.func.camel(field.defKey,false)}}\" column=\"{{=field.defKey}}\" jdbcType=\"{{=field.dbType}}\"/>\n    {{~}}\n    </resultMap>\n    $blankline\n    <!-- 通过ID查询单条数据 -->\n    <select id=\"queryById\" resultMap=\"{{=beanClass}}Map\">\n        select\n            {{=it.entity.fields.map(function(e,i){return e.defKey}).join(',')}}\n        from {{=it.entity.defKey}}\n        where {{=pkField}} = #{{{=pkVarName}}}\n    </select>\n    $blankline\n    <!--分页查询指定行数据-->\n    <select id=\"queryAllByLimit\" resultMap=\"{{=beanClass}}Map\">\n        select\n            {{=it.entity.fields.map(function(e,i){return e.defKey}).join(',')}}\n        from {{=it.entity.defKey}}\n        <where>\n        {{~it.entity.fields:field:index}}\n            <if test=\"{{=it.func.camel(field.defKey,false)}} != null and {{=it.func.camel(field.defKey,false)}} != ''\">\n                and {{=field.defKey}} = #{{{=it.func.camel(field.defKey,false)}}}\n            </if>\n        {{~}}\n        </where>\n        limit #{pageable.offset}, #{pageable.pageSize}\n    </select>\n    $blankline\n    <!--统计总行数-->\n    <select id=\"count\" resultType=\"java.lang.Long\">\n        select count(1)\n        from {{=it.entity.defKey}}\n        <where>\n        {{~it.entity.fields:field:index}}\n            <if test=\"{{=it.func.camel(field.defKey,false)}} != null and {{=it.func.camel(field.defKey,false)}} != ''\">\n                and {{=field.defKey}} = #{{{=it.func.camel(field.defKey,false)}}}\n            </if>\n        {{~}}\n        </where>\n    </select>\n    $blankline\n    <!--新增数据-->\n    <insert id=\"insert\" keyProperty=\"{{=pkField}}\" useGeneratedKeys=\"true\">\n        insert into {{=it.entity.defKey}}({{=it.entity.fields.map(function(e,i){return e.defKey}).join(',')}})\n        values ({{=it.entity.fields.map(function(e,i){return '#{'+it.func.camel(e.defKey,false)+'}'}).join(',')}})\n    </insert>\n    $blankline\n    <!-- 批量新增数据 -->\n    <insert id=\"insertBatch\" keyProperty=\"{{=pkField}}\" useGeneratedKeys=\"true\">\n        insert into {{=it.entity.defKey}}({{=it.entity.fields.map(function(e,i){return e.defKey}).join(',')}})\n        values\n        <foreach collection=\"entities\" item=\"entity\" separator=\",\">\n            ({{=it.entity.fields.map(function(e,i){return '#{entity.'+it.func.camel(e.defKey,false)+'}'}).join(',')}})\n        </foreach>\n    </insert>\n    $blankline\n    <!-- 批量新增或按主键更新数据 -->\n    <insert id=\"insertOrUpdateBatch\" keyProperty=\"{{=pkField}}\" useGeneratedKeys=\"true\">\n        insert into {{=it.entity.defKey}}({{=it.entity.fields.map(function(e,i){return e.defKey}).join(',')}})\n        values\n        <foreach collection=\"entities\" item=\"entity\" separator=\",\">\n            ({{=it.entity.fields.map(function(e,i){return '#{entity.'+it.func.camel(e.defKey,false)+'}'}).join(',')}})\n        </foreach>\n        on duplicate key update\n        {{=it.entity.fields.map(function(e,i){return e.defKey + '=values('+e.defKey+')'}).join(',\\n\\t\\t')}}\n    </insert>\n    $blankline\n    <!-- 更新数据 -->\n    <update id=\"update\">\n        update {{=it.entity.defKey}}\n        <set>\n        {{~it.entity.fields:field:index}}\n            <if test=\"{{=it.func.camel(field.defKey,false)}} != null and {{=it.func.camel(field.defKey,false)}} != ''\">\n                {{=field.defKey}} = #{{{=it.func.camel(field.defKey,false)}}},\n            </if>\n        {{~}}\n        </set>\n        where {{=pkField}} = #{{{=pkVarName}}}\n    </update>\n    $blankline\n    <!--通过主键删除-->\n    <delete id=\"deleteById\">\n        delete from {{=it.entity.defKey}} where {{=pkField}} = #{{{=pkVarName}}}\n    </delete>\n</mapper>\n\n",
          "Entity": "{{  var today=new Date();\n    var fullYear=today.getFullYear();\n    var month=today.getMonth() + 1;\n    var days=today.getDate();\n    \n    var pkVarName = \"undefinedId\";\n    var pkDataType = \"String\";\n    it.entity.fields.forEach(function(field){\n        if(field.primaryKey){\n            pkVarName = it.func.camel(field.defKey,false);\n            pkDataType = field[\"type\"];\n            return;\n        }\n    });\n    \n    var pkgName = it.entity.env.base.nameSpace;\n    var beanClass = it.entity.env.base.codeRoot;\n    var beanVarName = beanClass.charAt(0).toLowerCase()+beanClass.slice(1);\n    var serviceClass = beanClass+'Service';\n    var serviceVarName= beanVarName+'Service';\n    \n}}package {{=pkgName}}.entity;\n$blankline\nimport io.swagger.annotations.ApiModel;\nimport io.swagger.annotations.ApiModelProperty;\nimport java.io.Serializable;\nimport java.util.Date;\n$blankline\n\n /**\n * {{=it.entity.defName}};{{=it.entity.comment}}\n * @author : http://www.chiner.pro\n * @date : {{=fullYear}}-{{=month}}-{{=days}}\n */\n@ApiModel(value = \"{{=it.entity.defName}}\",description = \"{{=it.entity.comment}}\")\npublic class {{=beanClass}} implements Serializable,Cloneable{\n{{~it.entity.fields:field:index}}\n    /** {{=it.func.join(field.defName,field.comment,';')}} */\n    @ApiModelProperty(name = \"{{=field.defName}}\",notes = \"{{=field.comment}}\")\n    private {{=field.type}} {{=it.func.camel(field.defKey,false)}} ;\n{{~}}\n$blankline\n\n{{~it.entity.fields:field:index}}\n    /** {{=it.func.join(field.defName,field.comment,';')}} */\n    public {{=field.type}} get{{=it.func.camel(field.defKey,true)}}(){\n        return this.{{=it.func.camel(field.defKey,false)}};\n    }\n    /** {{=it.func.join(field.defName,field.comment,';')}} */\n    public void set{{=it.func.camel(field.defKey,true)}}({{=field.type}} {{= it.func.camel(field.defKey,false) }}){\n        this.{{=it.func.camel(field.defKey,false)}}={{=it.func.camel(field.defKey,false)}};\n    }\n{{~}}\n}"
        },
        {
          "applyFor": "A2EE7B4A-CE62-4290-B00C-B26C1BF18073",
          "type": "appCode",
          "Controller": "{{  var today=new Date();\n    var fullYear=today.getFullYear();\n    var month=today.getMonth() + 1;\n    var days=today.getDate();\n    \n    var pkVarName = \"undefinedId\";\n    var pkDataType = \"String\";\n    it.entity.fields.forEach(function(field){\n        if(field.primaryKey){\n            pkVarName = it.func.camel(field.defKey,false);\n            pkDataType = field[\"type\"];\n            return;\n        }\n    });\n    \n    var pkgName = it.entity.env.base.nameSpace;\n    var beanClass = it.entity.env.base.codeRoot;\n    var beanVarName = beanClass.charAt(0).toLowerCase()+beanClass.slice(1);\n    var serviceClass = beanClass+'Service';\n    var serviceVarName= beanVarName+'Service';\n    \n}}package {{=pkgName}}.controller;\n$blankline\nimport java.util.List;\nimport io.swagger.annotations.Api;\nimport io.swagger.annotations.ApiOperation;\nimport org.springframework.beans.factory.annotation.Autowired;\nimport org.springframework.data.domain.PageImpl;\nimport org.springframework.data.domain.PageRequest;\nimport org.springframework.http.ResponseEntity;\nimport org.springframework.web.bind.annotation.*;\nimport {{=pkgName}}.entity.{{=beanClass}};\nimport {{=pkgName}}.service.{{=serviceClass}};\n$blankline\n\n /**\n * {{=it.entity.defName}};({{=it.entity.defKey}})表控制层\n * @author : http://www.chiner.pro\n * @date : {{=fullYear}}-{{=month}}-{{=days}}\n */\n@Api(tags = \"{{=it.entity.defName}}对象功能接口\")\n@RestController\n@RequestMapping(\"/{{=it.func.camel(it.entity.defKey,false)}}\")\npublic class {{=beanClass}}Controller{\n    @Autowired\n    private {{=serviceClass}} {{=serviceVarName}};\n    $blankline\n    /** \n     * 通过ID查询单条数据 \n     *\n     * @param {{=pkVarName}} 主键\n     * @return 实例对象\n     */\n    @ApiOperation(\"通过ID查询单条数据\")\n    @GetMapping(\"{{{=it.func.camel(pkVarName,false)}}}\")\n    public ResponseEntity<{{=beanClass}}> queryById({{=pkDataType}} {{=pkVarName}}){\n        return ResponseEntity.ok({{=serviceVarName}}.queryById({{=pkVarName}}));\n    }\n    $blankline\n    /** \n     * 分页查询\n     *\n     * @param {{=beanVarName}} 筛选条件\n     * @param pageRequest 分页对象\n     * @return 查询结果\n     */\n    @ApiOperation(\"分页查询\")\n    @GetMapping\n    public ResponseEntity<PageImpl<{{=beanClass}}>> paginQuery({{=beanClass}} {{=beanVarName}}, PageRequest pageRequest){\n        //1.分页参数\n        long current = pageRequest.getPageNumber();\n        long size = pageRequest.getPageSize();\n\n        //2.分页查询\n        /*把Mybatis的分页对象做封装转换，MP的分页对象上有一些SQL敏感信息，还是通过spring的分页模型来封装数据吧*/\n        com.baomidou.mybatisplus.extension.plugins.pagination.Page<{{=beanClass}}> pageResult = {{=serviceVarName}}.paginQuery({{=beanVarName}}, current,size);\n\n        //3. 分页结果组装\n        List<{{=beanClass}}> dataList = pageResult.getRecords();\n        long total = pageResult.getTotal();\n        PageImpl<{{=beanClass}}> retPage = new PageImpl<{{=beanClass}}>(dataList,pageRequest,total);\n        return ResponseEntity.ok(retPage);\n    }\n    $blankline\n    /** \n     * 新增数据\n     *\n     * @param {{=beanVarName}} 实例对象\n     * @return 实例对象\n     */\n    @ApiOperation(\"新增数据\")\n    @PostMapping\n    public ResponseEntity<{{=beanClass}}> add({{=beanClass}} {{=beanVarName}}){\n        return ResponseEntity.ok({{=serviceVarName}}.insert({{=beanVarName}}));\n    }\n    $blankline\n    /** \n     * 更新数据\n     *\n     * @param {{=beanVarName}} 实例对象\n     * @return 实例对象\n     */\n    @ApiOperation(\"更新数据\")\n    @PutMapping\n    public ResponseEntity<{{=beanClass}}> edit({{=beanClass}} {{=beanVarName}}){\n        return ResponseEntity.ok({{=serviceVarName}}.update({{=beanVarName}}));\n    }\n    $blankline\n    /** \n     * 通过主键删除数据\n     *\n     * @param {{=pkVarName}} 主键\n     * @return 是否成功\n     */\n    @ApiOperation(\"通过主键删除数据\")\n    @DeleteMapping\n    public ResponseEntity<Boolean> deleteById({{=pkDataType}} {{=pkVarName}}){\n        return ResponseEntity.ok({{=serviceVarName}}.deleteById({{=pkVarName}}));\n    }\n}",
          "Service": "{{  var today=new Date();\n    var fullYear=today.getFullYear();\n    var month=today.getMonth() + 1;\n    var days=today.getDate();\n    \n    var pkVarName = \"undefinedId\";\n    var pkDataType = \"String\";\n    it.entity.fields.forEach(function(field){\n        if(field.primaryKey){\n            pkVarName = it.func.camel(field.defKey,false);\n            pkDataType = field[\"type\"];\n            return;\n        }\n    });\n    \n    var pkgName = it.entity.env.base.nameSpace;\n    var beanClass = it.entity.env.base.codeRoot;\n    var beanVarName = beanClass.charAt(0).toLowerCase()+beanClass.slice(1);\n    var serviceClass = beanClass+'Service';\n    var serviceVarName= beanVarName+'Service';\n    \n}}package {{=pkgName}}.service;\n$blankline\nimport com.baomidou.mybatisplus.extension.plugins.pagination.Page;\nimport {{=pkgName}}.entity.{{=beanClass}};\n$blankline\n\n /**\n * {{=it.entity.defName}};({{=it.entity.defKey}})表服务接口\n * @author : http://www.chiner.pro\n * @date : {{=fullYear}}-{{=month}}-{{=days}}\n */\npublic interface {{=serviceClass}}{\n    $blankline\n    /** \n     * 通过ID查询单条数据 \n     *\n     * @param {{=pkVarName}} 主键\n     * @return 实例对象\n     */\n    {{=beanClass}} queryById({{=pkDataType}} {{=pkVarName}});\n    $blankline\n    /**\n     * 分页查询\n     *\n     * @param {{=beanVarName}} 筛选条件\n     * @param current 当前页码\n     * @param size  每页大小\n     * @return\n     */\n    Page<{{=beanClass}}> paginQuery({{=beanClass}} {{=beanVarName}}, long current, long size);\n\n    /** \n     * 新增数据\n     *\n     * @param {{=beanVarName}} 实例对象\n     * @return 实例对象\n     */\n    {{=beanClass}} insert({{=beanClass}} {{=beanVarName}});\n\n    \n    /** \n     * 更新数据\n     *\n     * @param {{=beanVarName}} 实例对象\n     * @return 实例对象\n     */\n    {{=beanClass}} update({{=beanClass}} {{=beanVarName}});\n\n    /** \n     * 通过主键删除数据\n     *\n     * @param {{=pkVarName}} 主键\n     * @return 是否成功\n     */\n    boolean deleteById({{=pkDataType}} {{=pkVarName}});\n}",
          "ServiceImpl": "{{  var today=new Date();\n    var fullYear=today.getFullYear();\n    var month=today.getMonth() + 1;\n    var days=today.getDate();\n    \n    var pkVarName = \"undefinedId\";\n    var pkVarNameU = \"UndefinedId\";\n    var pkFieldKey = \"UNDEFINED\";\n    var pkDataType = \"String\";\n    it.entity.fields.forEach(function(field){\n        if(field.primaryKey){\n            pkFieldKey = field.defKey;\n            pkVarName = it.func.camel(field.defKey,false);\n            pkVarNameU = it.func.camel(field.defKey,true);\n            pkDataType = field[\"type\"];\n            return;\n        }\n    });\n    \n    var pkgName = it.entity.env.base.nameSpace;\n    var beanClass = it.entity.env.base.codeRoot;\n    var beanVarName = beanClass.charAt(0).toLowerCase()+beanClass.slice(1);\n    var serviceClass = beanClass+'Service';\n    var serviceVarName= beanVarName+'Service';\n    var mapperName = beanVarName+'Mapper';\n    \n}}package {{=pkgName}}.service.impl;\n$blankline\nimport cn.hutool.core.util.StrUtil;\nimport org.springframework.beans.factory.annotation.Autowired;\nimport org.springframework.stereotype.Service;\nimport com.baomidou.mybatisplus.core.metadata.IPage;\nimport com.baomidou.mybatisplus.extension.plugins.pagination.Page;\nimport com.baomidou.mybatisplus.core.conditions.query.LambdaQueryWrapper;\nimport com.baomidou.mybatisplus.extension.conditions.update.LambdaUpdateChainWrapper;\n\nimport {{=pkgName}}.entity.{{=beanClass}};\nimport {{=pkgName}}.mapper.{{=beanClass}}Mapper;\nimport {{=pkgName}}.service.{{=serviceClass}};\n\n /**\n * {{=it.entity.defName}};({{=it.entity.defKey}})表服务实现类\n * @author : http://www.chiner.pro\n * @date : {{=fullYear}}-{{=month}}-{{=days}}\n */\n@Service\npublic class {{=serviceClass}}Impl implements {{=serviceClass}}{\n    @Autowired\n    private {{=beanClass}}Mapper {{=mapperName}};\n    $blankline\n    /** \n     * 通过ID查询单条数据 \n     *\n     * @param {{=pkVarName}} 主键\n     * @return 实例对象\n     */\n    public {{=beanClass}} queryById({{=pkDataType}} {{=pkVarName}}){\n        return {{=mapperName}}.selectById({{=pkVarName}});\n    }\n    $blankline\n    /**\n     * 分页查询\n     *\n     * @param {{=beanVarName}} 筛选条件\n     * @param current 当前页码\n     * @param size  每页大小\n     * @return\n     */\n    public Page<{{=beanClass}}> paginQuery({{=beanClass}} {{=beanVarName}}, long current, long size){\n        //1. 构建动态查询条件\n        LambdaQueryWrapper<{{=beanClass}}> queryWrapper = new LambdaQueryWrapper<>();\n        {{~it.entity.fields.filter(function(e){return e[\"type\"]===\"String\"&&e.defKey !== pkFieldKey}):field:index}}\n        if(StrUtil.isNotBlank({{=beanVarName}}.get{{=it.func.camel(field.defKey,true)}}())){\n            queryWrapper.eq({{=beanClass}}::get{{=it.func.camel(field.defKey,true)}}, {{=beanVarName}}.get{{=it.func.camel(field.defKey,true)}}());\n        }\n        {{~}}\n\n        //2. 执行分页查询\n        Page<{{=beanClass}}> pagin = new Page<>(current , size , true);\n        IPage<{{=beanClass}}> selectResult = {{=mapperName}}.selectByPage(pagin , queryWrapper);\n        pagin.setPages(selectResult.getPages());\n        pagin.setTotal(selectResult.getTotal());\n        pagin.setRecords(selectResult.getRecords());\n\n        //3. 返回结果\n        return pagin;\n    }\n    $blankline\n    /** \n     * 新增数据\n     *\n     * @param {{=beanVarName}} 实例对象\n     * @return 实例对象\n     */\n    public {{=beanClass}} insert({{=beanClass}} {{=beanVarName}}){\n        {{=mapperName}}.insert({{=beanVarName}});\n        return {{=beanVarName}};\n    }\n    $blankline\n    /** \n     * 更新数据\n     *\n     * @param {{=beanVarName}} 实例对象\n     * @return 实例对象\n     */\n    public {{=beanClass}} update({{=beanClass}} {{=beanVarName}}){\n        //1. 根据条件动态更新\n        LambdaUpdateChainWrapper<{{=beanClass}}> chainWrapper = new LambdaUpdateChainWrapper<{{=beanClass}}>({{=mapperName}});\n        {{~it.entity.fields.filter(function(e){return e[\"type\"]===\"String\"&&e.defKey !== pkFieldKey}):field:index}}\n        if(StrUtil.isNotBlank({{=beanVarName}}.get{{=it.func.camel(field.defKey,true)}}())){\n            chainWrapper.eq({{=beanClass}}::get{{=it.func.camel(field.defKey,true)}}, {{=beanVarName}}.get{{=it.func.camel(field.defKey,true)}}());\n        }\n        {{~}}\n        //2. 设置主键，并更新\n        chainWrapper.set({{=beanClass}}::get{{=pkVarNameU}}, {{=beanVarName}}.get{{=pkVarNameU}}());\n        boolean ret = chainWrapper.update();\n        //3. 更新成功了，查询最最对象返回\n        if(ret){\n            return queryById({{=beanVarName}}.get{{=pkVarNameU}}());\n        }else{\n            return {{=beanVarName}};\n        }\n    }\n    $blankline\n    /** \n     * 通过主键删除数据\n     *\n     * @param {{=pkVarName}} 主键\n     * @return 是否成功\n     */\n    public boolean deleteById({{=pkDataType}} {{=pkVarName}}){\n        int total = {{=mapperName}}.deleteById({{=pkVarName}});\n        return total > 0;\n    }\n}",
          "Mapper": "{{  var today=new Date();\n    var fullYear=today.getFullYear();\n    var month=today.getMonth() + 1;\n    var days=today.getDate();\n    \n    var pkVarName = \"undefinedId\";\n    var pkDataType = \"String\";\n    it.entity.fields.forEach(function(field){\n        if(field.primaryKey){\n            pkVarName = it.func.camel(field.defKey,false);\n            pkDataType = field[\"type\"];\n            return;\n        }\n    });\n    \n    var pkgName = it.entity.env.base.nameSpace;\n    var beanClass = it.entity.env.base.codeRoot;\n    var beanVarName = beanClass.charAt(0).toLowerCase()+beanClass.slice(1);\n    var serviceClass = beanClass+'Service';\n    var serviceVarName= beanVarName+'Service';\n    \n}}package {{=pkgName}}.mapper;\n$blankline\n\nimport com.baomidou.mybatisplus.core.conditions.Wrapper;\nimport com.baomidou.mybatisplus.core.mapper.BaseMapper;\nimport com.baomidou.mybatisplus.core.metadata.IPage;\nimport com.baomidou.mybatisplus.core.toolkit.Constants;\nimport org.apache.ibatis.annotations.Mapper;\nimport org.apache.ibatis.annotations.Param;\nimport {{=pkgName}}.entity.{{=beanClass}};\n$blankline\n\n /**\n * {{=it.entity.defName}};({{=it.entity.defKey}})表数据库访问层\n * @author : http://www.chiner.pro\n * @date : {{=fullYear}}-{{=month}}-{{=days}}\n */\n@Mapper\npublic interface {{=beanClass}}Mapper  extends BaseMapper<{{=beanClass}}>{\n    /** \n     * 分页查询指定行数据\n     *\n     * @param page 分页参数\n     * @param wrapper 动态查询条件\n     * @return 分页对象列表\n     */\n    IPage<{{=beanClass}}> selectByPage(IPage<{{=beanClass}}> page , @Param(Constants.WRAPPER) Wrapper<{{=beanClass}}> wrapper);\n}",
          "Mapper.xml": "{{  var today=new Date();\n    var fullYear=today.getFullYear();\n    var month=today.getMonth() + 1;\n    var days=today.getDate();\n    \n    var pkVarName = \"undefinedId\";\n    var pkDataType = \"String\";\n    var pkField = \"UNDEFINED_ID\";\n    it.entity.fields.forEach(function(field){\n        if(field.primaryKey){\n            pkField = field.defKey;\n            pkVarName = it.func.camel(field.defKey,false);\n            pkDataType = field[\"type\"];\n            return;\n        }\n    });\n    \n    var pkgName = it.entity.env.base.nameSpace;\n    var beanClass = it.entity.env.base.codeRoot;\n    var beanVarName = beanClass.charAt(0).toLowerCase()+beanClass.slice(1);\n    var serviceClass = beanClass+'Service';\n    var serviceVarName= beanVarName+'Service';\n    \n}}<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<!DOCTYPE mapper PUBLIC \"-//mybatis.org//DTD Mapper 3.0//EN\" \"http://mybatis.org/dtd/mybatis-3-mapper.dtd\">\n$blankline\n\n<mapper namespace=\"{{=pkgName}}.mapper.{{=beanClass}}Mapper\">\n     <select id=\"selectByPage\" resultType=\"{{=pkgName}}.entity.{{=beanClass}}\">\n        select * from user ${ew.customSqlSegment}\n    </select>\n</mapper>\n\n",
          "Entity": "{{  var today=new Date();\n    var fullYear=today.getFullYear();\n    var month=today.getMonth() + 1;\n    var days=today.getDate();\n    \n    var pkVarName = \"undefinedId\";\n    var pkDataType = \"String\";\n    it.entity.fields.forEach(function(field){\n        if(field.primaryKey){\n            pkVarName = it.func.camel(field.defKey,false);\n            pkDataType = field[\"type\"];\n            return;\n        }\n    });\n    \n    var pkgName = it.entity.env.base.nameSpace;\n    var beanClass = it.entity.env.base.codeRoot;\n    var beanVarName = beanClass.charAt(0).toLowerCase()+beanClass.slice(1);\n    var serviceClass = beanClass+'Service';\n    var serviceVarName= beanVarName+'Service';\n    \n}}package {{=pkgName}}.entity;\n$blankline\nimport io.swagger.annotations.ApiModel;\nimport io.swagger.annotations.ApiModelProperty;\nimport com.baomidou.mybatisplus.annotation.TableName;\nimport com.baomidou.mybatisplus.annotation.TableId;\nimport java.io.Serializable;\nimport java.util.Date;\n$blankline\n\n /**\n * {{=it.entity.defName}};{{=it.entity.comment}}\n * @author : http://www.chiner.pro\n * @date : {{=fullYear}}-{{=month}}-{{=days}}\n */\n@ApiModel(value = \"{{=it.entity.defName}}\",description = \"{{=it.entity.comment}}\")\n@TableName(\"{{=it.entity.defKey}}\")\npublic class {{=beanClass}} implements Serializable,Cloneable{\n{{~it.entity.fields:field:index}}\n    /** {{=it.func.join(field.defName,field.comment,';')}} */\n    @ApiModelProperty(name = \"{{=field.defName}}\",notes = \"{{=field.comment}}\")\n    {{? field.primaryKey }}\n    @TableId\n    {{?}}\n    private {{=field.type}} {{=it.func.camel(field.defKey,false)}} ;\n{{~}}\n$blankline\n\n{{~it.entity.fields:field:index}}\n    /** {{=it.func.join(field.defName,field.comment,';')}} */\n    public {{=field.type}} get{{=it.func.camel(field.defKey,true)}}(){\n        return this.{{=it.func.camel(field.defKey,false)}};\n    }\n    /** {{=it.func.join(field.defName,field.comment,';')}} */\n    public void set{{=it.func.camel(field.defKey,true)}}({{=field.type}} {{= it.func.camel(field.defKey,false) }}){\n        this.{{=it.func.camel(field.defKey,false)}}={{=it.func.camel(field.defKey,false)}};\n    }\n{{~}}\n}"
        },
        {
          "applyFor": "29D1CE08-4C35-4D2D-AAA9-23D93305B52E",
          "type": "dbDDL",
          "createTable": "DROP TABLE IF EXISTS {{=it.entity.defKey}};\nCREATE TABLE {{=it.entity.defKey}}(\n{{ pkList = [] ; }}\n{{~it.entity.fields:field:index}}\n    {{? field.primaryKey }}{{ pkList.push(field.defKey) }}{{?}}\n    {{=field.defKey}} {{=field.dbType}}{{?field.len>0}}{{='('}}{{=field.len}}{{?field.scale>0}}{{=','}}{{=field.scale}}{{?}}{{=')'}}{{?}} {{= field.notNull ? 'NOT NULL' : '' }} {{= field.autoIncrement ? 'AUTO_INCREMENT' : '' }} {{= field.defaultValue ? it.func.join('DEFAULT',field.defaultValue,' ') : '' }} COMMENT '{{=it.func.join(field.defName,field.comment,';')}}' {{= index < it.entity.fields.length-1 ? ',' : ( pkList.length>0 ? ',' :'' ) }}\n{{~}}\n{{? pkList.length >0 }}\n    PRIMARY KEY ({{~pkList:pkName:i}}{{= pkName }}{{= i<pkList.length-1 ? ',' : '' }}{{~}})\n{{?}}\n)  COMMENT = '{{=it.func.join(it.entity.defName,it.entity.comment,';') }}';\n$blankline\n",
          "createView": "CREATE VIEW {{=it.view.defKey}} AS\nSELECT \n{{~it.view.fields:field:index}}\n    {{=field.refEntity}}.{{=field.refEntityField}} AS {{=field.defKey}}{{= index < it.view.fields.length-1 ? ',' : ''}}\n{{~}}\nFROM {{~it.view.refEntities:refEntity:index}}{{=refEntity}}{{= index < it.view.refEntities.length-1 ? ',' : ''}}{{~}};\n$blankline\n",
          "deleteTable": "DROP TABLE IF EXISTS {{=it.entity.defKey}};",
          "createIndex": "{{~ it.entity.indexes:index}}\nCREATE {{? index.unique}}UNIQUE {{?}}INDEX {{=index.defKey}} ON {{=it.entity.defKey}}({{ fieldsKeys = index.fields.map(function(field){return field.fieldDefKey}) ; }}{{=it.func.join(...fieldsKeys,',')}});\n{{~}}",
          "deleteIndex": "{{~ it.entity.indexes:index}}\nDROP INDEX {{=index.defKey}} ;\n{{~}}",
          "message": "{{\n    let createEntities = it.changes.filter(function(row){return (row.opt==='add'&&row['type']==='entity');});\n    let dropEntities   = it.changes.filter(function(row){return (row.opt==='delete'&&row['type']==='entity');});\n    let modifyEntities = it.changes.filter(function(row){return (row.opt==='update'&&row['type']==='entity');});\n    \n    function baseChanged(beforeAfter){\n        if(beforeAfter == null){\n            return '';\n        }\n        let ret = [];\n        let before = beforeAfter.before || {\"defKey\":\"\",\"defName\":\"\",\"comment\":\"\"};\n        let after = beforeAfter.after || {\"defKey\":\"\",\"defName\":\"\",\"comment\":\"\"};\n        if(before.defKey !== after.defKey){\n            ret.push('代码:'+(before.defKey||'NULL')+'->'+(after.defKey||'NULL'));\n        }\n        if(before.defName !== after.defName){\n            ret.push('显示名称:'+(before.defName||'NULL')+'->'+(after.defName||'NULL'));\n        }\n        if(before.comment !== after.comment){\n            ret.push('说明:'+(before.comment||'NULL')+'->'+(after.comment||'NULL'));\n        }\n        if(ret.length>0){\n            return '    基本信息:\\n\\t'+ret.join('\\n\\t');\n        }\n        return '';\n    };\n    \n    function buildAddedDesc(entity){\n        let ret = [];\n        let fieldAdded = entity.data.fieldAdded||[];\n        \n        for (let field of fieldAdded) { \n            let row = [];\n            row.push(field.defKey+'['+field.defName+']');\n            ret.push(row.join(\"\"))\n        }\n        return ret;\n    };\n    \n    function buildRemovedDesc(entity){\n        let ret = [];\n        let fieldRemoved = entity.data.fieldRemoved||[];\n        \n        for (let field of fieldRemoved) { \n            let row = [];\n            row.push(field.defKey+'['+field.defName+']');\n            ret.push(row.join(\"\"))\n        }\n        return ret;\n    };\n    \n    function buildModifiedDesc(entity){\n        let ret = [];\n        let fieldModified = entity.data.fieldModified||[];\n        \n        for (let field1 of fieldModified) { \n            let row = [];\n            let field = field1.before;\n            row.push(field.defKey+'['+field.defName+']');\n            ret.push(row.join(\"\"))\n        }\n        return ret;\n    };\n}}\n\n\n{{? createEntities && createEntities.length > 0}}\n/* --------------- 创建表 --------------- */\n{{~ createEntities:entity}}\n{{=entity.data.defKey}}[{{=entity.data.defName}}]\n{{~}}\n{{?}}\n\n\n{{? dropEntities && dropEntities.length > 0}}\n/* --------------- 删除表 --------------- */\n{{~ dropEntities:entity}}\n{{=entity.data.defKey}}[{{=entity.data.defName}}]\n{{~}}\n{{?}}\n\n{{? modifyEntities && modifyEntities.length > 0}}\n/* --------------- 修改表 --------------- */\n{{~ modifyEntities:entity}}\n{{=entity.data.baseInfo.defKey}}[{{=entity.data.baseInfo.defName}}]{{let changeText=baseChanged(entity.data.baseChanged);}}\n{{=baseChanged(entity.data.baseChanged)}}\n    {{? entity.data.fieldModified && entity.data.fieldModified.length > 0}}\n    修改字段：\n    {{='\\t'}}{{=buildModifiedDesc(entity).join('\\n\\t')}}{{?}}{{\n        /*计算是否调整了属性*/\n        let propAdded = entity.data.propAdded || [];\n        let propRemoved = entity.data.propRemoved || [];\n        let propModified = entity.data.propModified || [];\n        let changed = propAdded.length>0 || propRemoved.length>0 || propModified.length>0;\n        /*计算关联是否调整*/\n        let refEntityAdd = entity.data.refEntityAdd || [];\n        let refEntityRemoved = entity.data.refEntityRemoved || [];\n        let relaArray = [];\n        for (let rela of refEntityAdd) {\n            relaArray.push('建立关联:'+rela.defKey+'['+rela.defName+']');\n        }\n        for (let rela of refEntityRemoved) {\n            relaArray.push('解除关联:'+rela.defKey+'['+rela.defName+']');\n        }\n        /*索引是否修改过*/\n        let indexChanged = entity.data.indexChanged;\n    }}{{=indexChanged?'\\n\\t更改了索引':''}}{{=changed?'\\n\\t更改了属性':''}}{{=relaArray.length>0?('\\n\\t'+relaArray.join('\\n\\t')):''}}\n{{? entity.data.fieldAdded && entity.data.fieldAdded.length > 0}}\n    添加字段：\n{{='\\t'}}{{=buildAddedDesc(entity).join('\\n\\t')}}\n{{?}}{{? entity.data.fieldRemoved && entity.data.fieldRemoved.length > 0}}\n    删除字段：\n{{='\\t'}}{{=buildRemovedDesc(entity).join('\\n\\t')}}\n{{?}}\n{{~}}\n{{?}}\n",
          "update": "{{\n    let createEntities = it.changes.filter(function(row){return (row.opt==='add'&&row['type']==='entity');});\n    let dropEntities   = it.changes.filter(function(row){return (row.opt==='delete'&&row['type']==='entity');});\n    let modifyEntities = it.changes.filter(function(row){return (row.opt==='update'&&row['type']==='entity');});\n    \n    function baseChangedDDL(beforeAfter){\n        if(beforeAfter == null){\n            return '';\n        }\n        let ret = [];\n        let before = beforeAfter.before || {\"defKey\":\"\",\"defName\":\"\",\"comment\":\"\"};\n        let after = beforeAfter.after || {\"defKey\":\"\",\"defName\":\"\",\"comment\":\"\"};\n        if(before.defKey !== after.defKey){\n            ret.push('ALTER TABLE '+before.defKey+' RENAME TO '+after.defKey);\n        }\n        let commentText = '';\n        let commentChanged = false;\n        if(before.defName !== after.defName){\n            commentText = after.defName;\n            commentChanged = true;\n        }\n        if(before.comment !== after.comment){\n            commentChanged = true;\n            if(commentText){\n                commentText = (commentText+ ';'+after.comment)\n            }else{\n                commentText = after.comment\n            }\n        }\n        if(commentChanged){\n            ret.push('ALTER TABLE '+after.defKey+' COMMENT \\''+commentText+'\\'');\n        }\n        let baseText = '-- 基本信息:\\n';\n        return baseText+ret.join(';\\n')+';';\n    };\n    \n    function buildAddedDDL(entity){\n        let ret = [];\n        let fieldAdded = entity.data.fieldAdded||[];\n        if(fieldAdded.length == 0){\n            return '';\n        }\n        \n        let firstDDL = 'ALTER TABLE '+entity.data.baseInfo.defKey;\n        for (let field of fieldAdded) { \n            let ddlItem = 'ADD COLUMN '+field.defKey+' '+field.dbType;\n            /*处理数据类型长度*/\n            if(field.len>0){\n                ddlItem += ('('+field.len);\n                if(parseInt(field.scale)>0){\n                    ddlItem += (','+field.scale);\n                }\n                ddlItem += ')';\n            }\n            if(field.notNull){\n                ddlItem += ' NOT NULL';\n            }\n            if(field.autoIncrement){\n                ddlItem += ' AUTO_INCREMENT';\n            }\n            if(field.defaultValue){\n                ddlItem += (' DEFAULT' + field.defaultValue);\n            }\n            ddlItem += (' COMMENT \\''+field.defName+';'+field.comment+'\\'');\n            \n            if(field.index>0 && field.afterFieldKey){\n                ddlItem += (' AFTER '+field.afterFieldKey);\n            }\n            ret.push(ddlItem);\n        }\n        return firstDDL+'\\n'+ret.join(',\\n');\n    };\n    \n    function buildRemovedDDL(entity){\n        let ret = [];\n        let fieldRemoved = entity.data.fieldRemoved||[];\n        if(fieldRemoved.length == 0){\n            return '';\n        }\n        \n        let firstDDL = 'ALTER TABLE '+entity.data.baseInfo.defKey;\n        for (let field of fieldRemoved) { \n            ret.push('DROP '+field.defKey);\n        }\n        return firstDDL+'\\n'+ret.join(',\\n');\n    };\n    \n    function buildModifiedDDL(entity){\n        let ret = [];\n        let fieldModified = entity.data.fieldModified||[];\n        \n        let firstDDL = 'ALTER TABLE '+entity.data.baseInfo.defKey;\n        for (let field of fieldModified) { \n            let changeDDL = '';\n            let before = field.before || {};\n            let after = field.after || {};\n            if(before.defKey === after.defKey){\n                changeDDL += (' MODIFY COLUMN '+after.defKey);\n            }else{\n                changeDDL += (' CHANGE COLUMN '+before.defKey+' '+after.defKey);\n            }\n            changeDDL += (' '+after.dbType);\n            if(after.len>0){\n                changeDDL += ('('+after.len);\n                if(parseInt(after.scale)>0){\n                    changeDDL += (','+after.scale);\n                }\n                changeDDL += ')';\n            }\n            if(after.notNull){\n                changeDDL += ' NOT NULL';\n            }\n            let defaultValue = '';\n            if(after.defaultValue != null && after.defaultValue.length>0){\n                defaultValue = (after.defaultValue);\n            }else{\n                defaultValue = 'NULL';\n            }\n            changeDDL += (' DEFAULT ' + defaultValue);\n            let comment = after.comment||'';\n            changeDDL += (' COMMENT \\''+comment+'\\';');\n            ret.push(firstDDL+' '+changeDDL);\n        }\n        return ret;\n    };\n}}\n{{? createEntities && createEntities.length > 0}}\n/* --------------- 创建表 --------------- */\n{{~ createEntities:entity}}\n{{=it.func.createDDL(entity.data,entity['type'])}}\n{{~}}\n{{?}}\n\n\n{{? dropEntities && dropEntities.length > 0}}\n/* --------------- 删除表 --------------- */\n{{~ dropEntities:entity}}\n{{=it.func.dropDDL(entity.data,entity['type'])}}\n{{~}}\n{{?}}\n\n\n{{? modifyEntities && modifyEntities.length > 0}}\n{{~ modifyEntities:entity}}\n/* --------------- 修改表 --------------- */\n-- 修改表：{{=entity.data.baseInfo.defKey}}[{{=entity.data.baseInfo.defName}}]\n{{=baseChangedDDL(entity.data.baseChanged)}}\n{{? entity.data.fieldModified && entity.data.fieldModified.length > 0}}\n-- 修改字段：\n{{=buildModifiedDDL(entity).join('\\n')}}\n{{?}}{{\n/*索引是否修改过*/\nlet indexChanged = entity.data.indexChanged;\n}}\n{{? indexChanged }}\n{{=it.func.indexRebuildDDL(entity.data.baseInfo,entity.data.newIndexes,entity.data.fullFields,entity['type'])}}\n{{?}}\n\n{{? entity.data.fieldAdded && entity.data.fieldAdded.length > 0}}\n-- 添加字段：\n{{=buildAddedDDL(entity)}};\n{{?}}\n\n{{? entity.data.fieldRemoved && entity.data.fieldRemoved.length > 0}}\n-- 删除字段：\n{{=buildRemovedDDL(entity)}};\n{{?}}\n{{~}}\n{{?}}"
        },
        {
          "applyFor": "A4E23CB7-BB01-4BD1-9F71-F73F3E15A542",
          "type": "dbDDL",
          "createTable": "CREATE TABLE {{=it.entity.defKey}}(\n{{ pkList = [] ; }}\n{{~it.entity.fields:field:index}}\n    {{? field.primaryKey }}{{ pkList.push(field.defKey) }}{{?}}\n    {{=field.defKey}} {{=field.type}}{{?field.len>0}}{{='('}}{{=field.len}}{{?field.scale>0}}{{=','}}{{=field.scale}}{{?}}{{=')'}}{{?}}{{= field.defaultValue ? it.func.join(' DEFAULT ',field.defaultValue,' ') : '' }}{{= field.notNull ? ' NOT NULL' : '' }}{{= field.autoIncrement ? '' : '' }}{{= index < it.entity.fields.length-1 ? ',' : ( pkList.length>0 ? ',' :'' ) }}\n{{~}}\n{{? pkList.length >0 }}\n    PRIMARY KEY ({{~pkList:pkName:i}}{{= pkName }}{{= i<pkList.length-1 ? ',' : '' }}{{~}})\n{{?}}\n);\n$blankline\n{{? it.entity.defKey || it.entity.defName}}COMMENT ON TABLE {{=it.entity.defKey}} IS '{{=it.func.join(it.entity.defName,it.entity.comment,';')}}';{{?}}\n{{~it.entity.fields:field:index}}\n{{? field.defName || field.comment}}COMMENT ON COLUMN {{=it.entity.defKey}}.{{=field.defKey}} IS '{{=it.func.join(field.defName,field.comment,';')}}';{{?}}\n{{~}}",
          "createView": "CREATE VIEW {{=it.view.defKey}} AS\nSELECT \n{{~it.view.fields:field:index}}\n    {{=field.refEntity}}.{{=field.refEntityField}} AS {{=field.defKey}}{{= index < it.view.fields.length-1 ? ',' : ''}}\n{{~}}\nFROM {{~it.view.refEntities:refEntity:index}}{{=refEntity}}{{= index < it.view.refEntities.length-1 ? ',' : ''}}{{~}};\n$blankline\n",
          "deleteTable": "DROP TABLE {{=it.entity.defKey}};",
          "createIndex": "{{~ it.entity.indexes:index}}\nCREATE {{? index.unique}}UNIQUE {{?}}INDEX {{=index.defKey}} ON {{=it.entity.defKey}}({{ fieldsKeys = index.fields.map(function(field){return field.fieldDefKey}) ; }}{{=it.func.join(...fieldsKeys,',')}});\n{{~}}",
          "deleteIndex": "{{~ it.entity.indexes:index}}\nDROP INDEX {{=index.defKey}} ;\n{{~}}",
          "message": "{{\n    let createEntities = it.changes.filter(function(row){return (row.opt==='add'&&row['type']==='entity');});\n    let dropEntities   = it.changes.filter(function(row){return (row.opt==='delete'&&row['type']==='entity');});\n    let modifyEntities = it.changes.filter(function(row){return (row.opt==='update'&&row['type']==='entity');});\n    \n    function baseChanged(beforeAfter){\n        if(beforeAfter == null){\n            return '';\n        }\n        let ret = [];\n        let before = beforeAfter.before || {\"defKey\":\"\",\"defName\":\"\",\"comment\":\"\"};\n        let after = beforeAfter.after || {\"defKey\":\"\",\"defName\":\"\",\"comment\":\"\"};\n        if(before.defKey !== after.defKey){\n            ret.push('代码:'+(before.defKey||'NULL')+'->'+(after.defKey||'NULL'));\n        }\n        if(before.defName !== after.defName){\n            ret.push('显示名称:'+(before.defName||'NULL')+'->'+(after.defName||'NULL'));\n        }\n        if(before.comment !== after.comment){\n            ret.push('说明:'+(before.comment||'NULL')+'->'+(after.comment||'NULL'));\n        }\n        if(ret.length>0){\n            return '    基本信息:\\n\\t'+ret.join('\\n\\t');\n        }\n        return '';\n    };\n    \n    function buildAddedDesc(entity){\n        let ret = [];\n        let fieldAdded = entity.data.fieldAdded||[];\n        \n        for (let field of fieldAdded) { \n            let row = [];\n            row.push(field.defKey+'['+field.defName+']');\n            ret.push(row.join(\"\"))\n        }\n        return ret;\n    };\n    \n    function buildRemovedDesc(entity){\n        let ret = [];\n        let fieldRemoved = entity.data.fieldRemoved||[];\n        \n        for (let field of fieldRemoved) { \n            let row = [];\n            row.push(field.defKey+'['+field.defName+']');\n            ret.push(row.join(\"\"))\n        }\n        return ret;\n    };\n    \n    function buildModifiedDesc(entity){\n        let ret = [];\n        let fieldModified = entity.data.fieldModified||[];\n        \n        for (let field1 of fieldModified) { \n            let row = [];\n            let field = field1.before;\n            row.push(field.defKey+'['+field.defName+']');\n            ret.push(row.join(\"\"))\n        }\n        return ret;\n    };\n}}\n{{? createEntities && createEntities.length > 0}}\n/* -------------------------------------------------- */\n创建表：\n{{~ createEntities:entity}}\n    {{=entity.data.defKey}}[{{=entity.data.defName}}]\n{{~}}\n{{?}}\n\n\n{{? dropEntities && dropEntities.length > 0}}\n/* -------------------------------------------------- */\n删除表：\n{{~ dropEntities:entity}}\n    {{=entity.data.defKey}}[{{=entity.data.defName}}]\n{{~}}\n{{?}}\n\n\n{{? modifyEntities && modifyEntities.length > 0}}\n{{~ modifyEntities:entity}}\n/* -------------------------------------------------- */\n修改表：{{=entity.data.baseInfo.defKey}}[{{=entity.data.baseInfo.defName}}]{{let changeText=baseChanged(entity.data.baseChanged);}}\n{{=baseChanged(entity.data.baseChanged)}}\n    {{? entity.data.fieldAdded && entity.data.fieldAdded.length > 0}}\n    添加字段：\n    {{='\\t'}}{{=buildAddedDesc(entity).join('\\n\\t')}}\n    {{?}}{{? entity.data.fieldRemoved && entity.data.fieldRemoved.length > 0}}\n    删除字段：\n    {{='\\t'}}{{=buildRemovedDesc(entity).join('\\n\\t')}}\n    {{?}}{{? entity.data.fieldModified && entity.data.fieldModified.length > 0}}\n    修改字段：\n    {{='\\t'}}{{=buildModifiedDesc(entity).join('\\n\\t')}}\n    {{?}}{{\n        /*计算是否调整了属性*/\n        let propAdded = entity.data.propAdded || [];\n        let propRemoved = entity.data.propRemoved || [];\n        let propModified = entity.data.propModified || [];\n        let changed = propAdded.length>0 || propRemoved.length>0 || propModified.length>0;\n        /*计算关联是否调整*/\n        let refEntityAdd = entity.data.refEntityAdd || [];\n        let refEntityRemoved = entity.data.refEntityRemoved || [];\n        let relaArray = [];\n        for (let rela of refEntityAdd) {\n            relaArray.push('\\n\\t建立关联:'+rela.defKey+'['+rela.defName+']');\n        }\n        for (let rela of refEntityRemoved) {\n            relaArray.push('\\n\\t解除关联:'+rela.defKey+'['+rela.defName+']');\n        }\n        /*索引是否修改过*/\n        let indexChanged = entity.data.indexChanged;\n    }}\n{{=indexChanged?'\\n\\t更改了索引':''}}\n{{=changed?'\\n\\t更改了属性':''}}\n{{=relaArray.length>0?relaArray.join(''):''}}\n{{~}}\n{{?}}",
          "update": "{{\n    let createEntities = it.changes.filter(function(row){return (row.opt==='add'&&row['type']==='entity');});\n    let dropEntities   = it.changes.filter(function(row){return (row.opt==='delete'&&row['type']==='entity');});\n    let modifyEntities = it.changes.filter(function(row){return (row.opt==='update'&&row['type']==='entity');});\n    \n    function baseChangedDDL(beforeAfter){\n        if(beforeAfter == null){\n            return '';\n        }\n        let ret = [];\n        let before = beforeAfter.before || {\"defKey\":\"\",\"defName\":\"\",\"comment\":\"\"};\n        let after = beforeAfter.after || {\"defKey\":\"\",\"defName\":\"\",\"comment\":\"\"};\n        if(before.defKey !== after.defKey){\n            ret.push(`ALTER TABLE ${before.defKey} RENAME TO ${after.defKey}`);\n        }\n        let commentText = '';\n        let commentChanged = false;\n        if(before.defName !== after.defName){\n            commentText = after.defName;\n            commentChanged = true;\n        }\n        if(before.comment !== after.comment){\n            commentChanged = true;\n            if(commentText){\n                commentText = (commentText+ ';'+after.comment)\n            }else{\n                commentText = after.comment\n            }\n        }\n        if(commentChanged){\n            let myText = `COMMENT ON TABLE ${after.defKey} IS '${commentText}'`;\n            ret.push(myText);\n        }\n        let baseText = '-- 基本信息:\\n';\n        return baseText+ret.join(';\\n')+';';\n    };\n    \n    function buildAddedDDL(entity){\n        let ret = [];\n        let fieldAdded = entity.data.fieldAdded||[];\n        if(fieldAdded.length == 0){\n            return '';\n        }\n        \n        let firstDDL = `ALTER TABLE ${entity.data.baseInfo.defKey}`;\n        for (let field of fieldAdded) { \n            let ddlItem = `ADD (${field.defKey} ${field.dbType}`;\n            /*处理数据类型长度*/\n            if(field.len>0){\n                ddlItem += ('('+field.len);\n                if(parseInt(field.scale)>0){\n                    ddlItem += (','+field.scale);\n                }\n                ddlItem += ')';\n            }\n            let defaultValue = field.defaultValue;\n            defaultValue = (defaultValue==null)?\"\":(\"\"+defaultValue);\n            if(defaultValue.length>0){\n                ddlItem += (' DEFAULT ' + defaultValue);\n            }\n            if(field.notNull){\n                ddlItem += ' NOT NULL';\n            }\n            ddlItem += ')';\n            ret.push(`${firstDDL} ${ddlItem}`);\n            \n            /*处理字段注释*/\n            let fieldComments = [];\n            if(field.defName != null &&field.defName.length>0){\n                fieldComments.push(field.defName);\n            }\n            if(field.comment != null &&field.comment.length>0){\n                fieldComments.push(field.comment);\n            }\n            let commentText = fieldComments.join(';');\n            if(commentText != null && commentText.length > 0){\n                let commentDDL = `COMMENT ON COLUMN ${entity.data.baseInfo.defKey}.${field.defKey} IS '${commentText}'`;\n                 ret.push(commentDDL);\n            }\n        }\n        return '\\n'+ret.join(';\\n');\n    };\n    \n    function buildRemovedDDL(entity){\n        let ret = [];\n        let fieldRemoved = entity.data.fieldRemoved||[];\n        if(fieldRemoved.length == 0){\n            return '';\n        }\n        \n        let firstDDL = `ALTER TABLE ${entity.data.baseInfo.defKey}`;\n        for (let field of fieldRemoved) { \n            ret.push(`${firstDDL} DROP COLUMN ${field.defKey}`);\n        }\n        return '\\n'+ret.join(';\\n');\n    };\n    \n    function buildModifiedDDL(entity){\n        let ret = [];\n        let fieldModified = entity.data.fieldModified||[];\n        \n        let firstDDL = `ALTER TABLE ${entity.data.baseInfo.defKey}`;\n        for (let field of fieldModified) { \n            let changeDDL = '';\n            let before = field.before || {};\n            let after = field.after || {};\n            if(before.defKey !== after.defKey){\n                let renameText = `ALTER TABLE ${entity.data.baseInfo.defKey} RENAME COLUMN ${before.defKey} TO ${after.defKey};`;\n                ret.push(renameText);\n            }\n            /*如果没有变化，则不生成变更语句*/\n            if(before.dbType === after.dbType \n            && before['len'] === after['len'] \n            && before.scale === after.scale\n            && before.primaryKey === after.primaryKey\n            && before.notNull === after.notNull\n            && before.autoIncrement === after.autoIncrement\n            && before.defaultValue === after.defaultValue){\n                continue;\n            }\n            changeDDL += ('MODIFY ('+after.defKey+'');\n            changeDDL += (' '+after.dbType);\n            if(after.len>0){\n                changeDDL += ('('+after.len);\n                if(parseInt(after.scale)>0){\n                    changeDDL += (','+after.scale);\n                }\n                changeDDL += ')';\n            }\n            let defaultValue = after.defaultValue;\n            defaultValue = (defaultValue==null)?\"\":(\"\"+defaultValue);\n            if(defaultValue.length>0){\n                changeDDL += (' DEFAULT ' + defaultValue);\n            }\n            \n            if(after.notNull){\n                changeDDL += ' NOT NULL';\n            }\n            changeDDL += ')';\n            ret.push(`${firstDDL} ${changeDDL};`);\n        }\n        return ret;\n    };\n}}\n{{? createEntities && createEntities.length > 0}}\n/* --------------- 创建表 --------------- */\n{{~ createEntities:entity}}\n{{=it.func.createDDL(entity.data,entity['type'])}}\n{{~}}\n{{?}}\n\n\n{{? dropEntities && dropEntities.length > 0}}\n/* --------------- 删除表 --------------- */\n{{~ dropEntities:entity}}\n{{=it.func.dropDDL(entity.data,entity['type'])}}\n{{~}}\n{{?}}\n\n\n{{? modifyEntities && modifyEntities.length > 0}}\n{{~ modifyEntities:entity}}\n/* --------------- 修改表 --------------- */\n-- 修改表：{{=entity.data.baseInfo.defKey}}[{{=entity.data.baseInfo.defName}}]\n{{=baseChangedDDL(entity.data.baseChanged)}}\n{{? entity.data.fieldModified && entity.data.fieldModified.length > 0}}\n-- 修改字段：\n{{=buildModifiedDDL(entity).join('\\n')}}\n{{?}}{{\n/*索引是否修改过*/\nlet indexChanged = entity.data.indexChanged;\n}}\n{{? indexChanged }}\n{{=it.func.indexRebuildDDL(entity.data.baseInfo,entity.data.newIndexes,entity.data.fullFields,entity['type'])}}\n{{?}}\n\n{{? entity.data.fieldAdded && entity.data.fieldAdded.length > 0}}\n-- 添加字段：\n{{=buildAddedDDL(entity)}};\n{{?}}\n\n{{? entity.data.fieldRemoved && entity.data.fieldRemoved.length > 0}}\n-- 删除字段：\n{{=buildRemovedDDL(entity)}};\n{{?}}\n{{~}}\n{{?}}"
        },
        {
          "applyFor": "BFC87171-C74F-494A-B7C2-76B9C55FACC9",
          "type": "dbDDL",
          "createTable": "IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[{{=it.entity.defKey}}]') AND type in (N'U')) DROP TABLE [dbo].[{{=it.entity.defKey}}];\n\nCREATE TABLE [dbo].[{{=it.entity.defKey}}](\n{{ pkList = [] ; }}\n{{~it.entity.fields:field:index}}\n    {{? field.primaryKey }}{{ pkList.push(field.defKey) }}{{?}}\n    {{=field.defKey}} {{=field.type}}{{?field.len>0}}{{='('}}{{=field.len}}{{?field.scale>0}}{{=','}}{{=field.scale}}{{?}}{{=')'}}{{?}}{{= field.notNull ? ' NOT NULL' : '' }}{{= field.autoIncrement ? ' IDENTITY(1,1)' : '' }}{{= field.defaultValue ? it.func.join(' DEFAULT ',field.defaultValue,' ') : '' }}{{= index < it.entity.fields.length-1 ? ',' : ( pkList.length>0 ? ',' :'' ) }}\n{{~}}\n{{? pkList.length >0 }}\n    PRIMARY KEY ({{~pkList:pkName:i}}{{= pkName }}{{= i<pkList.length-1 ? ',' : '' }}{{~}})\n{{?}}\n);\n$blankline\n{{? it.entity.defKey || it.entity.defName}}EXEC sp_addextendedproperty 'MS_Description', '{{=it.func.join(it.entity.defName,it.entity.comment,';')}}', 'SCHEMA', dbo, 'table', {{=it.entity.defKey}}, null, null;{{?}}\n{{~it.entity.fields:field:index}}\nEXEC sp_addextendedproperty 'MS_Description', '{{=it.func.join(field.defName,field.comment,';')}}', 'SCHEMA', dbo, 'table', {{=it.entity.defKey}}, 'column', {{=field.defKey}};\n{{~}}\n",
          "createView": "CREATE VIEW {{=it.view.defKey}} AS\nSELECT \n{{~it.view.fields:field:index}}\n    {{=field.refEntity}}.{{=field.refEntityField}} AS {{=field.defKey}}{{= index < it.view.fields.length-1 ? ',' : ''}}\n{{~}}\nFROM {{~it.view.refEntities:refEntity:index}}{{=refEntity}}{{= index < it.view.refEntities.length-1 ? ',' : ''}}{{~}};\n$blankline\n",
          "deleteTable": "IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[{{=it.entity.defKey}}]') AND type in (N'U')) DROP TABLE [dbo].[{{=it.entity.defKey}}];",
          "createIndex": "{{~ it.entity.indexes:index}}\nCREATE {{? index.unique}}UNIQUE {{?}}INDEX {{=index.defKey}} ON {{=it.entity.defKey}}({{ fieldsKeys = index.fields.map(function(field){return field.fieldDefKey}) ; }}{{=it.func.join(...fieldsKeys,',')}});\n{{~}}",
          "deleteIndex": "",
          "message": "{{\n    let createEntities = it.changes.filter(function(row){return (row.opt==='add'&&row['type']==='entity');});\n    let dropEntities   = it.changes.filter(function(row){return (row.opt==='delete'&&row['type']==='entity');});\n    let modifyEntities = it.changes.filter(function(row){return (row.opt==='update'&&row['type']==='entity');});\n    \n    function baseChanged(beforeAfter){\n        if(beforeAfter == null){\n            return '';\n        }\n        let ret = [];\n        let before = beforeAfter.before || {\"defKey\":\"\",\"defName\":\"\",\"comment\":\"\"};\n        let after = beforeAfter.after || {\"defKey\":\"\",\"defName\":\"\",\"comment\":\"\"};\n        if(before.defKey !== after.defKey){\n            ret.push('代码:'+(before.defKey||'NULL')+'->'+(after.defKey||'NULL'));\n        }\n        if(before.defName !== after.defName){\n            ret.push('显示名称:'+(before.defName||'NULL')+'->'+(after.defName||'NULL'));\n        }\n        if(before.comment !== after.comment){\n            ret.push('说明:'+(before.comment||'NULL')+'->'+(after.comment||'NULL'));\n        }\n        if(ret.length>0){\n            return '    基本信息:\\n\\t'+ret.join('\\n\\t');\n        }\n        return '';\n    };\n    \n    function buildAddedDesc(entity){\n        let ret = [];\n        let fieldAdded = entity.data.fieldAdded||[];\n        \n        for (let field of fieldAdded) { \n            let row = [];\n            row.push(field.defKey+'['+field.defName+']');\n            ret.push(row.join(\"\"))\n        }\n        return ret;\n    };\n    \n    function buildRemovedDesc(entity){\n        let ret = [];\n        let fieldRemoved = entity.data.fieldRemoved||[];\n        \n        for (let field of fieldRemoved) { \n            let row = [];\n            row.push(field.defKey+'['+field.defName+']');\n            ret.push(row.join(\"\"))\n        }\n        return ret;\n    };\n    \n    function buildModifiedDesc(entity){\n        let ret = [];\n        let fieldModified = entity.data.fieldModified||[];\n        \n        for (let field1 of fieldModified) { \n            let row = [];\n            let field = field1.before;\n            row.push(field.defKey+'['+field.defName+']');\n            ret.push(row.join(\"\"))\n        }\n        return ret;\n    };\n}}\n\n\n{{? createEntities && createEntities.length > 0}}\n/* --------------- 创建表 --------------- */\n{{~ createEntities:entity}}\n{{=entity.data.defKey}}[{{=entity.data.defName}}]\n{{~}}\n{{?}}\n\n\n{{? dropEntities && dropEntities.length > 0}}\n/* --------------- 删除表 --------------- */\n{{~ dropEntities:entity}}\n{{=entity.data.defKey}}[{{=entity.data.defName}}]\n{{~}}\n{{?}}\n\n{{? modifyEntities && modifyEntities.length > 0}}\n/* --------------- 修改表 --------------- */\n{{~ modifyEntities:entity}}\n{{=entity.data.baseInfo.defKey}}[{{=entity.data.baseInfo.defName}}]{{let changeText=baseChanged(entity.data.baseChanged);}}\n{{=baseChanged(entity.data.baseChanged)}}\n    {{? entity.data.fieldModified && entity.data.fieldModified.length > 0}}\n    修改字段：\n    {{='\\t'}}{{=buildModifiedDesc(entity).join('\\n\\t')}}{{?}}{{\n        /*计算是否调整了属性*/\n        let propAdded = entity.data.propAdded || [];\n        let propRemoved = entity.data.propRemoved || [];\n        let propModified = entity.data.propModified || [];\n        let changed = propAdded.length>0 || propRemoved.length>0 || propModified.length>0;\n        /*计算关联是否调整*/\n        let refEntityAdd = entity.data.refEntityAdd || [];\n        let refEntityRemoved = entity.data.refEntityRemoved || [];\n        let relaArray = [];\n        for (let rela of refEntityAdd) {\n            relaArray.push('建立关联:'+rela.defKey+'['+rela.defName+']');\n        }\n        for (let rela of refEntityRemoved) {\n            relaArray.push('解除关联:'+rela.defKey+'['+rela.defName+']');\n        }\n        /*索引是否修改过*/\n        let indexChanged = entity.data.indexChanged;\n    }}{{=indexChanged?'\\n\\t更改了索引':''}}{{=changed?'\\n\\t更改了属性':''}}{{=relaArray.length>0?('\\n\\t'+relaArray.join('\\n\\t')):''}}\n{{? entity.data.fieldAdded && entity.data.fieldAdded.length > 0}}\n    添加字段：\n{{='\\t'}}{{=buildAddedDesc(entity).join('\\n\\t')}}\n{{?}}{{? entity.data.fieldRemoved && entity.data.fieldRemoved.length > 0}}\n    删除字段：\n{{='\\t'}}{{=buildRemovedDesc(entity).join('\\n\\t')}}\n{{?}}\n{{~}}\n{{?}}",
          "update": "{{\n    let createEntities = it.changes.filter(function(row){return (row.opt==='add'&&row['type']==='entity');});\n    let dropEntities   = it.changes.filter(function(row){return (row.opt==='delete'&&row['type']==='entity');});\n    let modifyEntities = it.changes.filter(function(row){return (row.opt==='update'&&row['type']==='entity');});\n    \n    function baseChangedDDL(beforeAfter){\n        if(beforeAfter == null){\n            return '';\n        }\n        let ret = [];\n        let before = beforeAfter.before || {\"defKey\":\"\",\"defName\":\"\",\"comment\":\"\"};\n        let after = beforeAfter.after || {\"defKey\":\"\",\"defName\":\"\",\"comment\":\"\"};\n        if(before.defKey !== after.defKey){\n            ret.push(`EXEC sp_rename '${before.defKey}','${after.defKey}'`);\n        }\n        let commentText = '';\n        let commentChanged = false;\n        if(before.defName !== after.defName){\n            commentText = after.defName;\n            commentChanged = true;\n        }\n        if(before.comment !== after.comment){\n            commentChanged = true;\n            if(commentText){\n                commentText = (commentText+ ';'+after.comment)\n            }else{\n                commentText = after.comment\n            }\n        }\n        if(commentChanged){\n            let myText = `IF ((SELECT COUNT(*) FROM ::fn_listextendedproperty('MS_Description','SCHEMA', 'dbo','TABLE', '${after.defKey}', NULL, NULL)) > 0)\n            \\n\\tEXEC sp_updateextendedproperty 'MS_Description', '${commentText}','SCHEMA', 'dbo','TABLE', '${after.defKey}'\n            \\nELSE\n            \\n\\tEXEC sp_addextendedproperty 'MS_Description', '${commentText}', 'SCHEMA', 'dbo','TABLE', '${after.defKey}'\n            `;\n            ret.push(myText);\n            /*ret.push('ALTER TABLE '+after.defKey+' COMMENT \\''+commentText+'\\'');*/\n        }\n        let baseText = '-- 基本信息:\\n';\n        return baseText+ret.join(';\\n')+';';\n    };\n    \n    function buildAddedDDL(entity){\n        let ret = [];\n        let fieldAdded = entity.data.fieldAdded||[];\n        if(fieldAdded.length == 0){\n            return '';\n        }\n        \n        let firstDDL = `ALTER TABLE [dbo].[${entity.data.baseInfo.defKey}]`;\n        for (let field of fieldAdded) { \n            let ddlItem = `ADD [${field.defKey}] ${field.dbType}`;\n            /*处理数据类型长度*/\n            if(field.len>0){\n                ddlItem += ('('+field.len);\n                if(parseInt(field.scale)>0){\n                    ddlItem += (','+field.scale);\n                }\n                ddlItem += ')';\n            }\n            let defaultValue = field.defaultValue;\n            defaultValue = (defaultValue==null)?\"\":(\"\"+defaultValue);\n            if(defaultValue.length>0){\n                ddlItem += (' DEFAULT ' + defaultValue);\n            }\n            if(field.notNull){\n                ddlItem += ' NOT NULL';\n            }\n            ret.push(`${firstDDL} ${ddlItem}`);\n            \n            /*处理字段注释*/\n            let fieldComments = [];\n            if(field.defName != null &&field.defName.length>0){\n                fieldComments.push(field.defName);\n            }\n            if(field.comment != null &&field.comment.length>0){\n                fieldComments.push(field.comment);\n            }\n            let commentText = fieldComments.join(';');\n            if(commentText != null && commentText.length > 0){\n                let commentDDL = `EXEC sp_addextendedproperty 'MS_Description', N'${commentText}','SCHEMA', N'dbo','TABLE', N'${entity.data.baseInfo.defKey}','COLUMN', N'${field.defKey}'`;\n                ret.push(commentDDL);\n            }\n        }\n        return '\\n'+ret.join(';\\n');\n    };\n    \n    function buildRemovedDDL(entity){\n        let ret = [];\n        let fieldRemoved = entity.data.fieldRemoved||[];\n        if(fieldRemoved.length == 0){\n            return '';\n        }\n        \n        let firstDDL = `ALTER TABLE [dbo].[${entity.data.baseInfo.defKey}]`;\n        for (let field of fieldRemoved) { \n            ret.push(`${firstDDL} DROP COLUMN [${field.defKey}]`);\n        }\n        return '\\n'+ret.join(';\\n');\n    };\n    \n    function buildModifiedDDL(entity){\n        let ret = [];\n        let fieldModified = entity.data.fieldModified||[];\n        \n        let firstDDL = `ALTER TABLE [dbo].[${entity.data.baseInfo.defKey}]`;\n        for (let field of fieldModified) { \n            let changeDDL = '';\n            let before = field.before || {};\n            let after = field.after || {};\n            if(before.defKey === after.defKey){\n                changeDDL += (' ALTER COLUMN ['+after.defKey+']');\n            }else{\n                let renameText = `EXEC sp_rename '[dbo].[${entity.data.baseInfo.defKey}].[${before.defKey}]','${after.defKey}','COLUMN';`;\n                ret.push(renameText);\n                continue;\n            }\n            changeDDL += (' '+after.dbType);\n            if(after.len>0){\n                changeDDL += ('('+after.len);\n                if(parseInt(after.scale)>0){\n                    changeDDL += (','+after.scale);\n                }\n                changeDDL += ')';\n            }\n            let defaultValue = after.defaultValue;\n            defaultValue = (defaultValue==null)?\"\":(\"\"+defaultValue);\n            if(defaultValue.length>0){\n                changeDDL += (' DEFAULT ' + defaultValue);\n            }\n            \n            if(after.notNull){\n                changeDDL += ' NOT NULL';\n            }\n            ret.push(`${firstDDL} ${changeDDL};`);\n        }\n        return ret;\n    };\n}}\n{{? createEntities && createEntities.length > 0}}\n/* --------------- 创建表 --------------- */\n{{~ createEntities:entity}}\n{{=it.func.createDDL(entity.data,entity['type'])}}\n{{~}}\n{{?}}\n\n\n{{? dropEntities && dropEntities.length > 0}}\n/* --------------- 删除表 --------------- */\n{{~ dropEntities:entity}}\n{{=it.func.dropDDL(entity.data,entity['type'])}}\n{{~}}\n{{?}}\n\n\n{{? modifyEntities && modifyEntities.length > 0}}\n{{~ modifyEntities:entity}}\n/* --------------- 修改表 --------------- */\n-- 修改表：{{=entity.data.baseInfo.defKey}}[{{=entity.data.baseInfo.defName}}]\n{{=baseChangedDDL(entity.data.baseChanged)}}\n{{? entity.data.fieldModified && entity.data.fieldModified.length > 0}}\n-- 修改字段：\n{{=buildModifiedDDL(entity).join('\\n')}}\n{{?}}{{\n/*索引是否修改过*/\nlet indexChanged = entity.data.indexChanged;\n}}\n{{? indexChanged }}\n{{=it.func.indexRebuildDDL(entity.data.baseInfo,entity.data.newIndexes,entity.data.fullFields,entity['type'])}}\n{{?}}\n\n{{? entity.data.fieldAdded && entity.data.fieldAdded.length > 0}}\n-- 添加字段：\n{{=buildAddedDDL(entity)}};\n{{?}}\n\n{{? entity.data.fieldRemoved && entity.data.fieldRemoved.length > 0}}\n-- 删除字段：\n{{=buildRemovedDDL(entity)}};\n{{?}}\n{{~}}\n{{?}}"
        },
        {
          "applyFor": "DFBEC1DD-AA84-456E-BBF3-C95DD0DB2022",
          "type": "dbDDL",
          "createTable": "DROP TABLE IF EXISTS {{=it.entity.defKey}};\nCREATE TABLE {{=it.entity.defKey}}(\n{{ pkList = [] ; }}\n{{~it.entity.fields:field:index}}\n    {{? field.primaryKey }}{{ pkList.push(field.defKey) }}{{?}}\n    {{=field.defKey}} {{? field.autoIncrement}}SERIAL{{??}}{{=field.type}}{{?field.len>0}}{{='('}}{{=field.len}}{{?field.scale>0}}{{=','}}{{=field.scale}}{{?}}{{=')'}}{{?}}{{?}}{{= field.notNull ? ' NOT NULL' : '' }}{{= field.defaultValue ? it.func.join(' DEFAULT ',field.defaultValue,' ') : '' }}{{= index < it.entity.fields.length-1 ? ',' : ( pkList.length>0 ? ',' :'' ) }}\n{{~}}\n{{? pkList.length >0 }}\n    PRIMARY KEY ({{~pkList:pkName:i}}{{= pkName }}{{= i<pkList.length-1 ? ',' : '' }}{{~}})\n{{?}}\n);\n$blankline\n{{? it.entity.defKey || it.entity.defName}}COMMENT ON TABLE {{=it.entity.defKey}} IS '{{=it.func.join(it.entity.defName,it.entity.comment,';')}}';{{?}}\n{{~it.entity.fields:field:index}}\n{{? field.defName || field.comment}}COMMENT ON COLUMN {{=it.entity.defKey}}.{{=field.defKey}} IS '{{=it.func.join(field.defName,field.comment,';')}}';{{?}}\n{{~}}",
          "createView": "CREATE VIEW {{=it.view.defKey}} AS\nSELECT \n{{~it.view.fields:field:index}}\n    {{=field.refEntity}}.{{=field.refEntityField}} AS {{=field.defKey}}{{= index < it.view.fields.length-1 ? ',' : ''}}\n{{~}}\nFROM {{~it.view.refEntities:refEntity:index}}{{=refEntity}}{{= index < it.view.refEntities.length-1 ? ',' : ''}}{{~}};\n$blankline\n",
          "deleteTable": "DROP TABLE IF EXISTS {{=it.entity.defKey}};",
          "createIndex": "{{~ it.entity.indexes:index}}\nCREATE {{? index.unique}}UNIQUE {{?}}INDEX {{=index.defKey}} ON {{=it.entity.defKey}}({{ fieldsKeys = index.fields.map(function(field){return field.fieldDefKey}) ; }}{{=it.func.join(...fieldsKeys,',')}});\n{{~}}",
          "deleteIndex": "{{~ it.entity.indexes:index}}\nDROP INDEX {{=index.defKey}} ;\n{{~}}",
          "message": "{{\n    let createEntities = it.changes.filter(function(row){return (row.opt==='add'&&row['type']==='entity');});\n    let dropEntities   = it.changes.filter(function(row){return (row.opt==='delete'&&row['type']==='entity');});\n    let modifyEntities = it.changes.filter(function(row){return (row.opt==='update'&&row['type']==='entity');});\n    \n    function baseChanged(beforeAfter){\n        if(beforeAfter == null){\n            return '';\n        }\n        let ret = [];\n        let before = beforeAfter.before || {\"defKey\":\"\",\"defName\":\"\",\"comment\":\"\"};\n        let after = beforeAfter.after || {\"defKey\":\"\",\"defName\":\"\",\"comment\":\"\"};\n        if(before.defKey !== after.defKey){\n            ret.push('代码:'+(before.defKey||'NULL')+'->'+(after.defKey||'NULL'));\n        }\n        if(before.defName !== after.defName){\n            ret.push('显示名称:'+(before.defName||'NULL')+'->'+(after.defName||'NULL'));\n        }\n        if(before.comment !== after.comment){\n            ret.push('说明:'+(before.comment||'NULL')+'->'+(after.comment||'NULL'));\n        }\n        if(ret.length>0){\n            return '    基本信息:\\n\\t'+ret.join('\\n\\t');\n        }\n        return '';\n    };\n    \n    function buildAddedDesc(entity){\n        let ret = [];\n        let fieldAdded = entity.data.fieldAdded||[];\n        \n        for (let field of fieldAdded) { \n            let row = [];\n            row.push(field.defKey+'['+field.defName+']');\n            ret.push(row.join(\"\"))\n        }\n        return ret;\n    };\n    \n    function buildRemovedDesc(entity){\n        let ret = [];\n        let fieldRemoved = entity.data.fieldRemoved||[];\n        \n        for (let field of fieldRemoved) { \n            let row = [];\n            row.push(field.defKey+'['+field.defName+']');\n            ret.push(row.join(\"\"))\n        }\n        return ret;\n    };\n    \n    function buildModifiedDesc(entity){\n        let ret = [];\n        let fieldModified = entity.data.fieldModified||[];\n        \n        for (let field1 of fieldModified) { \n            let row = [];\n            let field = field1.before;\n            row.push(field.defKey+'['+field.defName+']');\n            ret.push(row.join(\"\"))\n        }\n        return ret;\n    };\n}}\n\n\n{{? createEntities && createEntities.length > 0}}\n/* --------------- 创建表 --------------- */\n{{~ createEntities:entity}}\n{{=entity.data.defKey}}[{{=entity.data.defName}}]\n{{~}}\n{{?}}\n\n\n{{? dropEntities && dropEntities.length > 0}}\n/* --------------- 删除表 --------------- */\n{{~ dropEntities:entity}}\n{{=entity.data.defKey}}[{{=entity.data.defName}}]\n{{~}}\n{{?}}\n\n{{? modifyEntities && modifyEntities.length > 0}}\n/* --------------- 修改表 --------------- */\n{{~ modifyEntities:entity}}\n{{=entity.data.baseInfo.defKey}}[{{=entity.data.baseInfo.defName}}]{{let changeText=baseChanged(entity.data.baseChanged);}}\n{{=baseChanged(entity.data.baseChanged)}}\n    {{? entity.data.fieldModified && entity.data.fieldModified.length > 0}}\n    修改字段：\n    {{='\\t'}}{{=buildModifiedDesc(entity).join('\\n\\t')}}{{?}}{{\n        /*计算是否调整了属性*/\n        let propAdded = entity.data.propAdded || [];\n        let propRemoved = entity.data.propRemoved || [];\n        let propModified = entity.data.propModified || [];\n        let changed = propAdded.length>0 || propRemoved.length>0 || propModified.length>0;\n        /*计算关联是否调整*/\n        let refEntityAdd = entity.data.refEntityAdd || [];\n        let refEntityRemoved = entity.data.refEntityRemoved || [];\n        let relaArray = [];\n        for (let rela of refEntityAdd) {\n            relaArray.push('建立关联:'+rela.defKey+'['+rela.defName+']');\n        }\n        for (let rela of refEntityRemoved) {\n            relaArray.push('解除关联:'+rela.defKey+'['+rela.defName+']');\n        }\n        /*索引是否修改过*/\n        let indexChanged = entity.data.indexChanged;\n    }}{{=indexChanged?'\\n\\t更改了索引':''}}{{=changed?'\\n\\t更改了属性':''}}{{=relaArray.length>0?('\\n\\t'+relaArray.join('\\n\\t')):''}}\n{{? entity.data.fieldAdded && entity.data.fieldAdded.length > 0}}\n    添加字段：\n{{='\\t'}}{{=buildAddedDesc(entity).join('\\n\\t')}}\n{{?}}{{? entity.data.fieldRemoved && entity.data.fieldRemoved.length > 0}}\n    删除字段：\n{{='\\t'}}{{=buildRemovedDesc(entity).join('\\n\\t')}}\n{{?}}\n{{~}}\n{{?}}",
          "update": "{{\n    let createEntities = it.changes.filter(function(row){return (row.opt==='add'&&row['type']==='entity');});\n    let dropEntities   = it.changes.filter(function(row){return (row.opt==='delete'&&row['type']==='entity');});\n    let modifyEntities = it.changes.filter(function(row){return (row.opt==='update'&&row['type']==='entity');});\n    \n    function baseChangedDDL(beforeAfter){\n        if(beforeAfter == null){\n            return '';\n        }\n        let ret = [];\n        let before = beforeAfter.before || {\"defKey\":\"\",\"defName\":\"\",\"comment\":\"\"};\n        let after = beforeAfter.after || {\"defKey\":\"\",\"defName\":\"\",\"comment\":\"\"};\n        if(before.defKey !== after.defKey){\n            ret.push(`ALTER TABLE ${before.defKey} RENAME TO ${after.defKey}`);\n        }\n        let commentText = '';\n        let commentChanged = false;\n        if(before.defName !== after.defName){\n            commentText = after.defName;\n            commentChanged = true;\n        }\n        if(before.comment !== after.comment){\n            commentChanged = true;\n            if(commentText){\n                commentText = (commentText+ ';'+after.comment)\n            }else{\n                commentText = after.comment\n            }\n        }\n        if(commentChanged){\n            let myText = `COMMENT ON TABLE ${after.defKey} IS '${commentText}'`;\n            ret.push(myText);\n        }\n        let baseText = '-- 基本信息:\\n';\n        return baseText+ret.join(';\\n')+';';\n    };\n    \n    function buildAddedDDL(entity){\n        let ret = [];\n        let fieldAdded = entity.data.fieldAdded||[];\n        if(fieldAdded.length == 0){\n            return '';\n        }\n        \n        let firstDDL = `ALTER TABLE ${entity.data.baseInfo.defKey}`;\n        for (let field of fieldAdded) { \n            let ddlItem = `ADD COLUMN ${field.defKey} ${field.dbType}`;\n            /*处理数据类型长度*/\n            if(field.len>0){\n                ddlItem += ('('+field.len);\n                if(parseInt(field.scale)>0){\n                    ddlItem += (','+field.scale);\n                }\n                ddlItem += ')';\n            }\n            if(field.notNull){\n                ddlItem += ' NOT NULL';\n            }            \n            let defaultValue = field.defaultValue;\n            defaultValue = (defaultValue==null)?\"\":(\"\"+defaultValue);\n            if(defaultValue.length>0){\n                ddlItem += (' DEFAULT ' + defaultValue);\n            }\n\n            ret.push(`${firstDDL} ${ddlItem}`);\n            \n            /*处理字段注释*/\n            let fieldComments = [];\n            if(field.defName != null &&field.defName.length>0){\n                fieldComments.push(field.defName);\n            }\n            if(field.comment != null &&field.comment.length>0){\n                fieldComments.push(field.comment);\n            }\n            let commentText = fieldComments.join(';');\n            if(commentText != null && commentText.length > 0){\n                let commentDDL = `COMMENT ON COLUMN ${entity.data.baseInfo.defKey}.${field.defKey} IS '${commentText}'`;\n                 ret.push(commentDDL);\n            }\n        }\n        return '\\n'+ret.join(';\\n');\n    };\n    \n    function buildRemovedDDL(entity){\n        let ret = [];\n        let fieldRemoved = entity.data.fieldRemoved||[];\n        if(fieldRemoved.length == 0){\n            return '';\n        }\n        \n        let firstDDL = `ALTER TABLE ${entity.data.baseInfo.defKey}`;\n        for (let field of fieldRemoved) { \n            ret.push(`${firstDDL} DROP COLUMN ${field.defKey}`);\n        }\n        return '\\n'+ret.join(';\\n');\n    };\n    \n    function buildModifiedDDL(entity){\n        let ret = [];\n        let fieldModified = entity.data.fieldModified||[];\n        \n        let firstDDL = `ALTER TABLE ${entity.data.baseInfo.defKey}`;\n        for (let field of fieldModified) { \n            let before = field.before || {};\n            let after = field.after || {};\n            if(before.defKey !== after.defKey){\n                let renameText = `ALTER TABLE ${entity.data.baseInfo.defKey} RENAME COLUMN ${before.defKey} TO ${after.defKey};`;\n                ret.push(renameText);\n            }\n            /*如果没有变化，则不生成变更语句*/\n            if(before.dbType === after.dbType \n            && before['len'] === after['len'] \n            && before.scale === after.scale\n            && before.primaryKey === after.primaryKey\n            && before.notNull === after.notNull\n            && before.autoIncrement === after.autoIncrement\n            && before.defaultValue === after.defaultValue){\n                continue;\n            }\n            if(before.dbType !== after.dbType || before.len !== after.len || before.scale !== after.scale){\n                let dbTypeDDL = `ALTER TABLE ${entity.data.baseInfo.defKey} ALTER COLUMN ${after.defKey} TYPE ${before.dbType}`;\n                if(after.len>0){\n                    dbTypeDDL += ('('+after.len);\n                    if(parseInt(after.scale)>0){\n                        dbTypeDDL += (','+after.scale);\n                    }\n                    dbTypeDDL += ')';\n                }\n                ret.push(dbTypeDDL+';');\n            }\n            \n            if(before.defaultValue !== after.defaultValue){\n                let defaultDDL = '';\n                let defaultValue = after.defaultValue;\n                defaultValue = (defaultValue==null)?\"NULL\":(\"\"+defaultValue);\n                if(defaultValue.length>0){\n                    defaultDDL += ('SET DEFAULT ' + defaultValue);\n                }\n                let defaultTpl = `ALTER TABLE ${entity.data.baseInfo.defKey} ALTER COLUMN ${defaultDDL};`;\n                ret.push(defaultTpl);\n            }\n            \n            if(before.notNull !== after.notNull){\n                let notNullDDL= 'SET NULL';\n                if(after.notNull){\n                    let notNullDDL= 'SET NOT NULL';\n                }\n                let notNullTpl = `ALTER TABLE ${entity.data.baseInfo.defKey} ALTER COLUMN ${notNullDDL};`;\n                ret.push(notNullTpl);\n            }\n        }\n        return ret;\n    };\n}}\n{{? createEntities && createEntities.length > 0}}\n/* --------------- 创建表 --------------- */\n{{~ createEntities:entity}}\n{{=it.func.createDDL(entity.data,entity['type'])}}\n{{~}}\n{{?}}\n\n\n{{? dropEntities && dropEntities.length > 0}}\n/* --------------- 删除表 --------------- */\n{{~ dropEntities:entity}}\n{{=it.func.dropDDL(entity.data,entity['type'])}}\n{{~}}\n{{?}}\n\n\n{{? modifyEntities && modifyEntities.length > 0}}\n{{~ modifyEntities:entity}}\n/* --------------- 修改表 --------------- */\n-- 修改表：{{=entity.data.baseInfo.defKey}}[{{=entity.data.baseInfo.defName}}]\n{{=baseChangedDDL(entity.data.baseChanged)}}\n{{? entity.data.fieldModified && entity.data.fieldModified.length > 0}}\n-- 修改字段：\n{{=buildModifiedDDL(entity).join('\\n')}}\n{{?}}{{\n/*索引是否修改过*/\nlet indexChanged = entity.data.indexChanged;\n}}\n{{? indexChanged }}\n-- 索引重建\n{{=it.func.indexRebuildDDL(entity.data.baseInfo,entity.data.newIndexes,entity.data.fullFields,entity['type'])}}\n{{?}}\n\n{{? entity.data.fieldAdded && entity.data.fieldAdded.length > 0}}\n-- 添加字段：\n{{=buildAddedDDL(entity)}};\n{{?}}\n\n{{? entity.data.fieldRemoved && entity.data.fieldRemoved.length > 0}}\n-- 删除字段：\n{{=buildRemovedDDL(entity)}};\n{{?}}\n{{~}}\n{{?}}"
        },
        {
          "type": "dbDDL",
          "applyFor": "89504F5D-94BF-4C9E-8B2E-44F37305FED5",
          "createTable": "CREATE TABLE {{=it.entity.defKey}}(\n{{ pkList = [] ; }}\n{{~it.entity.fields:field:index}}\n    {{? field.primaryKey }}{{ pkList.push(field.defKey) }}{{?}}\n    {{=field.defKey}} {{=field.type}}{{?field.len>0}}{{='('}}{{=field.len}}{{?field.scale>0}}{{=','}}{{=field.scale}}{{?}}{{=')'}}{{?}}{{= field.notNull ? ' NOT NULL' : '' }}{{= field.autoIncrement ? '' : '' }}{{= field.defaultValue ? it.func.join(' DEFAULT ',field.defaultValue,' ') : '' }}{{= index < it.entity.fields.length-1 ? ',' : ( pkList.length>0 ? ',' :'' ) }}\n{{~}}\n{{? pkList.length >0 }}\n    PRIMARY KEY ({{~pkList:pkName:i}}{{= pkName }}{{= i<pkList.length-1 ? ',' : '' }}{{~}})\n{{?}}\n);\n$blankline\n{{? it.entity.defKey || it.entity.defName}}COMMENT ON TABLE {{=it.entity.defKey}} IS '{{=it.func.join(it.entity.defName,it.entity.comment,';')}}';{{?}}\n{{~it.entity.fields:field:index}}\n{{? field.defName || field.comment}}COMMENT ON COLUMN {{=it.entity.defKey}}.{{=field.defKey}} IS '{{=it.func.join(field.defName,field.comment,';')}}';{{?}}\n{{~}}",
          "createIndex": "{{~ it.entity.indexes:index}}\nCREATE {{? index.unique}}UNIQUE {{?}}INDEX {{=index.defKey}} ON {{=it.entity.defKey}}({{ fieldsKeys = index.fields.map(function(field){return field.fieldDefKey}) ; }}{{=it.func.join(...fieldsKeys,',')}});\n{{~}}",
          "createView": "CREATE VIEW {{=it.view.defKey}} AS\nSELECT \n{{~it.view.fields:field:index}}\n    {{=field.refEntity}}.{{=field.refEntityField}} AS {{=field.defKey}}{{= index < it.view.fields.length-1 ? ',' : ''}}\n{{~}}\nFROM {{~it.view.refEntities:refEntity:index}}{{=refEntity}}{{= index < it.view.refEntities.length-1 ? ',' : ''}}{{~}};\n$blankline\n"
        },
        {
          "type": "dbDDL",
          "applyFor": "0BBCABA5-B8E4-41B0-B8E4-8F5EA6029307",
          "createTable": "CREATE TABLE {{=it.entity.defKey}}(\n{{ pkList = [] ; }}\n{{~it.entity.fields:field:index}}\n    {{? field.primaryKey }}{{ pkList.push(field.defKey) }}{{?}}\n    {{=field.defKey}} {{=field.type}}{{?field.len>0}}{{='('}}{{=field.len}}{{?field.scale>0}}{{=','}}{{=field.scale}}{{?}}{{=')'}}{{?}}{{= field.notNull ? ' NOT NULL' : '' }}{{= field.autoIncrement ? '' : '' }}{{= field.defaultValue ? it.func.join(' DEFAULT ','('+field.defaultValue+')',' ') : '' }}{{= index < it.entity.fields.length-1 ? ',' : ( pkList.length>0 ? ',' :'' ) }}\n{{~}}\n{{? pkList.length >0 }}\n    PRIMARY KEY ({{~pkList:pkName:i}}{{= pkName }}{{= i<pkList.length-1 ? ',' : '' }}{{~}})\n{{?}}\n);\n$blankline\n{{? it.entity.defKey || it.entity.defName}}COMMENT ON TABLE {{=it.entity.defKey}} IS '{{=it.func.join(it.entity.defName,it.entity.comment,';')}}';{{?}}\n{{~it.entity.fields:field:index}}\n{{? field.defName || field.comment}}COMMENT ON COLUMN {{=it.entity.defKey}}.{{=field.defKey}} IS '{{=it.func.join(field.defName,field.comment,';')}}';{{?}}\n{{~}}",
          "createIndex": "{{~ it.entity.indexes:index}}\nCREATE {{? index.unique}}UNIQUE {{?}}INDEX {{=index.defKey}} ON {{=it.entity.defKey}}({{ fieldsKeys = index.fields.map(function(field){return field.fieldDefKey}) ; }}{{=it.func.join(...fieldsKeys,',')}});\n{{~}}",
          "createView": "CREATE VIEW {{=it.view.defKey}} AS\nSELECT \n{{~it.view.fields:field:index}}\n    {{=field.refEntity}}.{{=field.refEntityField}} AS {{=field.defKey}}{{= index < it.view.fields.length-1 ? ',' : ''}}\n{{~}}\nFROM {{~it.view.refEntities:refEntity:index}}{{=refEntity}}{{= index < it.view.refEntities.length-1 ? ',' : ''}}{{~}};\n$blankline\n"
        },
        {
          "type": "dbDDL",
          "applyFor": "592C7013-143D-4E7B-AF64-0D7BF1E28230",
          "createTable": "DROP TABLE IF EXISTS {{=it.entity.defKey}};\nCREATE TABLE {{=it.entity.defKey}}(\n{{ pkList = [] ; }}\n{{~it.entity.fields:field:index}}\n    {{? field.primaryKey }}{{ pkList.push(field.defKey) }}{{?}}\n    {{=field.defKey}} {{=field.type}}{{?field.len>0}}{{='('}}{{=field.len}}{{?field.scale>0}}{{=','}}{{=field.scale}}{{?}}{{=')'}}{{?}}{{= field.notNull ? ' NOT NULL' : '' }}{{= field.autoIncrement ? ' AUTO_INCREMENT' : '' }}{{= field.defaultValue ? it.func.join(' DEFAULT ',field.defaultValue,' ') : '' }}{{= index < it.entity.fields.length-1 ? ',' : ( pkList.length>0 ? ',' :'' ) }}\n{{~}}\n{{? pkList.length >0 }}\n    PRIMARY KEY ({{~pkList:pkName:i}}{{= pkName }}{{= i<pkList.length-1 ? ',' : '' }}{{~}})\n{{?}}\n);\n$blankline\n{{? it.entity.defKey || it.entity.defName}}COMMENT ON TABLE {{=it.entity.defKey}} IS '{{=it.func.join(it.entity.defName,it.entity.comment,';')}}';{{?}}\n{{~it.entity.fields:field:index}}\n{{? field.defName || field.comment}}COMMENT ON COLUMN {{=it.entity.defKey}}.{{=field.defKey}} IS '{{=it.func.join(field.defName,field.comment,';')}}';{{?}}\n{{~}}",
          "createIndex": "{{~ it.entity.indexes:index}}\nCREATE {{? index.unique}}UNIQUE {{?}}INDEX {{=index.defKey}} ON {{=it.entity.defKey}}({{ fieldsKeys = index.fields.map(function(field){return field.fieldDefKey}) ; }}{{=it.func.join(...fieldsKeys,',')}});\n{{~}}",
          "createView": "CREATE VIEW {{=it.view.defKey}} AS\nSELECT \n{{~it.view.fields:field:index}}\n    {{=field.refEntity}}.{{=field.refEntityField}} AS {{=field.defKey}}{{= index < it.view.fields.length-1 ? ',' : ''}}\n{{~}}\nFROM {{~it.view.refEntities:refEntity:index}}{{=refEntity}}{{= index < it.view.refEntities.length-1 ? ',' : ''}}{{~}};\n$blankline\n"
        },
        {
          "type": "dbDDL",
          "applyFor": "77BD85E5-9D0D-4096-8427-CBA306FC9C6A",
          "createTable": "DROP TABLE IF EXISTS {{=it.entity.defKey}};\nCREATE TABLE {{=it.entity.defKey}}(\n{{ pkList = [] ; }}\n{{~it.entity.fields:field:index}}\n    {{? field.primaryKey }}{{ pkList.push(field.defKey) }}{{?}}\n    {{=field.defKey}} {{=field.type}}{{?field.len>0}}{{='('}}{{=field.len}}{{?field.scale>0}}{{=','}}{{=field.scale}}{{?}}{{=')'}}{{= field.defaultValue ? it.func.join(' DEFAULT ',field.defaultValue,' ') : '' }}{{?}}{{= field.notNull ? ' NOT NULL' : '' }}{{= index < it.entity.fields.length-1 ? ',' : ( pkList.length>0 ? ',' :'' ) }}\n{{~}}\n{{? pkList.length >0 }}\n    PRIMARY KEY ({{~pkList:pkName:i}}{{= pkName }}{{= i<pkList.length-1 ? ',' : '' }}{{~}})\n{{?}}\n);\n$blankline\n{{? it.entity.defKey || it.entity.defName}}COMMENT ON TABLE {{=it.entity.defKey}} IS '{{=it.func.join(it.entity.defName,it.entity.comment,';')}}';{{?}}\n{{~it.entity.fields:field:index}}\n{{? field.defName || field.comment}}COMMENT ON COLUMN {{=it.entity.defKey}}.{{=field.defKey}} IS '{{=it.func.join(field.defName,field.comment,';')}}';{{?}}\n{{~}}",
          "createIndex": "{{~ it.entity.indexes:index}}\nCREATE {{? index.unique}}UNIQUE {{?}}INDEX {{=index.defKey}} ON {{=it.entity.defKey}}({{ fieldsKeys = index.fields.map(function(field){return field.fieldDefKey}) ; }}{{=it.func.join(...fieldsKeys,',')}});\n{{~}}",
          "createView": "CREATE VIEW {{=it.view.defKey}} AS\nSELECT \n{{~it.view.fields:field:index}}\n    {{=field.refEntity}}.{{=field.refEntityField}} AS {{=field.defKey}}{{= index < it.view.fields.length-1 ? ',' : ''}}\n{{~}}\nFROM {{~it.view.refEntities:refEntity:index}}{{=refEntity}}{{= index < it.view.refEntities.length-1 ? ',' : ''}}{{~}};\n$blankline\n"
        },
        {
          "applyFor": "11D1FB71-A587-4217-89BA-611B8A1F83E0",
          "type": "dbDDL",
          "createTable": "DROP TABLE IF EXISTS {{=it.entity.defKey}};\nCREATE TABLE {{=it.entity.defKey}}(\n{{ pkList = [] ; }}\n{{~it.entity.fields:field:index}}\n    {{? field.primaryKey }}{{ pkList.push(field.defKey) }}{{?}}\n    {{=field.defKey}} {{=field.type}} {{= field.notNull ? 'NOT NULL' : '' }} {{= field.autoIncrement ? 'AUTO_INCREMENT' : '' }} {{= field.defaultValue ? it.func.join('DEFAULT',field.defaultValue,' ') : '' }} COMMENT '{{=it.func.join(field.defName,field.comment,';')}}' {{= index < it.entity.fields.length-1 ? ',' : ( pkList.length>0 ? ',' :'' ) }}\n{{~}}\n{{? pkList.length >0 }}\n    PRIMARY KEY ({{~pkList:pkName:i}}{{= pkName }}{{= i<pkList.length-1 ? ',' : '' }}{{~}})\n{{?}}\n)  COMMENT '{{=it.func.join(it.entity.defName,it.entity.comment,';') }}';\n$blankline\n",
          "createView": "CREATE VIEW {{=it.view.defKey}} AS\nSELECT \n{{~it.view.fields:field:index}}\n    {{=field.refEntity}}.{{=field.refEntityField}} AS {{=field.defKey}}{{= index < it.view.fields.length-1 ? ',' : ''}}\n{{~}}\nFROM {{~it.view.refEntities:refEntity:index}}{{=refEntity}}{{= index < it.view.refEntities.length-1 ? ',' : ''}}{{~}};\n$blankline\n",
          "deleteTable": "",
          "createIndex": "",
          "deleteIndex": "",
          "message": "",
          "update": ""
        },
        {
          "applyFor": "B363BE0B-F852-49B8-9B2E-F6D2174DEAC1",
          "type": "dbDDL",
          "createTable": "DROP TABLE IF EXISTS {{=it.entity.defKey}};\nCREATE TABLE {{=it.entity.defKey}}(\n{{ pkList = [] ; }}\n{{~it.entity.fields:field:index}}\n    {{? field.primaryKey }}{{ pkList.push(field.defKey) }}{{?}}\n    {{=field.defKey}} {{=field.type}}{{?field.len>0}}{{='('}}{{=field.len}}{{?field.scale>0}}{{=','}}{{=field.scale}}{{?}}{{=')'}}{{?}} {{= field.notNull ? 'NOT NULL' : '' }} {{= field.autoIncrement ? 'AUTOINCREMENT' : '' }} {{= field.defaultValue ? it.func.join('DEFAULT',field.defaultValue,' ') : '' }}{{= index < it.entity.fields.length-1 ? ',' : ( pkList.length>0 ? ',' :'' ) }} --{{=it.func.join(field.defName,field.comment,';')}}\n{{~}}\n{{? pkList.length >0 }}\n    PRIMARY KEY ({{~pkList:pkName:i}}{{= pkName }}{{= i<pkList.length-1 ? ',' : '' }}{{~}})\n{{?}}\n)  ; --{{=it.func.join(it.entity.defName,it.entity.comment,';') }}\n$blankline\n",
          "createIndex": "{{~ it.entity.indexes:index}}\nCREATE {{? index.unique}}UNIQUE {{?}}INDEX {{=index.defKey}} ON {{=it.entity.defKey}}({{ fieldsKeys = index.fields.map(function(field){return field.fieldDefKey}) ; }}{{=it.func.join(...fieldsKeys,',')}});\n{{~}}",
          "createView": "CREATE VIEW {{=it.view.defKey}} AS\nSELECT \n{{~it.view.fields:field:index}}\n    {{=field.refEntity}}.{{=field.refEntityField}} AS {{=field.defKey}}{{= index < it.view.fields.length-1 ? ',' : ''}}\n{{~}}\nFROM {{~it.view.refEntities:refEntity:index}}{{=refEntity}}{{= index < it.view.refEntities.length-1 ? ',' : ''}}{{~}};\n$blankline\n"
        },
        {
          "type": "dbDDL",
          "applyFor": "dictSQLTemplate",
          "content": "/* 插入字典总表[{{=it.dict.defKey}}-{{=it.dict.defName}}] */\nINSERT INTO SYS_DICT(KEY_,LABEL,INTRO,REVISION) VALUES('{{=it.dict.defKey}}','{{=it.dict.defName}}','{{=it.dict.intro}}',1);\n/* 插入字典明细表 */\n{{~it.dict.items:item:index}}\nINSERT INTO SYS_DICT_ITEM(DICT_KEY,KEY_,LABEL,SORT_,INTRO,REVISION) VALUES('{{=it.dict.defKey}}','{{=item.defKey}}','{{=item.defName}}','{{=item.sort}}','{{=item.intro}}',1);\n{{~}}"
        },
        {
          "applyFor": "81CCA482-3F4D-4EAC-8CF9-F5E7BC098AD2",
          "type": "dbDDL",
          "createTable": "/**字段名,关键字等全部用的小写*/\ndrop table if exists {{=it.entity.defKey}};\n/**补充上库名,external关键字根据建表规范看是否添加*/\ncreate [external] table if not exists {{=it.entity.defKey}}(\n{{ pkList = [] ; }}\n/**这里把varchar,char,text,date,datetime字段全部映射为string类型.tinyint unsigned,bit,Integer,tinyint,smallint,mediumint映射为int类型,int unsigned映射为bigint.其它自定义映射规则根据自己情况修改*/\n/**当长度>0只有为decimal类型或double类型时才保留长度和小数的位数*/\n{{~it.entity.fields:field:index}}\n    {{=it.func.lowerCase(field.defKey)}} {{=it.func.lowerCase(field.dbType)=='varchar'||it.func.lowerCase(field.dbType)=='char'||it.func.lowerCase(field.dbType)=='text'||it.func.lowerCase(field.dbType)=='date'||it.func.lowerCase(field.dbType)=='datetime' ? 'string':it.func.lowerCase(field.dbType)=='tinyint unsigned'||it.func.lowerCase(field.dbType)=='bit'||it.func.lowerCase(field.dbType)=='integer'||it.func.lowerCase(field.dbType)=='tinyint'||it.func.lowerCase(field.dbType)=='smallint'||it.func.lowerCase(field.dbType)=='mediumint' ? 'int':it.func.lowerCase(field.dbType)=='int unsigned' ? 'bigint':it.func.lowerCase(field.dbType)}}{{?field.len>0&&(it.func.lowerCase(field.dbType)=='decimal'||it.func.lowerCase(field.dbType)=='double')}}{{='('}}{{=field.len}}{{?field.scale>0}}{{=','}}{{=field.scale}}{{=')'}}{{?}}{{?}} comment '{{=it.func.join(field.defName,field.comment,'')}}' {{= index < it.entity.fields.length-1 ? ',' : ( pkList.length>0 ? ',' :'' ) }}\n{{~}}\n{{? pkList.length >0 }}\n{{?}}\n)\n{{\n    let partitionedBy = it.entity.properties['partitioned by'];\n    partitionedBy = partitionedBy?partitionedBy:'请在扩展属性中配置[partitioned by]属性';\n}}\ncomment '{{=it.func.join(it.entity.defName,';') }}'\n/**是否分区表,分区字段名和字段注释自定义*/\n[partitioned by {{=partitionedBy}}]\n/**文件存储格式自定义*/\n[stored as orc]\n/**hdfs上的地址自定义*/\n[location xxx]\n;",
          "createView": "",
          "deleteTable": "",
          "createIndex": "",
          "deleteIndex": "",
          "message": "",
          "update": ""
        },
        {
          "applyFor": "B91D99E0-9B7C-416C-8737-B760957DAF09",
          "type": "appCode",
          "content": "{{\n    var today=new Date();\n    var fullYear=today.getFullYear();\n    var month=today.getMonth() + 1<10?\"0\"+today.getMonth():today.getMonth();\n    var days=today.getDate()<10?\"0\"+today.getDate():today.getDate();\n    var hours = today.getHours()<10?\"0\"+today.getHours():today.getHours();         \n\tvar minutes = today.getMinutes()<10?\"0\"+today.getMinutes():today.getMinutes();      \n\tvar seconds = today.getSeconds()<10?\"0\"+today.getSeconds():today.getSeconds();    \n}}\n// Package models  {{=it.func.join(it.entity.defName,it.entity.comment,'，')}}\n// author : http://www.liyang.love\n// date : {{=fullYear}}-{{=month}}-{{=days}} {{=hours}}:{{=minutes}}\n// desc : {{=it.func.join(it.entity.defName,it.entity.comment,'，')}}\npackage models\n\n$blankline\n\n// {{=it.func.camel(it.entity.defKey,true) }}  {{=it.func.join(it.entity.defName,it.entity.comment,'，')}}。\n// 说明:{{=it.entity.comment}}\n// 表名:{{=it.entity.defKey}}\n// group: {{=it.func.camel(it.entity.defKey,true) }}\n// obsolete:\n// appliesto:go 1.8+;\n// namespace:hongmouer.his.models.{{=it.func.camel(it.entity.defKey,true) }}\n// assembly: hongmouer.his.models.go\n// class:HongMouer.HIS.Models.{{=it.func.camel(it.entity.defKey,true) }}\n// version:{{=fullYear}}-{{=month}}-{{=days}} {{=hours}}:{{=minutes}}\ntype {{=it.func.camel(it.entity.defKey,true) }} struct {\n    {{~it.entity.fields:field:index}}\n    {{=formatGoLang(it.func.camel(field.defKey,true),null,field,it.entity.fields,null,1)}} {{=formatGoLang(field.type,\"type\",field,it.entity.fields,10,3)}}  `gorm:\"column:{{=field.primaryKey?\"primaryKey;\":\"\"}}{{=field.defKey}}\" json:\"{{=it.func.camel(field.defKey,true)}}\"` {{=formatGoLang(\"gorm:column:\"+field.defKey+\" json:\"+it.func.camel(field.defKey,true),null,field,it.entity.fields,null,2)}}  //type:{{=formatGoLang(field.type,\"type\",field,it.entity.fields,null,3)}}  comment:{{=formatGoLang(it.func.join(field.defName,field.comment,';'),\"defName\",field,it.entity.fields,null,4)}}  version:{{=fullYear}}-{{=month}}-{{=days}} {{=hours}}:{{=minutes}}\n    {{~}}\n}\n\n\n$blankline\n// TableName 表名:{{=it.entity.defKey}}，{{=it.entity.defName}}。\n// 说明:{{=it.entity.comment}}\nfunc (ZentaoUserInfo) TableName() string {\n\treturn \"{{=it.entity.defKey}}\"\n}\n\n{{\n\nfunction formatGoLang(str, fieldName, field, fileds, emptLength, isFiled) {\n    var maxLength = 0;\n\n    if (isFiled == 1) {\n        for (var i = 0; i < fileds.length; i++) {\n            if (getBlength(it.func.camel(fileds[i].defKey, true)) > maxLength) {\n                maxLength = getBlength(it.func.camel(fileds[i].defKey, true)) + 2;\n            }\n        }\n    } else if (isFiled == 2) {\n        for (var i = 0; i < fileds.length; i++) {\n            var newStr = \"gorm:column:\" + fileds[i].defKey + \" json:\" + it.func.camel(fileds[i].defKey, true);\n            if (getBlength(newStr) > maxLength) {\n                maxLength = getBlength(newStr) + 2;\n            }\n        }\n        var empt = \"\";\n        var strLength = getBlength(str);\n        if (field.primaryKey) {\n            strLength += getBlength(\"primaryKey;\");\n        }\n        for (var j = 0; j < maxLength - strLength; j++) {\n            empt += ' ';\n        }\n        return empt;\n    } else if (isFiled == 3) {\n        /*获取某个字段的最大长度*/\n        for (var i = 0; i < fileds.length; i++) {\n            var newStr = eval(\"fileds[\" + i + \"].\" + fieldName);\n            if (getBlength(newStr) > maxLength) {\n                maxLength = getBlength(newStr) + 1;\n            }\n        }\n    } else if (isFiled == 4) {\n        /*获取某个字段的最大长度*/\n        for (var i = 0; i < fileds.length; i++) {\n            var newStr = fileds[i].comment + \";\" + fileds[i].defName;\n            if (getBlength(newStr) > maxLength) {\n                maxLength = getBlength(newStr) + 1;\n            }\n        }\n    }\n    else {\n        maxLength = emptLength;\n    }\n\n    var strLength = getBlength(str);\n    for (var j = 0; j < maxLength - strLength; j++) {\n        str += ' ';\n    }\n    return str;\n}\n\nfunction getBlength(str) {\n    var n = 0;\n    for (var i = str.length; i--;) {\n        n += str.charCodeAt(i) > 255 ? 2 : 1;\n    }\n    return n;\n} \n\n}}"
        }
      ],
      "generatorDoc": {
        "docTemplate": ""
      },
      "relationFieldSize": 50,
      "uiHint": [
        {
          "defKey": "Input",
          "defName": "普通输入框",
          "id": "642D2E0A-8846-4549-BE56-8C0473F26EDE"
        },
        {
          "defKey": "Select",
          "defName": "下拉输入框",
          "id": "FB111359-2B73-4443-926C-08A98E446448"
        },
        {
          "defKey": "CheckBox",
          "defName": "复选框",
          "id": "0CB8A6C9-1115-4FC0-B51E-5C028065082F"
        },
        {
          "defKey": "RadioBox",
          "defName": "单选框",
          "id": "5C04987A-260F-4B7C-A5D5-22A181AAE9CA"
        },
        {
          "defKey": "Double",
          "defName": "小数输入",
          "id": "8D5BAFE4-E15C-4707-A047-8EE59C58E70F"
        },
        {
          "defKey": "Integer",
          "defName": "整数输入",
          "id": "9999AF2A-A44E-415C-A2DC-D7C613BD0073"
        },
        {
          "defKey": "Money",
          "defName": "金额输入",
          "id": "2B0C3D0C-7BAF-4B36-81AD-9362B5E5DC2E"
        },
        {
          "defKey": "Date",
          "defName": "日期输入",
          "id": "E4D94E14-F695-487F-AFC2-4D888009B7DA"
        },
        {
          "defKey": "DataYearMonth",
          "defName": "年月输入",
          "id": "936927E3-DD2D-4096-87FD-074CDE278D59"
        },
        {
          "defKey": "Text",
          "defName": "长文本输入",
          "id": "D89DD4F1-ADAC-4469-BF8D-B3FF41AE7963"
        },
        {
          "defKey": "RichText",
          "defName": "富文本输入",
          "id": "C134EB1F-4CFF-49E0-882F-2C6FB275CB20"
        }
      ],
      "headers": [
        {
          "refKey": "defKey",
          "hideInGraph": false
        },
        {
          "refKey": "defName",
          "hideInGraph": false
        },
        {
          "refKey": "primaryKey",
          "hideInGraph": false
        },
        {
          "refKey": "notNull",
          "hideInGraph": true
        },
        {
          "refKey": "autoIncrement",
          "hideInGraph": true
        },
        {
          "refKey": "domain",
          "hideInGraph": true
        },
        {
          "refKey": "type",
          "hideInGraph": false
        },
        {
          "refKey": "len",
          "hideInGraph": false
        },
        {
          "refKey": "scale",
          "hideInGraph": false
        },
        {
          "refKey": "comment",
          "hideInGraph": true
        },
        {
          "refKey": "refDict",
          "hideInGraph": true
        },
        {
          "refKey": "defaultValue",
          "hideInGraph": true
        },
        {
          "refKey": "isStandard",
          "hideInGraph": false
        },
        {
          "refKey": "uiHint",
          "hideInGraph": true
        },
        {
          "refKey": "extProps",
          "hideInGraph": true
        }
      ],
      "menuWidth": "255px"
    },
    "entities": [
      {
        "id": "C1452B3E-ECB0-4914-B08B-B798043EF38A",
        "env": {
          "base": {
            "nameSpace": "",
            "codeRoot": ""
          }
        },
        "defKey": "_Visit",
        "defName": "访问记录",
        "comment": "",
        "properties": {
          "partitioned by": "(date string)",
          "row format delimited": "",
          "fields terminated by ','": "",
          "collection items terminated by '-'": "",
          "map keys terminated by ':'": "",
          "store as textfile;": ""
        },
        "nameTemplate": "{defKey}[{defName}]",
        "headers": [
          {
            "refKey": "hideInGraph",
            "hideInGraph": true
          },
          {
            "refKey": "defKey",
            "hideInGraph": false
          },
          {
            "refKey": "defName",
            "hideInGraph": false
          },
          {
            "refKey": "primaryKey",
            "hideInGraph": false
          },
          {
            "refKey": "notNull",
            "hideInGraph": true
          },
          {
            "refKey": "autoIncrement",
            "hideInGraph": true
          },
          {
            "refKey": "domain",
            "hideInGraph": true
          },
          {
            "refKey": "type",
            "hideInGraph": false
          },
          {
            "refKey": "len",
            "hideInGraph": false
          },
          {
            "refKey": "scale",
            "hideInGraph": false
          },
          {
            "refKey": "comment",
            "hideInGraph": true
          },
          {
            "refKey": "refDict",
            "hideInGraph": true
          },
          {
            "refKey": "defaultValue",
            "hideInGraph": true
          },
          {
            "refKey": "isStandard",
            "hideInGraph": false
          },
          {
            "refKey": "uiHint",
            "hideInGraph": true
          },
          {
            "refKey": "extProps",
            "hideInGraph": true
          }
        ],
        "fields": [
          {
            "defKey": "model",
            "defName": "访问模型",
            "comment": "",
            "type": "VARCHAR",
            "len": 15,
            "scale": "",
            "primaryKey": false,
            "notNull": true,
            "autoIncrement": false,
            "defaultValue": "",
            "hideInGraph": true,
            "domain": "",
            "refDict": "",
            "uiHint": "",
            "id": "B172ECAA-3852-4202-8D4E-A23265337E9D"
          },
          {
            "defKey": "id",
            "defName": "id",
            "comment": "",
            "domain": "",
            "type": "INT",
            "len": 15,
            "scale": "",
            "primaryKey": false,
            "notNull": true,
            "autoIncrement": false,
            "defaultValue": "",
            "hideInGraph": true,
            "refDict": "",
            "uiHint": "",
            "id": "8248AC67-41FA-422B-9118-B4FB43A2D7AA"
          },
          {
            "defKey": "operate",
            "defName": "操作类型",
            "comment": "1-增\\n2-删\\n3-改\\n4-查",
            "domain": "",
            "type": "INT",
            "len": 4,
            "scale": "",
            "primaryKey": false,
            "notNull": true,
            "autoIncrement": false,
            "defaultValue": "",
            "hideInGraph": true,
            "refDict": "",
            "uiHint": "",
            "id": "A8F7F2ED-B015-42C9-B550-4812C22A83AB"
          },
          {
            "defKey": "date",
            "defName": "访问时间",
            "comment": "",
            "domain": "",
            "type": "DATETIME",
            "len": "",
            "scale": "",
            "primaryKey": false,
            "notNull": true,
            "autoIncrement": false,
            "defaultValue": "CURRENT_TIMESTAMP",
            "hideInGraph": true,
            "refDict": "",
            "uiHint": "",
            "id": "1B84A734-CAB8-481E-AAD3-B4DFD7CE9522"
          }
        ],
        "correlations": [],
        "indexes": []
      },
      {
        "id": "948C801D-3082-41F1-BDCF-9308D772B27E",
        "defKey": "apijson_privacy",
        "defName": "用户隐私信息表",
        "comment": "Privacy\n对安全要求高，不想泄漏真实名称。对外名称为",
        "properties": {},
        "fields": [
          {
            "defKey": "id",
            "defName": "唯一标识",
            "comment": "",
            "domain": "",
            "type": "BIGINT",
            "len": 20,
            "scale": "",
            "primaryKey": true,
            "notNull": true,
            "autoIncrement": true,
            "defaultValue": "",
            "hideInGraph": false,
            "refDict": "",
            "id": "298C085C-5B2B-496E-BB3D-2AC85266312E",
            "extProps": {}
          },
          {
            "defKey": "certified",
            "defName": "已认证",
            "comment": "",
            "domain": "",
            "type": "TINYINT",
            "len": 4,
            "scale": "",
            "primaryKey": false,
            "notNull": true,
            "autoIncrement": false,
            "defaultValue": "0",
            "hideInGraph": false,
            "refDict": "",
            "id": "C641196E-77EF-4026-BB0E-578C573C2ACD",
            "extProps": {}
          },
          {
            "defKey": "phone",
            "defName": "手机号，仅支持",
            "comment": "11 位数的。不支持 +86 这种国家地区开头的。如果要支持就改为 VARCHAR(14)",
            "domain": "",
            "type": "BIGINT",
            "len": 20,
            "scale": "",
            "primaryKey": false,
            "notNull": true,
            "autoIncrement": false,
            "defaultValue": "",
            "hideInGraph": false,
            "refDict": "",
            "id": "A7686EFF-E010-47B3-828D-456DA371510C",
            "extProps": {}
          },
          {
            "defKey": "balance",
            "defName": "余额",
            "comment": "",
            "domain": "",
            "type": "DECIMAL",
            "len": 10,
            "scale": 2,
            "primaryKey": false,
            "notNull": true,
            "autoIncrement": false,
            "defaultValue": "0.00",
            "hideInGraph": false,
            "refDict": "",
            "id": "D3D0A2A9-4D15-4FE8-A615-45D4141C0258",
            "extProps": {}
          },
          {
            "defKey": "_password",
            "defName": "登录密码",
            "comment": "",
            "domain": "",
            "type": "VARCHAR",
            "len": 20,
            "scale": "",
            "primaryKey": false,
            "notNull": true,
            "autoIncrement": false,
            "defaultValue": "",
            "hideInGraph": false,
            "refDict": "",
            "id": "C5F592F3-6A67-44A5-92EB-6BB153CD726E",
            "extProps": {}
          },
          {
            "defKey": "_payPassword",
            "defName": "支付密码",
            "comment": "",
            "domain": "",
            "type": "INT",
            "len": 11,
            "scale": "",
            "primaryKey": false,
            "notNull": true,
            "autoIncrement": false,
            "defaultValue": "123456",
            "hideInGraph": false,
            "refDict": "",
            "id": "67919CBA-E61F-4A31-9D75-7B9BD9F2E35B",
            "extProps": {}
          }
        ],
        "indexes": [
          {
            "defKey": "phone_UNIQUE",
            "unique": true,
            "defName": null,
            "comment": "",
            "fields": [
              {
                "ascOrDesc": "A",
                "id": "76095E61-4D1B-497B-913A-AFA1320698F3",
                "fieldDefKey": "A7686EFF-E010-47B3-828D-456DA371510C"
              }
            ],
            "id": "8EE64785-EFD3-480C-9EE7-B1278E0D553E"
          }
        ],
        "nameTemplate": "{defKey}[{defName}]",
        "headers": [
          {
            "freeze": false,
            "refKey": "hideInGraph",
            "hideInGraph": true
          },
          {
            "freeze": true,
            "refKey": "defKey",
            "hideInGraph": false
          },
          {
            "freeze": true,
            "refKey": "defName",
            "hideInGraph": false
          },
          {
            "freeze": false,
            "refKey": "primaryKey",
            "hideInGraph": false
          },
          {
            "freeze": false,
            "refKey": "notNull",
            "hideInGraph": true
          },
          {
            "freeze": false,
            "refKey": "autoIncrement",
            "hideInGraph": true
          },
          {
            "freeze": false,
            "refKey": "domain",
            "hideInGraph": true
          },
          {
            "freeze": false,
            "refKey": "type",
            "hideInGraph": false
          },
          {
            "freeze": false,
            "refKey": "len",
            "hideInGraph": false
          },
          {
            "freeze": false,
            "refKey": "scale",
            "hideInGraph": false
          },
          {
            "freeze": false,
            "refKey": "comment",
            "hideInGraph": true
          },
          {
            "freeze": false,
            "refKey": "refDict",
            "hideInGraph": true
          },
          {
            "freeze": false,
            "refKey": "defaultValue",
            "hideInGraph": true
          },
          {
            "freeze": false,
            "refKey": "isStandard",
            "hideInGraph": false
          },
          {
            "freeze": false,
            "refKey": "uiHint",
            "hideInGraph": true
          },
          {
            "freeze": false,
            "refKey": "extProps",
            "hideInGraph": true
          }
        ],
        "correlations": []
      },
      {
        "id": "0178A2C2-DC48-474E-AED0-1F86DF273A93",
        "defKey": "apijson_user",
        "defName": "用户公开信息表",
        "comment": "对安全要求高，不想泄漏真实名称。对外名称为",
        "properties": {},
        "fields": [
          {
            "defKey": "id",
            "defName": "唯一标识",
            "comment": "",
            "domain": "",
            "type": "BIGINT",
            "len": 20,
            "scale": "",
            "primaryKey": true,
            "notNull": true,
            "autoIncrement": true,
            "defaultValue": "",
            "hideInGraph": false,
            "refDict": "",
            "id": "83318CD2-1CA1-4CF3-AE6C-B129584E56D4",
            "extProps": {}
          },
          {
            "defKey": "sex",
            "defName": "性别：",
            "comment": "0-男\n1-女",
            "domain": "",
            "type": "TINYINT",
            "len": 4,
            "scale": "",
            "primaryKey": false,
            "notNull": true,
            "autoIncrement": false,
            "defaultValue": "0",
            "hideInGraph": false,
            "refDict": "",
            "id": "9D4BBD7C-3B30-421D-9278-C445E12F7161",
            "extProps": {}
          },
          {
            "defKey": "name",
            "defName": "名称",
            "comment": "",
            "domain": "",
            "type": "VARCHAR",
            "len": 20,
            "scale": "",
            "primaryKey": false,
            "notNull": true,
            "autoIncrement": false,
            "defaultValue": "",
            "hideInGraph": false,
            "refDict": "",
            "id": "0D2BF837-5248-4681-97E3-DF7AB82DF116",
            "extProps": {}
          },
          {
            "defKey": "tag",
            "defName": "标签",
            "comment": "",
            "domain": "",
            "type": "VARCHAR",
            "len": 45,
            "scale": "",
            "primaryKey": false,
            "notNull": false,
            "autoIncrement": false,
            "defaultValue": "",
            "hideInGraph": false,
            "refDict": "",
            "id": "309170AE-93F7-4ABA-870B-B7DCA3EB9AD4",
            "extProps": {}
          },
          {
            "defKey": "head",
            "defName": "头像url",
            "comment": "",
            "domain": "",
            "type": "VARCHAR",
            "len": 300,
            "scale": "",
            "primaryKey": false,
            "notNull": false,
            "autoIncrement": false,
            "defaultValue": "'https://raw.githubusercontent.com/TommyLemon/StaticResources/master/APIJSON_Logo.png'",
            "hideInGraph": false,
            "refDict": "",
            "id": "B45A6C5B-3BE6-4D51-98EA-A51977DB560C",
            "extProps": {}
          },
          {
            "defKey": "contactIdList",
            "defName": "联系人id列表",
            "comment": "",
            "domain": "",
            "type": "JSON",
            "len": "",
            "scale": "",
            "primaryKey": false,
            "notNull": false,
            "autoIncrement": false,
            "defaultValue": "",
            "hideInGraph": false,
            "refDict": "",
            "id": "63CFAAA2-5EFB-4107-9B03-157EC47956EF",
            "extProps": {}
          },
          {
            "defKey": "pictureList",
            "defName": "照片列表",
            "comment": "",
            "domain": "",
            "type": "JSON",
            "len": "",
            "scale": "",
            "primaryKey": false,
            "notNull": false,
            "autoIncrement": false,
            "defaultValue": "",
            "hideInGraph": false,
            "refDict": "",
            "id": "64451389-95D5-419A-A3CF-22B665A62E4C",
            "extProps": {}
          },
          {
            "defKey": "date",
            "defName": "创建日期",
            "comment": "",
            "domain": "",
            "type": "TIMESTAMP",
            "len": "",
            "scale": "",
            "primaryKey": false,
            "notNull": false,
            "autoIncrement": false,
            "defaultValue": "'CURRENT_TIMESTAMP'",
            "hideInGraph": false,
            "refDict": "",
            "id": "70C95517-E9C2-4AC9-9E9A-4AB9AD99DF06",
            "extProps": {}
          }
        ],
        "indexes": [
          {
            "defKey": "name_tag_index",
            "unique": false,
            "defName": null,
            "comment": "",
            "fields": [
              {
                "ascOrDesc": null,
                "id": "0BA2AE53-92E4-4CA4-B2CC-1E4B2666B28C",
                "fieldDefKey": "0D2BF837-5248-4681-97E3-DF7AB82DF116"
              },
              {
                "ascOrDesc": null,
                "id": "0FDFC0CB-9940-4724-8E5C-F557729C37B9",
                "fieldDefKey": "309170AE-93F7-4ABA-870B-B7DCA3EB9AD4"
              }
            ],
            "id": "C38E6434-2043-4298-9123-35730FDE14D3"
          }
        ],
        "nameTemplate": "{defKey}[{defName}]",
        "headers": [
          {
            "freeze": false,
            "refKey": "hideInGraph",
            "hideInGraph": true
          },
          {
            "freeze": true,
            "refKey": "defKey",
            "hideInGraph": false
          },
          {
            "freeze": true,
            "refKey": "defName",
            "hideInGraph": false
          },
          {
            "freeze": false,
            "refKey": "primaryKey",
            "hideInGraph": false
          },
          {
            "freeze": false,
            "refKey": "notNull",
            "hideInGraph": true
          },
          {
            "freeze": false,
            "refKey": "autoIncrement",
            "hideInGraph": true
          },
          {
            "freeze": false,
            "refKey": "domain",
            "hideInGraph": true
          },
          {
            "freeze": false,
            "refKey": "type",
            "hideInGraph": false
          },
          {
            "freeze": false,
            "refKey": "len",
            "hideInGraph": false
          },
          {
            "freeze": false,
            "refKey": "scale",
            "hideInGraph": false
          },
          {
            "freeze": false,
            "refKey": "comment",
            "hideInGraph": true
          },
          {
            "freeze": false,
            "refKey": "refDict",
            "hideInGraph": true
          },
          {
            "freeze": false,
            "refKey": "defaultValue",
            "hideInGraph": true
          },
          {
            "freeze": false,
            "refKey": "isStandard",
            "hideInGraph": false
          },
          {
            "freeze": false,
            "refKey": "uiHint",
            "hideInGraph": true
          },
          {
            "freeze": false,
            "refKey": "extProps",
            "hideInGraph": true
          }
        ],
        "correlations": []
      },
      {
        "id": "62F3BDC0-AE84-4F2F-87FB-7BAA7C036CB2",
        "env": {
          "base": {
            "nameSpace": "",
            "codeRoot": ""
          }
        },
        "defKey": "Access",
        "defName": "权限配置(必须)",
        "comment": "",
        "properties": {
          "partitioned by": "(date string)",
          "row format delimited": "",
          "fields terminated by ','": "",
          "collection items terminated by '-'": "",
          "map keys terminated by ':'": "",
          "store as textfile;": ""
        },
        "nameTemplate": "{defKey}[{defName}]",
        "headers": [
          {
            "refKey": "hideInGraph",
            "freeze": true,
            "hideInGraph": true,
            "code": "relationNoShow",
            "value": "关系图",
            "newCode": "hideInGraph",
            "com": "Icon",
            "relationNoShow": true
          },
          {
            "refKey": "defKey",
            "freeze": true,
            "hideInGraph": false,
            "code": "name",
            "value": "字段代码",
            "newCode": "defKey",
            "com": "Input",
            "relationNoShow": false
          },
          {
            "refKey": "defName",
            "hideInGraph": false,
            "code": "chnname",
            "value": "显示名称",
            "newCode": "defName",
            "com": "Input",
            "relationNoShow": false
          },
          {
            "refKey": "primaryKey",
            "hideInGraph": false,
            "code": "pk",
            "value": "主键",
            "newCode": "primaryKey",
            "com": "Checkbox",
            "relationNoShow": false
          },
          {
            "refKey": "notNull",
            "hideInGraph": true,
            "code": "notNull",
            "value": "不为空",
            "newCode": "notNull",
            "com": "Checkbox",
            "relationNoShow": true
          },
          {
            "refKey": "autoIncrement",
            "hideInGraph": true,
            "code": "autoIncrement",
            "value": "自增",
            "newCode": "autoIncrement",
            "com": "Checkbox",
            "relationNoShow": true
          },
          {
            "refKey": "domain",
            "hideInGraph": true,
            "code": "type",
            "value": "数据域",
            "newCode": "domain",
            "com": "Select",
            "relationNoShow": true
          },
          {
            "refKey": "type",
            "hideInGraph": false,
            "code": "dataType",
            "value": "数据类型",
            "newCode": "type",
            "com": "Text",
            "relationNoShow": false
          },
          {
            "refKey": "len",
            "hideInGraph": false,
            "code": "len",
            "value": "长度",
            "newCode": "len",
            "com": "Input",
            "relationNoShow": false
          },
          {
            "refKey": "scale",
            "hideInGraph": false,
            "code": "scale",
            "value": "小数位数",
            "newCode": "scale",
            "com": "Input",
            "relationNoShow": false
          },
          {
            "refKey": "comment",
            "hideInGraph": true,
            "code": "remark",
            "value": "说明",
            "newCode": "comment",
            "com": "Input",
            "relationNoShow": true
          },
          {
            "refKey": "refDict",
            "hideInGraph": true,
            "code": "refDict",
            "value": "数据字典",
            "newCode": "refDict",
            "com": "SearchSelect",
            "relationNoShow": true
          },
          {
            "refKey": "defaultValue",
            "hideInGraph": true,
            "code": "defaultValue",
            "value": "默认值",
            "newCode": "defaultValue",
            "com": "Input",
            "relationNoShow": true
          },
          {
            "refKey": "isStandard",
            "hideInGraph": false,
            "code": "isStandard",
            "value": "标准字段",
            "newCode": "isStandard",
            "com": "label",
            "relationNoShow": false
          },
          {
            "refKey": "uiHint",
            "hideInGraph": true,
            "code": "uiHint",
            "value": "UI建议",
            "newCode": "uiHint",
            "com": "Select",
            "relationNoShow": true
          },
          {
            "refKey": "extProps",
            "hideInGraph": true,
            "code": "extProps",
            "value": "拓展属性",
            "newCode": "extProps",
            "com": "linkButton",
            "relationNoShow": true
          }
        ],
        "fields": [
          {
            "defKey": "id",
            "defName": "",
            "comment": "",
            "type": "INT",
            "len": 15,
            "scale": "",
            "primaryKey": false,
            "notNull": true,
            "autoIncrement": true,
            "defaultValue": "",
            "hideInGraph": false,
            "refDict": "",
            "extProps": {},
            "domain": "",
            "id": "61C91A8A-2335-4B09-B758-54AF35232F84"
          },
          {
            "defKey": "debug",
            "defName": "",
            "comment": "是否为 DEBUG 调试数据，只允许在开发环境使用，测试和线上环境禁用：0-否，1-是。",
            "type": "INT",
            "len": 2,
            "scale": "",
            "primaryKey": false,
            "notNull": true,
            "autoIncrement": false,
            "defaultValue": "0",
            "hideInGraph": false,
            "refDict": "",
            "extProps": {},
            "domain": "",
            "id": "519FEF42-24F8-4140-8F45-706DDCDDD6D2"
          },
          {
            "defKey": "name",
            "defName": "",
            "comment": "实际表名，例如 apijson_user",
            "type": "",
            "len": "",
            "scale": "",
            "primaryKey": false,
            "notNull": true,
            "autoIncrement": false,
            "defaultValue": "",
            "hideInGraph": false,
            "refDict": "",
            "extProps": {},
            "domain": "9092C4E0-1A54-4859-ABBB-5B62DBC27573",
            "id": "7D9F0CCF-6D05-4299-BF9D-84E07CCB2015"
          },
          {
            "defKey": "alias",
            "defName": "",
            "comment": "外部调用的表别名，例如 User，前端传参示例 { \"User\":{} }",
            "type": "",
            "len": "",
            "scale": "",
            "primaryKey": false,
            "notNull": false,
            "autoIncrement": false,
            "defaultValue": "NULL",
            "hideInGraph": false,
            "refDict": "",
            "extProps": {},
            "domain": "9092C4E0-1A54-4859-ABBB-5B62DBC27573",
            "id": "C2110C5C-D9F6-4230-BE03-4D17401C55DC"
          },
          {
            "defKey": "get",
            "defName": "",
            "comment": "允许 get 的角色列表，例如 [\"LOGIN\", \"CONTACT\", \"CIRCLE\", \"OWNER\"]\\n用 JSON 类型不能设置默认值，反正权限对应的需求是明确的，也不需要自动转 JSONArray。\\nTODO: 直接 LOGIN,CONTACT,CIRCLE,OWNER 更简单，反正是开发内部用，不需要复杂查询。",
            "type": "",
            "len": "",
            "scale": "",
            "primaryKey": false,
            "notNull": true,
            "autoIncrement": false,
            "defaultValue": "[\"UNKNOWN\", \"LOGIN\", \"CONTACT\", \"CIRCLE\", \"OWNER\", \"ADMIN\"]' COMMENT '允许 get 的角色列表，例如 [\"LOGIN\", \"CONTACT\", \"CIRCLE\", \"OWNER\"]\\n用 JSON 类型不能设置默认值，反正权限对应的需求是明确的，也不需要自动转 JSONArray。\\nTODO: 直接 LOGIN,CONTACT,CIRCLE,OWNER 更简单，反正是开发内部用，不需要复杂查询。",
            "hideInGraph": false,
            "refDict": "",
            "extProps": {},
            "domain": "9092C4E0-1A54-4859-ABBB-5B62DBC27573",
            "id": "8E22637C-1FC7-4817-B3D1-197F09931822"
          },
          {
            "defKey": "head",
            "defName": "",
            "comment": "允许 head 的角色列表，例如 [\"LOGIN\", \"CONTACT\", \"CIRCLE\", \"OWNER\"]",
            "type": "",
            "len": "",
            "scale": "",
            "primaryKey": false,
            "notNull": true,
            "autoIncrement": false,
            "defaultValue": "[\"UNKNOWN\", \"LOGIN\", \"CONTACT\", \"CIRCLE\", \"OWNER\", \"ADMIN\"]' COMMENT '允许 head 的角色列表，例如 [\"LOGIN\", \"CONTACT\", \"CIRCLE\", \"OWNER\"]",
            "hideInGraph": false,
            "refDict": "",
            "extProps": {},
            "domain": "9092C4E0-1A54-4859-ABBB-5B62DBC27573",
            "id": "59DCF9A1-268C-4778-B0FE-C608D967F6A4"
          },
          {
            "defKey": "gets",
            "defName": "",
            "comment": "允许 gets 的角色列表，例如 [\"LOGIN\", \"CONTACT\", \"CIRCLE\", \"OWNER\"]",
            "type": "",
            "len": "",
            "scale": "",
            "primaryKey": false,
            "notNull": true,
            "autoIncrement": false,
            "defaultValue": "[\"LOGIN\", \"CONTACT\", \"CIRCLE\", \"OWNER\", \"ADMIN\"]' COMMENT '允许 gets 的角色列表，例如 [\"LOGIN\", \"CONTACT\", \"CIRCLE\", \"OWNER\"]",
            "hideInGraph": false,
            "refDict": "",
            "extProps": {},
            "domain": "9092C4E0-1A54-4859-ABBB-5B62DBC27573",
            "id": "DF10E39C-4C99-4570-B713-786E90AC575A"
          },
          {
            "defKey": "heads",
            "defName": "",
            "comment": "允许 heads 的角色列表，例如 [\"LOGIN\", \"CONTACT\", \"CIRCLE\", \"OWNER\"]",
            "type": "",
            "len": "",
            "scale": "",
            "primaryKey": false,
            "notNull": true,
            "autoIncrement": false,
            "defaultValue": "[\"LOGIN\", \"CONTACT\", \"CIRCLE\", \"OWNER\", \"ADMIN\"]' COMMENT '允许 heads 的角色列表，例如 [\"LOGIN\", \"CONTACT\", \"CIRCLE\", \"OWNER\"]",
            "hideInGraph": false,
            "refDict": "",
            "extProps": {},
            "domain": "9092C4E0-1A54-4859-ABBB-5B62DBC27573",
            "id": "C35AABFE-B13B-4F10-865A-16F3AA43421E"
          },
          {
            "defKey": "post",
            "defName": "",
            "comment": "允许 post 的角色列表，例如 [\"LOGIN\", \"CONTACT\", \"CIRCLE\", \"OWNER\"]",
            "type": "",
            "len": "",
            "scale": "",
            "primaryKey": false,
            "notNull": true,
            "autoIncrement": false,
            "defaultValue": "[\"OWNER\", \"ADMIN\"]",
            "hideInGraph": false,
            "refDict": "",
            "extProps": {},
            "domain": "9092C4E0-1A54-4859-ABBB-5B62DBC27573",
            "id": "5A8494EC-BB9B-465B-BDB0-6AD25F45C0D6"
          },
          {
            "defKey": "put",
            "defName": "",
            "comment": "允许 put 的角色列表，例如 [\"LOGIN\", \"CONTACT\", \"CIRCLE\", \"OWNER\"]",
            "type": "",
            "len": "",
            "scale": "",
            "primaryKey": false,
            "notNull": true,
            "autoIncrement": false,
            "defaultValue": "[\"OWNER\", \"ADMIN\"]",
            "hideInGraph": false,
            "refDict": "",
            "extProps": {},
            "domain": "9092C4E0-1A54-4859-ABBB-5B62DBC27573",
            "id": "209DBCF0-8C3C-46B2-ACDC-35A2BCDF594C"
          },
          {
            "defKey": "delete",
            "defName": "",
            "comment": "允许 delete 的角色列表，例如 [\"LOGIN\", \"CONTACT\", \"CIRCLE\", \"OWNER\"]",
            "type": "",
            "len": "",
            "scale": "",
            "primaryKey": false,
            "notNull": true,
            "autoIncrement": false,
            "defaultValue": "[\"OWNER\", \"ADMIN\"]",
            "hideInGraph": false,
            "refDict": "",
            "extProps": {},
            "domain": "9092C4E0-1A54-4859-ABBB-5B62DBC27573",
            "id": "3155CE73-C0A1-4CFE-B814-03D54191C72A"
          },
          {
            "defKey": "date",
            "defName": "",
            "comment": "创建时间",
            "type": "",
            "len": "",
            "scale": "",
            "primaryKey": false,
            "notNull": true,
            "autoIncrement": false,
            "defaultValue": "",
            "hideInGraph": false,
            "refDict": "",
            "extProps": {},
            "domain": "7CFFA0D3-6A93-4DDC-BC10-DF21211064DC",
            "id": "E44D2A8F-81B5-4F7D-B99A-45D20D5312EB"
          },
          {
            "defKey": "detail",
            "defName": "",
            "comment": "",
            "type": "",
            "len": "",
            "scale": "",
            "primaryKey": false,
            "notNull": false,
            "autoIncrement": false,
            "defaultValue": "NULL",
            "hideInGraph": false,
            "refDict": "",
            "extProps": {},
            "domain": "9092C4E0-1A54-4859-ABBB-5B62DBC27573",
            "id": "1F50AB52-CE05-4FE9-95AB-2D20221E1449"
          }
        ],
        "correlations": [],
        "indexes": []
      },
      {
        "id": "7C63DF7D-2C67-4313-8F95-34137F845B7A",
        "env": {
          "base": {
            "nameSpace": "",
            "codeRoot": ""
          }
        },
        "defKey": "Comment",
        "defName": "评论",
        "comment": "",
        "properties": {
          "partitioned by": "(date string)",
          "row format delimited": "",
          "fields terminated by ','": "",
          "collection items terminated by '-'": "",
          "map keys terminated by ':'": "",
          "store as textfile;": ""
        },
        "nameTemplate": "{defKey}[{defName}]",
        "headers": [
          {
            "refKey": "hideInGraph",
            "freeze": true,
            "hideInGraph": true,
            "code": "relationNoShow",
            "value": "关系图",
            "newCode": "hideInGraph",
            "com": "Icon",
            "relationNoShow": true
          },
          {
            "refKey": "defKey",
            "freeze": true,
            "hideInGraph": false,
            "code": "name",
            "value": "字段代码",
            "newCode": "defKey",
            "com": "Input",
            "relationNoShow": false
          },
          {
            "refKey": "defName",
            "freeze": true,
            "hideInGraph": false,
            "code": "chnname",
            "value": "显示名称",
            "newCode": "defName",
            "com": "Input",
            "relationNoShow": false
          },
          {
            "refKey": "primaryKey",
            "hideInGraph": false,
            "code": "pk",
            "value": "主键",
            "newCode": "primaryKey",
            "com": "Checkbox",
            "relationNoShow": false
          },
          {
            "refKey": "notNull",
            "hideInGraph": true,
            "code": "notNull",
            "value": "不为空",
            "newCode": "notNull",
            "com": "Checkbox",
            "relationNoShow": true
          },
          {
            "refKey": "autoIncrement",
            "hideInGraph": true,
            "code": "autoIncrement",
            "value": "自增",
            "newCode": "autoIncrement",
            "com": "Checkbox",
            "relationNoShow": true
          },
          {
            "refKey": "domain",
            "hideInGraph": true,
            "code": "type",
            "value": "数据域",
            "newCode": "domain",
            "com": "Select",
            "relationNoShow": true
          },
          {
            "refKey": "type",
            "hideInGraph": false,
            "code": "dataType",
            "value": "数据类型",
            "newCode": "type",
            "com": "Text",
            "relationNoShow": false
          },
          {
            "refKey": "len",
            "hideInGraph": false,
            "code": "len",
            "value": "长度",
            "newCode": "len",
            "com": "Input",
            "relationNoShow": false
          },
          {
            "refKey": "scale",
            "hideInGraph": false,
            "code": "scale",
            "value": "小数位数",
            "newCode": "scale",
            "com": "Input",
            "relationNoShow": false
          },
          {
            "refKey": "comment",
            "hideInGraph": true,
            "code": "remark",
            "value": "说明",
            "newCode": "comment",
            "com": "Input",
            "relationNoShow": true
          },
          {
            "refKey": "refDict",
            "hideInGraph": true,
            "code": "refDict",
            "value": "数据字典",
            "newCode": "refDict",
            "com": "SearchSelect",
            "relationNoShow": true
          },
          {
            "refKey": "defaultValue",
            "hideInGraph": true,
            "code": "defaultValue",
            "value": "默认值",
            "newCode": "defaultValue",
            "com": "Input",
            "relationNoShow": true
          },
          {
            "refKey": "isStandard",
            "hideInGraph": false,
            "code": "isStandard",
            "value": "标准字段",
            "newCode": "isStandard",
            "com": "label",
            "relationNoShow": false
          },
          {
            "refKey": "uiHint",
            "hideInGraph": true,
            "code": "uiHint",
            "value": "UI建议",
            "newCode": "uiHint",
            "com": "Select",
            "relationNoShow": true
          },
          {
            "refKey": "extProps",
            "hideInGraph": true,
            "code": "extProps",
            "value": "拓展属性",
            "newCode": "extProps",
            "com": "linkButton",
            "relationNoShow": true
          }
        ],
        "fields": [
          {
            "defKey": "id",
            "defName": "唯一标识",
            "comment": "",
            "type": "",
            "len": "",
            "scale": "",
            "primaryKey": true,
            "notNull": true,
            "autoIncrement": false,
            "defaultValue": "",
            "hideInGraph": false,
            "refDict": "",
            "extProps": {},
            "domain": "9092C4E0-1A54-4859-ABBB-5B62DBC27573",
            "id": "7177B76B-77BB-4BA1-98EC-8F6B31AB3D84"
          },
          {
            "defKey": "toId",
            "defName": "被回复的id",
            "comment": "",
            "type": "",
            "len": "",
            "scale": "",
            "primaryKey": false,
            "notNull": true,
            "autoIncrement": false,
            "defaultValue": "0",
            "hideInGraph": false,
            "refDict": "",
            "extProps": {},
            "domain": "9092C4E0-1A54-4859-ABBB-5B62DBC27573",
            "id": "C173EAAD-69EF-4D59-AC02-D7BE42B11314"
          },
          {
            "defKey": "userId",
            "defName": "评论人 User 的 id",
            "comment": "",
            "type": "",
            "len": "",
            "scale": "",
            "primaryKey": false,
            "notNull": true,
            "autoIncrement": false,
            "defaultValue": "",
            "hideInGraph": false,
            "refDict": "",
            "extProps": {},
            "domain": "9092C4E0-1A54-4859-ABBB-5B62DBC27573",
            "id": "F93737F7-F7E0-47C5-8D81-17225B10C31C"
          },
          {
            "defKey": "momentId",
            "defName": "动态id",
            "comment": "",
            "type": "",
            "len": "",
            "scale": "",
            "primaryKey": false,
            "notNull": true,
            "autoIncrement": true,
            "defaultValue": "",
            "hideInGraph": false,
            "refDict": "",
            "extProps": {},
            "domain": "9092C4E0-1A54-4859-ABBB-5B62DBC27573",
            "id": "26D902A8-B13C-4B56-B0CD-A1F3C2047FEE"
          },
          {
            "defKey": "date",
            "defName": "创建日期",
            "comment": "",
            "type": "",
            "len": "",
            "scale": "",
            "primaryKey": false,
            "notNull": false,
            "autoIncrement": false,
            "defaultValue": "CURRENT_TIMESTAMP",
            "hideInGraph": false,
            "refDict": "",
            "extProps": {},
            "domain": "9092C4E0-1A54-4859-ABBB-5B62DBC27573",
            "id": "B40140AA-8732-4132-AB4C-DBF058D13C82"
          },
          {
            "defKey": "content",
            "defName": "内容",
            "comment": "",
            "type": "",
            "len": "",
            "scale": "",
            "primaryKey": false,
            "notNull": true,
            "autoIncrement": false,
            "defaultValue": "",
            "hideInGraph": false,
            "refDict": "",
            "extProps": {},
            "domain": "9092C4E0-1A54-4859-ABBB-5B62DBC27573",
            "id": "440D5806-6A02-449C-88CA-838D7203FA62"
          }
        ],
        "correlations": [],
        "indexes": []
      },
      {
        "id": "C873A5E9-1338-43AA-A5DC-57BCD8BCC5AA",
        "env": {
          "base": {
            "nameSpace": "",
            "codeRoot": ""
          }
        },
        "defKey": "Document",
        "defName": "测试用例文档",
        "comment": "测试用例文档\n后端开发者在测试好后，把选好的测试用例上传，这样就能共享给前端/客户端开发者",
        "properties": {},
        "nameTemplate": "{defKey}[{defName}]",
        "headers": [
          {
            "refKey": "hideInGraph",
            "freeze": true,
            "hideInGraph": true,
            "code": "relationNoShow",
            "value": "关系图",
            "newCode": "hideInGraph",
            "com": "Icon",
            "relationNoShow": true
          },
          {
            "refKey": "defKey",
            "freeze": true,
            "hideInGraph": false,
            "code": "name",
            "value": "字段代码",
            "newCode": "defKey",
            "com": "Input",
            "relationNoShow": false
          },
          {
            "refKey": "defName",
            "freeze": true,
            "hideInGraph": false,
            "code": "chnname",
            "value": "显示名称",
            "newCode": "defName",
            "com": "Input",
            "relationNoShow": false
          },
          {
            "refKey": "primaryKey",
            "hideInGraph": false,
            "code": "pk",
            "value": "主键",
            "newCode": "primaryKey",
            "com": "Checkbox",
            "relationNoShow": false
          },
          {
            "refKey": "notNull",
            "hideInGraph": true,
            "code": "notNull",
            "value": "不为空",
            "newCode": "notNull",
            "com": "Checkbox",
            "relationNoShow": true
          },
          {
            "refKey": "autoIncrement",
            "hideInGraph": true,
            "code": "autoIncrement",
            "value": "自增",
            "newCode": "autoIncrement",
            "com": "Checkbox",
            "relationNoShow": true
          },
          {
            "refKey": "domain",
            "hideInGraph": true,
            "code": "type",
            "value": "数据域",
            "newCode": "domain",
            "com": "Select",
            "relationNoShow": true
          },
          {
            "refKey": "type",
            "hideInGraph": false,
            "code": "dataType",
            "value": "数据类型",
            "newCode": "type",
            "com": "Text",
            "relationNoShow": false
          },
          {
            "refKey": "len",
            "hideInGraph": false,
            "code": "len",
            "value": "长度",
            "newCode": "len",
            "com": "Input",
            "relationNoShow": false
          },
          {
            "refKey": "scale",
            "hideInGraph": false,
            "code": "scale",
            "value": "小数位数",
            "newCode": "scale",
            "com": "Input",
            "relationNoShow": false
          },
          {
            "refKey": "comment",
            "hideInGraph": true,
            "code": "remark",
            "value": "说明",
            "newCode": "comment",
            "com": "Input",
            "relationNoShow": true
          },
          {
            "refKey": "refDict",
            "hideInGraph": true,
            "code": "refDict",
            "value": "数据字典",
            "newCode": "refDict",
            "com": "SearchSelect",
            "relationNoShow": true
          },
          {
            "refKey": "defaultValue",
            "hideInGraph": true,
            "code": "defaultValue",
            "value": "默认值",
            "newCode": "defaultValue",
            "com": "Input",
            "relationNoShow": true
          },
          {
            "refKey": "isStandard",
            "hideInGraph": false,
            "code": "isStandard",
            "value": "标准字段",
            "newCode": "isStandard",
            "com": "label",
            "relationNoShow": false
          },
          {
            "refKey": "uiHint",
            "hideInGraph": true,
            "code": "uiHint",
            "value": "UI建议",
            "newCode": "uiHint",
            "com": "Select",
            "relationNoShow": true
          },
          {
            "refKey": "extProps",
            "hideInGraph": true,
            "code": "extProps",
            "value": "拓展属性",
            "newCode": "extProps",
            "com": "linkButton",
            "relationNoShow": true
          }
        ],
        "fields": [
          {
            "defKey": "id",
            "defName": "唯一标识",
            "comment": "",
            "type": "",
            "len": "",
            "scale": "",
            "primaryKey": false,
            "notNull": true,
            "autoIncrement": false,
            "defaultValue": "",
            "hideInGraph": false,
            "refDict": "",
            "extProps": {},
            "domain": "6BC8F04B-6CFA-4995-98D3-318F5CDD774E",
            "id": "63D2C0E1-6145-477B-B2D2-9AD2DF160C9D"
          },
          {
            "defKey": "debug",
            "defName": "是否为 DEBUG",
            "comment": "是否为 DEBUG 调试数据，只允许在开发环境使用，测试和线上环境禁用：0-否，1-是。",
            "type": "",
            "len": "",
            "scale": "",
            "primaryKey": false,
            "notNull": true,
            "autoIncrement": false,
            "defaultValue": "",
            "hideInGraph": false,
            "refDict": "",
            "extProps": {},
            "domain": "6BC8F04B-6CFA-4995-98D3-318F5CDD774E",
            "id": "2200606B-45A7-4162-AD29-0B3BE0BC18B9"
          },
          {
            "defKey": "userId",
            "defName": "管理员用户id",
            "comment": "需要先建Admin表，新增登录等相关接口。",
            "type": "",
            "len": "",
            "scale": "",
            "primaryKey": false,
            "notNull": true,
            "autoIncrement": false,
            "defaultValue": "",
            "hideInGraph": false,
            "refDict": "",
            "extProps": {},
            "domain": "6BC8F04B-6CFA-4995-98D3-318F5CDD774E",
            "id": "4DDF70E0-779E-4725-9878-30673B9FDF7D"
          },
          {
            "defKey": "testAccountId",
            "defName": "测试账号id",
            "comment": "0-不限",
            "type": "",
            "len": "",
            "scale": "",
            "primaryKey": false,
            "notNull": true,
            "autoIncrement": false,
            "defaultValue": "",
            "hideInGraph": false,
            "refDict": "",
            "extProps": {},
            "domain": "6BC8F04B-6CFA-4995-98D3-318F5CDD774E",
            "id": "BDC58211-E394-4B4A-9FF6-EB5F1B40DD84"
          },
          {
            "defKey": "version",
            "defName": "接口版本号",
            "comment": "<=0 - 不限制版本，任意版本都可用这个接口；\\n>0 - 在这个版本添加的接口。\\n\\n可在给新版文档前调高默认值，新增的测试用例就不用手动设置版本号了。",
            "type": "",
            "len": "",
            "scale": "",
            "primaryKey": false,
            "notNull": true,
            "autoIncrement": false,
            "defaultValue": "",
            "hideInGraph": false,
            "refDict": "",
            "extProps": {},
            "domain": "6BC8F04B-6CFA-4995-98D3-318F5CDD774E",
            "id": "15E4D0EF-A5F1-444E-8DAA-F812C0764EB9"
          },
          {
            "defKey": "name",
            "defName": "接口名称",
            "comment": "",
            "type": "",
            "len": "",
            "scale": "",
            "primaryKey": false,
            "notNull": true,
            "autoIncrement": false,
            "defaultValue": "",
            "hideInGraph": false,
            "refDict": "",
            "extProps": {},
            "domain": "9092C4E0-1A54-4859-ABBB-5B62DBC27573",
            "id": "6EC32499-3CF8-4130-A3F2-C6B623A41F2C"
          },
          {
            "defKey": "type",
            "defName": "类型",
            "comment": "PARAM - GET  url parameters,\\nFORM - POST  application/www-x-form-url-encoded,\\nJSON - POST  application/json",
            "type": "",
            "len": "",
            "scale": "",
            "primaryKey": false,
            "notNull": true,
            "autoIncrement": false,
            "defaultValue": "",
            "hideInGraph": false,
            "refDict": "",
            "extProps": {},
            "domain": "9092C4E0-1A54-4859-ABBB-5B62DBC27573",
            "id": "65F0ADBD-5186-46B2-B456-B2245D9478AE"
          },
          {
            "defKey": "url",
            "defName": "请求地址",
            "comment": "",
            "type": "",
            "len": "",
            "scale": "",
            "primaryKey": false,
            "notNull": true,
            "autoIncrement": false,
            "defaultValue": "",
            "hideInGraph": false,
            "refDict": "",
            "extProps": {},
            "domain": "9092C4E0-1A54-4859-ABBB-5B62DBC27573",
            "id": "9ECFEDAA-200F-4101-AEE7-FA742A15F0D0"
          },
          {
            "defKey": "request",
            "defName": "请求",
            "comment": "用json格式会导致强制排序，而请求中引用赋值只能引用上面的字段，必须有序。",
            "type": "VARCHAR",
            "len": "900",
            "scale": "",
            "primaryKey": false,
            "notNull": true,
            "autoIncrement": false,
            "defaultValue": "",
            "hideInGraph": false,
            "refDict": "",
            "extProps": {},
            "domain": "",
            "id": "AACD4F6C-AB44-490F-A53D-427F34D3366E"
          },
          {
            "defKey": "apijson",
            "defName": "",
            "comment": "从 request 映射为实际的 APIJSON 请求 JSON",
            "type": "",
            "len": "",
            "scale": "",
            "primaryKey": false,
            "notNull": false,
            "autoIncrement": false,
            "defaultValue": "",
            "hideInGraph": false,
            "refDict": "",
            "extProps": {},
            "domain": "3E948CEC-3070-472C-AF92-F3CA11EC9D15",
            "id": "698EAC6F-BA73-47FB-BEC6-E0B5B288F169"
          },
          {
            "defKey": "standard",
            "defName": "",
            "comment": "",
            "type": "VARCHAR",
            "len": "900",
            "scale": "",
            "primaryKey": false,
            "notNull": false,
            "autoIncrement": false,
            "defaultValue": "",
            "hideInGraph": false,
            "refDict": "",
            "extProps": {},
            "domain": "",
            "id": "1A243E02-FBE8-4239-86B8-2EDFDEC87ED9"
          },
          {
            "defKey": "header",
            "defName": "请求头",
            "comment": "请求头 Request Header：\\nkey: value  //注释",
            "type": "",
            "len": "",
            "scale": "",
            "primaryKey": false,
            "notNull": false,
            "autoIncrement": false,
            "defaultValue": "",
            "hideInGraph": false,
            "refDict": "",
            "extProps": {},
            "domain": "3E948CEC-3070-472C-AF92-F3CA11EC9D15",
            "id": "8CBC88A5-55D1-4AD0-B355-0EE6AF88A867"
          },
          {
            "defKey": "date",
            "defName": "创建日期",
            "comment": "",
            "type": "",
            "len": "",
            "scale": "",
            "primaryKey": false,
            "notNull": false,
            "autoIncrement": false,
            "defaultValue": "CURRENT_TIMESTAMP",
            "hideInGraph": false,
            "refDict": "",
            "extProps": {},
            "domain": "7CFFA0D3-6A93-4DDC-BC10-DF21211064DC",
            "id": "DD9A1D10-3EF4-4E4B-AD40-C65C59777062"
          },
          {
            "defKey": "detail",
            "defName": "详细的说明",
            "comment": "可以是普通文本或 Markdown 格式文本",
            "type": "",
            "len": "",
            "scale": "",
            "primaryKey": false,
            "notNull": false,
            "autoIncrement": false,
            "defaultValue": "",
            "hideInGraph": false,
            "refDict": "",
            "extProps": {},
            "domain": "3E948CEC-3070-472C-AF92-F3CA11EC9D15",
            "id": "0A695BE3-8621-4100-A33A-205A2D63E51E"
          }
        ],
        "correlations": [],
        "indexes": []
      },
      {
        "id": "5AA1FBB1-4F23-4E2E-ACC3-65A861507763",
        "env": {
          "base": {
            "nameSpace": "",
            "codeRoot": ""
          }
        },
        "defKey": "Function",
        "defName": "远程函数",
        "comment": "远程函数。强制在启动时校验所有demo是否能正常运行通过",
        "properties": {},
        "nameTemplate": "{defKey}[{defName}]",
        "headers": [
          {
            "refKey": "hideInGraph",
            "freeze": true,
            "hideInGraph": true,
            "code": "relationNoShow",
            "value": "关系图",
            "newCode": "hideInGraph",
            "com": "Icon",
            "relationNoShow": true
          },
          {
            "refKey": "defKey",
            "freeze": true,
            "hideInGraph": false,
            "code": "name",
            "value": "字段代码",
            "newCode": "defKey",
            "com": "Input",
            "relationNoShow": false
          },
          {
            "refKey": "defName",
            "freeze": true,
            "hideInGraph": false,
            "code": "chnname",
            "value": "显示名称",
            "newCode": "defName",
            "com": "Input",
            "relationNoShow": false
          },
          {
            "refKey": "primaryKey",
            "hideInGraph": false,
            "code": "pk",
            "value": "主键",
            "newCode": "primaryKey",
            "com": "Checkbox",
            "relationNoShow": false
          },
          {
            "refKey": "notNull",
            "hideInGraph": true,
            "code": "notNull",
            "value": "不为空",
            "newCode": "notNull",
            "com": "Checkbox",
            "relationNoShow": true
          },
          {
            "refKey": "autoIncrement",
            "hideInGraph": true,
            "code": "autoIncrement",
            "value": "自增",
            "newCode": "autoIncrement",
            "com": "Checkbox",
            "relationNoShow": true
          },
          {
            "refKey": "domain",
            "hideInGraph": true,
            "code": "type",
            "value": "数据域",
            "newCode": "domain",
            "com": "Select",
            "relationNoShow": true
          },
          {
            "refKey": "type",
            "hideInGraph": false,
            "code": "dataType",
            "value": "数据类型",
            "newCode": "type",
            "com": "Text",
            "relationNoShow": false
          },
          {
            "refKey": "len",
            "hideInGraph": false,
            "code": "len",
            "value": "长度",
            "newCode": "len",
            "com": "Input",
            "relationNoShow": false
          },
          {
            "refKey": "scale",
            "hideInGraph": false,
            "code": "scale",
            "value": "小数位数",
            "newCode": "scale",
            "com": "Input",
            "relationNoShow": false
          },
          {
            "refKey": "comment",
            "hideInGraph": true,
            "code": "remark",
            "value": "说明",
            "newCode": "comment",
            "com": "Input",
            "relationNoShow": true
          },
          {
            "refKey": "refDict",
            "hideInGraph": true,
            "code": "refDict",
            "value": "数据字典",
            "newCode": "refDict",
            "com": "SearchSelect",
            "relationNoShow": true
          },
          {
            "refKey": "defaultValue",
            "hideInGraph": true,
            "code": "defaultValue",
            "value": "默认值",
            "newCode": "defaultValue",
            "com": "Input",
            "relationNoShow": true
          },
          {
            "refKey": "isStandard",
            "hideInGraph": false,
            "code": "isStandard",
            "value": "标准字段",
            "newCode": "isStandard",
            "com": "label",
            "relationNoShow": false
          },
          {
            "refKey": "uiHint",
            "hideInGraph": true,
            "code": "uiHint",
            "value": "UI建议",
            "newCode": "uiHint",
            "com": "Select",
            "relationNoShow": true
          },
          {
            "refKey": "extProps",
            "hideInGraph": true,
            "code": "extProps",
            "value": "拓展属性",
            "newCode": "extProps",
            "com": "linkButton",
            "relationNoShow": true
          }
        ],
        "fields": [
          {
            "defKey": "id",
            "defName": "",
            "comment": "",
            "type": "",
            "len": "",
            "scale": "",
            "primaryKey": true,
            "notNull": true,
            "autoIncrement": false,
            "defaultValue": "",
            "hideInGraph": false,
            "refDict": "",
            "extProps": {},
            "domain": "6BC8F04B-6CFA-4995-98D3-318F5CDD774E",
            "id": "64ED706C-ED33-4449-94FF-39B663A2C388"
          },
          {
            "defKey": "debug",
            "defName": "是否为DEBUG调试数据",
            "comment": "是否为 DEBUG 调试数据，只允许在开发环境使用，测试和线上环境禁用：0-否，1-是。",
            "type": "",
            "len": "",
            "scale": "",
            "primaryKey": false,
            "notNull": true,
            "autoIncrement": false,
            "defaultValue": "0",
            "hideInGraph": false,
            "refDict": "",
            "extProps": {},
            "domain": "6BC8F04B-6CFA-4995-98D3-318F5CDD774E",
            "id": "6E2BDE45-85C1-4289-9666-FB6CD7B5C013"
          },
          {
            "defKey": "userId",
            "defName": "管理员用户Id",
            "comment": "",
            "type": "",
            "len": "",
            "scale": "",
            "primaryKey": false,
            "notNull": true,
            "autoIncrement": false,
            "defaultValue": "",
            "hideInGraph": false,
            "refDict": "",
            "extProps": {},
            "domain": "6BC8F04B-6CFA-4995-98D3-318F5CDD774E",
            "id": "71F30D5F-3F39-456A-B276-A685D2D30C6E"
          },
          {
            "defKey": "type",
            "defName": "类型",
            "comment": "0-远程函数；1- SQL 函数",
            "type": "",
            "len": "",
            "scale": "",
            "primaryKey": false,
            "notNull": true,
            "autoIncrement": false,
            "defaultValue": "0",
            "hideInGraph": false,
            "refDict": "",
            "extProps": {},
            "domain": "6BC8F04B-6CFA-4995-98D3-318F5CDD774E",
            "id": "6C9DD573-6A90-4DA4-BB61-E98AD809A816"
          },
          {
            "defKey": "name",
            "defName": "方法名",
            "comment": "",
            "type": "",
            "len": "",
            "scale": "",
            "primaryKey": false,
            "notNull": true,
            "autoIncrement": false,
            "defaultValue": "",
            "hideInGraph": false,
            "refDict": "",
            "extProps": {},
            "domain": "9092C4E0-1A54-4859-ABBB-5B62DBC27573",
            "id": "32DE7D98-3369-4649-B77D-CF58032B5CC5"
          },
          {
            "defKey": "returntype",
            "defName": "返回值类型",
            "comment": "TODO RemoteFunction 校验 type 和 back",
            "type": "",
            "len": "",
            "scale": "",
            "primaryKey": false,
            "notNull": true,
            "autoIncrement": false,
            "defaultValue": "\"Object\"",
            "hideInGraph": false,
            "refDict": "",
            "extProps": {},
            "domain": "9092C4E0-1A54-4859-ABBB-5B62DBC27573",
            "id": "524E874F-4499-4BD5-B607-DC9664A4A4FB"
          },
          {
            "defKey": "arguments",
            "defName": "参数列表",
            "comment": "每个参数的类型都是 String。\\n用 , 分割的字符串 比 [JSONArray] 更好，例如 array,item ，更直观，还方便拼接函数。",
            "type": "",
            "len": "",
            "scale": "",
            "primaryKey": false,
            "notNull": false,
            "autoIncrement": false,
            "defaultValue": "",
            "hideInGraph": false,
            "refDict": "",
            "extProps": {},
            "domain": "9092C4E0-1A54-4859-ABBB-5B62DBC27573",
            "id": "E008F373-F861-4F8E-AFCB-04F67CB0197A"
          },
          {
            "defKey": "demo",
            "defName": "可用的示例",
            "comment": "TODO 改成 call，和返回值示例 back 对应。",
            "type": "",
            "len": "",
            "scale": "",
            "primaryKey": false,
            "notNull": true,
            "autoIncrement": false,
            "defaultValue": "",
            "hideInGraph": false,
            "refDict": "",
            "extProps": {},
            "domain": "2123D5FA-22BB-449F-86A1-A863F21470CA",
            "id": "07F81DA6-A34E-49E3-8805-0CC11BB3E307"
          },
          {
            "defKey": "detail",
            "defName": "详细描述",
            "comment": "",
            "type": "",
            "len": "",
            "scale": "",
            "primaryKey": false,
            "notNull": true,
            "autoIncrement": false,
            "defaultValue": "",
            "hideInGraph": false,
            "refDict": "",
            "extProps": {},
            "domain": "9092C4E0-1A54-4859-ABBB-5B62DBC27573",
            "id": "BFC3991B-8ACF-442C-8F44-1B46CF9DEE22"
          },
          {
            "defKey": "version",
            "defName": "允许的最低版本号",
            "comment": "只限于GET,HEAD外的操作方法。\\nTODO 使用 requestIdList 替代 version,tag,methods",
            "type": "",
            "len": "",
            "scale": "",
            "primaryKey": false,
            "notNull": true,
            "autoIncrement": false,
            "defaultValue": "",
            "hideInGraph": false,
            "refDict": "",
            "extProps": {},
            "domain": "9092C4E0-1A54-4859-ABBB-5B62DBC27573",
            "id": "DADF1F6F-E7CA-458C-B6BE-7274B0AA2595"
          },
          {
            "defKey": "tag",
            "defName": "允许的标签",
            "comment": "null - 允许全部\\nTODO 使用 requestIdList 替代 version,tag,methods",
            "type": "",
            "len": "",
            "scale": "",
            "primaryKey": false,
            "notNull": false,
            "autoIncrement": false,
            "defaultValue": "",
            "hideInGraph": false,
            "refDict": "",
            "extProps": {},
            "domain": "9092C4E0-1A54-4859-ABBB-5B62DBC27573",
            "id": "1F844CD7-4E42-4F5F-A8A4-E4F3E1224AB0"
          },
          {
            "defKey": "methods",
            "defName": "允许的操作方法",
            "comment": "null - 允许全部\\nTODO 使用 requestIdList 替代 version,tag,methods",
            "type": "",
            "len": "",
            "scale": "",
            "primaryKey": false,
            "notNull": false,
            "autoIncrement": false,
            "defaultValue": "",
            "hideInGraph": false,
            "refDict": "",
            "extProps": {},
            "domain": "9092C4E0-1A54-4859-ABBB-5B62DBC27573",
            "id": "1F488BAB-7498-424A-87F2-CAD3E01F3DA7"
          },
          {
            "defKey": "date",
            "defName": "创建时间",
            "comment": "",
            "type": "",
            "len": "",
            "scale": "",
            "primaryKey": false,
            "notNull": true,
            "autoIncrement": false,
            "defaultValue": "CURRENT_TIMESTAMP",
            "hideInGraph": false,
            "refDict": "",
            "extProps": {},
            "domain": "9092C4E0-1A54-4859-ABBB-5B62DBC27573",
            "id": "20D4298F-0E38-45D0-A39C-2BDA9730AEA8"
          },
          {
            "defKey": "return",
            "defName": "返回值示例",
            "comment": "",
            "type": "",
            "len": "",
            "scale": "",
            "primaryKey": false,
            "notNull": false,
            "autoIncrement": false,
            "defaultValue": "",
            "hideInGraph": false,
            "refDict": "",
            "extProps": {},
            "domain": "9092C4E0-1A54-4859-ABBB-5B62DBC27573",
            "id": "3728C048-D899-4E37-9499-65C3A04CF6D6"
          }
        ],
        "correlations": [],
        "indexes": []
      },
      {
        "id": "D0A8658A-AD22-47F2-A418-B6B441961070",
        "env": {
          "base": {
            "nameSpace": "",
            "codeRoot": ""
          }
        },
        "defKey": "Login",
        "defName": "登录信息",
        "comment": "@deprecated，登录信息存session\n",
        "properties": {},
        "nameTemplate": "{defKey}[{defName}]",
        "headers": [
          {
            "refKey": "hideInGraph",
            "freeze": true,
            "hideInGraph": true,
            "code": "relationNoShow",
            "value": "关系图",
            "newCode": "hideInGraph",
            "com": "Icon",
            "relationNoShow": true
          },
          {
            "refKey": "defKey",
            "freeze": true,
            "hideInGraph": false,
            "code": "name",
            "value": "字段代码",
            "newCode": "defKey",
            "com": "Input",
            "relationNoShow": false
          },
          {
            "refKey": "defName",
            "freeze": true,
            "hideInGraph": false,
            "code": "chnname",
            "value": "显示名称",
            "newCode": "defName",
            "com": "Input",
            "relationNoShow": false
          },
          {
            "refKey": "primaryKey",
            "hideInGraph": false,
            "code": "pk",
            "value": "主键",
            "newCode": "primaryKey",
            "com": "Checkbox",
            "relationNoShow": false
          },
          {
            "refKey": "notNull",
            "hideInGraph": true,
            "code": "notNull",
            "value": "不为空",
            "newCode": "notNull",
            "com": "Checkbox",
            "relationNoShow": true
          },
          {
            "refKey": "autoIncrement",
            "hideInGraph": true,
            "code": "autoIncrement",
            "value": "自增",
            "newCode": "autoIncrement",
            "com": "Checkbox",
            "relationNoShow": true
          },
          {
            "refKey": "domain",
            "hideInGraph": true,
            "code": "type",
            "value": "数据域",
            "newCode": "domain",
            "com": "Select",
            "relationNoShow": true
          },
          {
            "refKey": "type",
            "hideInGraph": false,
            "code": "dataType",
            "value": "数据类型",
            "newCode": "type",
            "com": "Text",
            "relationNoShow": false
          },
          {
            "refKey": "len",
            "hideInGraph": false,
            "code": "len",
            "value": "长度",
            "newCode": "len",
            "com": "Input",
            "relationNoShow": false
          },
          {
            "refKey": "scale",
            "hideInGraph": false,
            "code": "scale",
            "value": "小数位数",
            "newCode": "scale",
            "com": "Input",
            "relationNoShow": false
          },
          {
            "refKey": "comment",
            "hideInGraph": true,
            "code": "remark",
            "value": "说明",
            "newCode": "comment",
            "com": "Input",
            "relationNoShow": true
          },
          {
            "refKey": "refDict",
            "hideInGraph": true,
            "code": "refDict",
            "value": "数据字典",
            "newCode": "refDict",
            "com": "SearchSelect",
            "relationNoShow": true
          },
          {
            "refKey": "defaultValue",
            "hideInGraph": true,
            "code": "defaultValue",
            "value": "默认值",
            "newCode": "defaultValue",
            "com": "Input",
            "relationNoShow": true
          },
          {
            "refKey": "isStandard",
            "hideInGraph": false,
            "code": "isStandard",
            "value": "标准字段",
            "newCode": "isStandard",
            "com": "label",
            "relationNoShow": false
          },
          {
            "refKey": "uiHint",
            "hideInGraph": true,
            "code": "uiHint",
            "value": "UI建议",
            "newCode": "uiHint",
            "com": "Select",
            "relationNoShow": true
          },
          {
            "refKey": "extProps",
            "hideInGraph": true,
            "code": "extProps",
            "value": "拓展属性",
            "newCode": "extProps",
            "com": "linkButton",
            "relationNoShow": true
          }
        ],
        "fields": [
          {
            "defKey": "id",
            "defName": "唯一标识",
            "comment": "",
            "type": "",
            "len": "",
            "scale": "",
            "primaryKey": true,
            "notNull": true,
            "autoIncrement": false,
            "defaultValue": "",
            "hideInGraph": false,
            "refDict": "",
            "extProps": {},
            "domain": "6BC8F04B-6CFA-4995-98D3-318F5CDD774E",
            "id": "72CEED7B-2133-4E78-AED0-E5EAC036F1CC"
          },
          {
            "defKey": "userId",
            "defName": "用户id",
            "comment": "",
            "type": "",
            "len": "",
            "scale": "",
            "primaryKey": false,
            "notNull": true,
            "autoIncrement": false,
            "defaultValue": "",
            "hideInGraph": false,
            "refDict": "",
            "extProps": {},
            "domain": "6BC8F04B-6CFA-4995-98D3-318F5CDD774E",
            "id": "A2FA6F70-F4F5-457F-B2E5-4A263427CC3E"
          },
          {
            "defKey": "type",
            "defName": "类型",
            "comment": "n0-密码登录\\n1-验证码登录",
            "type": "",
            "len": "",
            "scale": "",
            "primaryKey": false,
            "notNull": true,
            "autoIncrement": false,
            "defaultValue": "",
            "hideInGraph": false,
            "refDict": "",
            "extProps": {},
            "domain": "6BC8F04B-6CFA-4995-98D3-318F5CDD774E",
            "id": "CAFD047F-5C8D-4C20-8EF9-FE911E78CB23"
          },
          {
            "defKey": "date",
            "defName": "创建日期",
            "comment": "",
            "type": "",
            "len": "",
            "scale": "",
            "primaryKey": false,
            "notNull": true,
            "autoIncrement": false,
            "defaultValue": "CURRENT_TIMESTAMP",
            "hideInGraph": false,
            "refDict": "",
            "extProps": {},
            "domain": "7CFFA0D3-6A93-4DDC-BC10-DF21211064DC",
            "id": "1FD2C5D8-57CC-4949-9C29-414BD27885EE"
          }
        ],
        "correlations": [],
        "indexes": []
      },
      {
        "id": "29C6FC79-675D-428F-8811-8FE4C1EB8D25",
        "env": {
          "base": {
            "nameSpace": "",
            "codeRoot": ""
          }
        },
        "defKey": "Method",
        "defName": "单元测试的方法",
        "comment": "要做单元测试的方法(如果用到单元测试，则必须)",
        "properties": {},
        "nameTemplate": "{defKey}[{defName}]",
        "headers": [
          {
            "refKey": "hideInGraph",
            "freeze": true,
            "hideInGraph": true,
            "code": "relationNoShow",
            "value": "关系图",
            "newCode": "hideInGraph",
            "com": "Icon",
            "relationNoShow": true
          },
          {
            "refKey": "defKey",
            "freeze": true,
            "hideInGraph": false,
            "code": "name",
            "value": "字段代码",
            "newCode": "defKey",
            "com": "Input",
            "relationNoShow": false
          },
          {
            "refKey": "defName",
            "freeze": true,
            "hideInGraph": false,
            "code": "chnname",
            "value": "显示名称",
            "newCode": "defName",
            "com": "Input",
            "relationNoShow": false
          },
          {
            "refKey": "primaryKey",
            "hideInGraph": false,
            "code": "pk",
            "value": "主键",
            "newCode": "primaryKey",
            "com": "Checkbox",
            "relationNoShow": false
          },
          {
            "refKey": "notNull",
            "hideInGraph": true,
            "code": "notNull",
            "value": "不为空",
            "newCode": "notNull",
            "com": "Checkbox",
            "relationNoShow": true
          },
          {
            "refKey": "autoIncrement",
            "hideInGraph": true,
            "code": "autoIncrement",
            "value": "自增",
            "newCode": "autoIncrement",
            "com": "Checkbox",
            "relationNoShow": true
          },
          {
            "refKey": "domain",
            "hideInGraph": true,
            "code": "type",
            "value": "数据域",
            "newCode": "domain",
            "com": "Select",
            "relationNoShow": true
          },
          {
            "refKey": "type",
            "hideInGraph": false,
            "code": "dataType",
            "value": "数据类型",
            "newCode": "type",
            "com": "Text",
            "relationNoShow": false
          },
          {
            "refKey": "len",
            "hideInGraph": false,
            "code": "len",
            "value": "长度",
            "newCode": "len",
            "com": "Input",
            "relationNoShow": false
          },
          {
            "refKey": "scale",
            "hideInGraph": false,
            "code": "scale",
            "value": "小数位数",
            "newCode": "scale",
            "com": "Input",
            "relationNoShow": false
          },
          {
            "refKey": "comment",
            "hideInGraph": true,
            "code": "remark",
            "value": "说明",
            "newCode": "comment",
            "com": "Input",
            "relationNoShow": true
          },
          {
            "refKey": "refDict",
            "hideInGraph": true,
            "code": "refDict",
            "value": "数据字典",
            "newCode": "refDict",
            "com": "SearchSelect",
            "relationNoShow": true
          },
          {
            "refKey": "defaultValue",
            "hideInGraph": true,
            "code": "defaultValue",
            "value": "默认值",
            "newCode": "defaultValue",
            "com": "Input",
            "relationNoShow": true
          },
          {
            "refKey": "isStandard",
            "hideInGraph": false,
            "code": "isStandard",
            "value": "标准字段",
            "newCode": "isStandard",
            "com": "label",
            "relationNoShow": false
          },
          {
            "refKey": "uiHint",
            "hideInGraph": true,
            "code": "uiHint",
            "value": "UI建议",
            "newCode": "uiHint",
            "com": "Select",
            "relationNoShow": true
          },
          {
            "refKey": "extProps",
            "hideInGraph": true,
            "code": "extProps",
            "value": "拓展属性",
            "newCode": "extProps",
            "com": "linkButton",
            "relationNoShow": true
          }
        ],
        "fields": [
          {
            "defKey": "id",
            "defName": "唯一主键",
            "comment": "",
            "type": "",
            "len": "",
            "scale": "",
            "primaryKey": true,
            "notNull": true,
            "autoIncrement": false,
            "defaultValue": "",
            "hideInGraph": false,
            "refDict": "",
            "extProps": {},
            "domain": "6BC8F04B-6CFA-4995-98D3-318F5CDD774E",
            "id": "E11BD45A-1C2E-4D3B-AC0E-4FFA654CE724"
          },
          {
            "defKey": "userId",
            "defName": "管理员用户Id",
            "comment": "",
            "type": "",
            "len": "",
            "scale": "",
            "primaryKey": false,
            "notNull": true,
            "autoIncrement": false,
            "defaultValue": "",
            "hideInGraph": false,
            "refDict": "",
            "extProps": {},
            "domain": "6BC8F04B-6CFA-4995-98D3-318F5CDD774E",
            "id": "A9BB07BC-E7AC-48C3-99AA-AF031BD2D98F"
          },
          {
            "defKey": "package",
            "defName": "包名",
            "comment": "",
            "type": "",
            "len": "",
            "scale": "",
            "primaryKey": false,
            "notNull": false,
            "autoIncrement": false,
            "defaultValue": "",
            "hideInGraph": false,
            "refDict": "",
            "extProps": {},
            "domain": "9092C4E0-1A54-4859-ABBB-5B62DBC27573",
            "id": "F1E777B9-AC3D-4EB1-AFE7-03E09C27074F"
          },
          {
            "defKey": "class",
            "defName": "类名",
            "comment": "注意内部类需要写成 外部类名$内部类名，例如 SharedPreferences$Editor",
            "type": "",
            "len": "",
            "scale": "",
            "primaryKey": false,
            "notNull": false,
            "autoIncrement": false,
            "defaultValue": "",
            "hideInGraph": false,
            "refDict": "",
            "extProps": {},
            "domain": "9092C4E0-1A54-4859-ABBB-5B62DBC27573",
            "id": "DB8363F2-6E2A-4C7A-8B59-AB929F32A389"
          },
          {
            "defKey": "constructor",
            "defName": "构造方法名",
            "comment": "一般不传，默认为类名；传的话主要是用在单例模式类的 getInstance 等方法",
            "type": "",
            "len": "",
            "scale": "",
            "primaryKey": false,
            "notNull": false,
            "autoIncrement": false,
            "defaultValue": "",
            "hideInGraph": false,
            "refDict": "",
            "extProps": {},
            "domain": "9092C4E0-1A54-4859-ABBB-5B62DBC27573",
            "id": "3F492AB4-01AA-452D-A9DA-766603E5F9F2"
          },
          {
            "defKey": "classArgs",
            "defName": "",
            "comment": "[\\n        {   //User user\\n            \"type\": \"apijson.demo.server.model.User\",\\n            \"value\": {\\n                \"id\": 1,\\n                \"name\": \"APIJSON\"\\n            }\\n        },\\n        {   //String id，不填 type 的话会根据 value 自动确定\\n            \"value\": \"id\"\\n        }\\n]",
            "type": "",
            "len": "",
            "scale": "",
            "primaryKey": false,
            "notNull": false,
            "autoIncrement": false,
            "defaultValue": "",
            "hideInGraph": false,
            "refDict": "",
            "extProps": {},
            "domain": "3E948CEC-3070-472C-AF92-F3CA11EC9D15",
            "id": "5E0C7CE7-0FCA-42B7-9A75-C46DD0BDB954"
          },
          {
            "defKey": "genericClassArgs",
            "defName": "",
            "comment": "带泛型的构造方法参数名，例如\\n[\\n        {   //List<User> list\\n            \"type\": “java.util.List<T>”,\\n            \"value\": [{\\n                \"id\": 1,\\n                \"name\": \"APIJSON\"\\n            }]\\n        },\\n        {   //String id，不填 type 的话会根据 value 自动确定\\n            \"value\": \"id\"\\n        }\\n]",
            "type": "",
            "len": "",
            "scale": "",
            "primaryKey": false,
            "notNull": false,
            "autoIncrement": false,
            "defaultValue": "",
            "hideInGraph": false,
            "refDict": "",
            "extProps": {},
            "domain": "3E948CEC-3070-472C-AF92-F3CA11EC9D15",
            "id": "AB99F596-1791-4523-8520-309295BFD536"
          },
          {
            "defKey": "method",
            "defName": "方法名",
            "comment": "",
            "type": "",
            "len": "",
            "scale": "",
            "primaryKey": false,
            "notNull": true,
            "autoIncrement": false,
            "defaultValue": "",
            "hideInGraph": false,
            "refDict": "",
            "extProps": {},
            "domain": "9092C4E0-1A54-4859-ABBB-5B62DBC27573",
            "id": "0713C579-2C12-4EFE-8A52-E62F8012EF27"
          },
          {
            "defKey": "methodArgs",
            "defName": "参数列表",
            "comment": "格式是\\n[\\n        {   //User user\\n            \"type\": \"apijson.demo.server.model.User\",\\n            \"value\": {\\n                \"id\": 1,\\n                \"name\": \"APIJSON\"\\n            }\\n        },\\n        {   //String id，不填 type 的话会根据 value 自动确定\\n            \"value\": \"id\"\\n        }\\n]",
            "type": "",
            "len": "",
            "scale": "",
            "primaryKey": false,
            "notNull": false,
            "autoIncrement": false,
            "defaultValue": "",
            "hideInGraph": false,
            "refDict": "",
            "extProps": {},
            "domain": "3E948CEC-3070-472C-AF92-F3CA11EC9D15",
            "id": "16B43F0C-3714-4DDD-B365-CBF0B4FDC2E5"
          },
          {
            "defKey": "genericMethodArgs",
            "defName": "带泛型的方法参数名",
            "comment": "例如\\n[\\n        {   //List<User> list\\n            \"type\": “java.util.List<T>”,\\n            \"value\": [{\\n                \"id\": 1,\\n                \"name\": \"APIJSON\"\\n            }]\\n        },\\n        {   //String id，不填 type 的话会根据 value 自动确定\\n            \"value\": \"id\"\\n        }\\n]",
            "type": "",
            "len": "",
            "scale": "",
            "primaryKey": false,
            "notNull": false,
            "autoIncrement": false,
            "defaultValue": "",
            "hideInGraph": false,
            "refDict": "",
            "extProps": {},
            "domain": "3E948CEC-3070-472C-AF92-F3CA11EC9D15",
            "id": "5C29172B-FA52-4E0C-99A2-944672C3F221"
          },
          {
            "defKey": "exceptions",
            "defName": "异常类型列表",
            "comment": "",
            "type": "",
            "len": "",
            "scale": "",
            "primaryKey": false,
            "notNull": false,
            "autoIncrement": false,
            "defaultValue": "",
            "hideInGraph": false,
            "refDict": "",
            "extProps": {},
            "domain": "9092C4E0-1A54-4859-ABBB-5B62DBC27573",
            "id": "26191573-474B-467D-BCB6-C6E90C7D4816"
          },
          {
            "defKey": "genericExceptions",
            "defName": "带泛型的异常类型列表",
            "comment": "",
            "type": "",
            "len": "",
            "scale": "",
            "primaryKey": false,
            "notNull": false,
            "autoIncrement": false,
            "defaultValue": "",
            "hideInGraph": false,
            "refDict": "",
            "extProps": {},
            "domain": "9092C4E0-1A54-4859-ABBB-5B62DBC27573",
            "id": "2BDBB108-534D-4E18-90C8-F05F65213611"
          },
          {
            "defKey": "type",
            "defName": "返回值类型",
            "comment": "TODO RemoteMethod 校验 type 和 back",
            "type": "",
            "len": "",
            "scale": "",
            "primaryKey": false,
            "notNull": false,
            "autoIncrement": false,
            "defaultValue": "",
            "hideInGraph": false,
            "refDict": "",
            "extProps": {},
            "domain": "9092C4E0-1A54-4859-ABBB-5B62DBC27573",
            "id": "22092268-3A75-430C-B655-8D993118B94A"
          },
          {
            "defKey": "genericType",
            "defName": "",
            "comment": "带泛型的返回值类型",
            "type": "",
            "len": "",
            "scale": "",
            "primaryKey": false,
            "notNull": true,
            "autoIncrement": false,
            "defaultValue": "",
            "hideInGraph": false,
            "refDict": "",
            "extProps": {},
            "domain": "9092C4E0-1A54-4859-ABBB-5B62DBC27573",
            "id": "1B671793-2487-47B0-94C5-80A0EC50F182"
          },
          {
            "defKey": "static",
            "defName": "是否为 static 方法",
            "comment": "是否为 static 方法： 0-false; 1-true",
            "type": "",
            "len": "",
            "scale": "",
            "primaryKey": false,
            "notNull": true,
            "autoIncrement": false,
            "defaultValue": "",
            "hideInGraph": false,
            "refDict": "",
            "extProps": {},
            "domain": "6BC8F04B-6CFA-4995-98D3-318F5CDD774E",
            "id": "47908267-4ACC-4A50-ADB5-578AC1FDF529"
          },
          {
            "defKey": "ui",
            "defName": "",
            "comment": "0-非 UI 方法，1 - UI 方法",
            "type": "",
            "len": "",
            "scale": "",
            "primaryKey": false,
            "notNull": true,
            "autoIncrement": false,
            "defaultValue": "",
            "hideInGraph": false,
            "refDict": "",
            "extProps": {},
            "domain": "9092C4E0-1A54-4859-ABBB-5B62DBC27573",
            "id": "8E445224-DCEE-4B9E-88D1-17B853DF97E3"
          },
          {
            "defKey": "request",
            "defName": "完整请求",
            "comment": "",
            "type": "",
            "len": "",
            "scale": "",
            "primaryKey": false,
            "notNull": false,
            "autoIncrement": false,
            "defaultValue": "",
            "hideInGraph": false,
            "refDict": "",
            "extProps": {},
            "domain": "3E948CEC-3070-472C-AF92-F3CA11EC9D15",
            "id": "5FCDFDE1-1928-45DB-9262-3DE695AB7A8F"
          },
          {
            "defKey": "demo",
            "defName": "可用的示例",
            "comment": "可用的示例。\\nTODO 改成 call，和返回值示例 back 对应。",
            "type": "",
            "len": "",
            "scale": "",
            "primaryKey": false,
            "notNull": false,
            "autoIncrement": false,
            "defaultValue": "",
            "hideInGraph": false,
            "refDict": "",
            "extProps": {},
            "domain": "2123D5FA-22BB-449F-86A1-A863F21470CA",
            "id": "4E31FF54-0D7A-4FBF-843A-D69DE9C9B1F0"
          },
          {
            "defKey": "detail",
            "defName": "详细描述",
            "comment": "",
            "type": "",
            "len": "",
            "scale": "",
            "primaryKey": false,
            "notNull": true,
            "autoIncrement": false,
            "defaultValue": "",
            "hideInGraph": false,
            "refDict": "",
            "extProps": {},
            "domain": "3E948CEC-3070-472C-AF92-F3CA11EC9D15",
            "id": "5A677E0D-D301-4289-B112-E3330EB9A3A0"
          },
          {
            "defKey": "date",
            "defName": "创建时间",
            "comment": "",
            "type": "",
            "len": "",
            "scale": "",
            "primaryKey": false,
            "notNull": true,
            "autoIncrement": false,
            "defaultValue": "CURRENT_TIMESTAMP",
            "hideInGraph": false,
            "refDict": "",
            "extProps": {},
            "domain": "7CFFA0D3-6A93-4DDC-BC10-DF21211064DC",
            "id": "77683514-4478-40BE-8C18-431926D14207"
          }
        ],
        "correlations": [],
        "indexes": []
      },
      {
        "id": "64E4B105-28DA-4EE7-B10A-FA6F82A8A5D7",
        "env": {
          "base": {
            "nameSpace": "",
            "codeRoot": ""
          }
        },
        "defKey": "Moment",
        "defName": "动态",
        "comment": "",
        "properties": {
          "partitioned by": "(date string)",
          "row format delimited": "",
          "fields terminated by ','": "",
          "collection items terminated by '-'": "",
          "map keys terminated by ':'": "",
          "store as textfile;": ""
        },
        "nameTemplate": "{defKey}[{defName}]",
        "headers": [
          {
            "refKey": "hideInGraph",
            "freeze": true,
            "hideInGraph": true,
            "code": "relationNoShow",
            "value": "关系图",
            "newCode": "hideInGraph",
            "com": "Icon",
            "relationNoShow": true
          },
          {
            "refKey": "defKey",
            "freeze": true,
            "hideInGraph": false,
            "code": "name",
            "value": "字段代码",
            "newCode": "defKey",
            "com": "Input",
            "relationNoShow": false
          },
          {
            "refKey": "defName",
            "freeze": true,
            "hideInGraph": false,
            "code": "chnname",
            "value": "显示名称",
            "newCode": "defName",
            "com": "Input",
            "relationNoShow": false
          },
          {
            "refKey": "primaryKey",
            "hideInGraph": false,
            "code": "pk",
            "value": "主键",
            "newCode": "primaryKey",
            "com": "Checkbox",
            "relationNoShow": false
          },
          {
            "refKey": "notNull",
            "hideInGraph": true,
            "code": "notNull",
            "value": "不为空",
            "newCode": "notNull",
            "com": "Checkbox",
            "relationNoShow": true
          },
          {
            "refKey": "autoIncrement",
            "hideInGraph": true,
            "code": "autoIncrement",
            "value": "自增",
            "newCode": "autoIncrement",
            "com": "Checkbox",
            "relationNoShow": true
          },
          {
            "refKey": "domain",
            "hideInGraph": true,
            "code": "type",
            "value": "数据域",
            "newCode": "domain",
            "com": "Select",
            "relationNoShow": true
          },
          {
            "refKey": "type",
            "hideInGraph": false,
            "code": "dataType",
            "value": "数据类型",
            "newCode": "type",
            "com": "Text",
            "relationNoShow": false
          },
          {
            "refKey": "len",
            "hideInGraph": false,
            "code": "len",
            "value": "长度",
            "newCode": "len",
            "com": "Input",
            "relationNoShow": false
          },
          {
            "refKey": "scale",
            "hideInGraph": false,
            "code": "scale",
            "value": "小数位数",
            "newCode": "scale",
            "com": "Input",
            "relationNoShow": false
          },
          {
            "refKey": "comment",
            "hideInGraph": true,
            "code": "remark",
            "value": "说明",
            "newCode": "comment",
            "com": "Input",
            "relationNoShow": true
          },
          {
            "refKey": "refDict",
            "hideInGraph": true,
            "code": "refDict",
            "value": "数据字典",
            "newCode": "refDict",
            "com": "SearchSelect",
            "relationNoShow": true
          },
          {
            "refKey": "defaultValue",
            "hideInGraph": true,
            "code": "defaultValue",
            "value": "默认值",
            "newCode": "defaultValue",
            "com": "Input",
            "relationNoShow": true
          },
          {
            "refKey": "isStandard",
            "hideInGraph": false,
            "code": "isStandard",
            "value": "标准字段",
            "newCode": "isStandard",
            "com": "label",
            "relationNoShow": false
          },
          {
            "refKey": "uiHint",
            "hideInGraph": true,
            "code": "uiHint",
            "value": "UI建议",
            "newCode": "uiHint",
            "com": "Select",
            "relationNoShow": true
          },
          {
            "refKey": "extProps",
            "hideInGraph": true,
            "code": "extProps",
            "value": "拓展属性",
            "newCode": "extProps",
            "com": "linkButton",
            "relationNoShow": true
          }
        ],
        "fields": [
          {
            "defKey": "id",
            "defName": "唯一标识",
            "comment": "",
            "type": "",
            "len": "",
            "scale": "",
            "primaryKey": true,
            "notNull": true,
            "autoIncrement": false,
            "defaultValue": "",
            "hideInGraph": false,
            "refDict": "",
            "extProps": {},
            "domain": "6BC8F04B-6CFA-4995-98D3-318F5CDD774E",
            "id": "162E28D8-5445-4302-83A9-D1B54933F151"
          },
          {
            "defKey": "userId",
            "defName": "用户id",
            "comment": "",
            "type": "",
            "len": "",
            "scale": "",
            "primaryKey": false,
            "notNull": true,
            "autoIncrement": false,
            "defaultValue": "",
            "hideInGraph": false,
            "refDict": "",
            "extProps": {},
            "domain": "6BC8F04B-6CFA-4995-98D3-318F5CDD774E",
            "id": "F1940A53-FDF9-4BD9-898C-4AD21FD4C53D"
          },
          {
            "defKey": "date",
            "defName": "创建日期",
            "comment": "",
            "type": "",
            "len": "",
            "scale": "",
            "primaryKey": false,
            "notNull": false,
            "autoIncrement": false,
            "defaultValue": "",
            "hideInGraph": false,
            "refDict": "",
            "extProps": {},
            "domain": "7CFFA0D3-6A93-4DDC-BC10-DF21211064DC",
            "id": "EEF50B6A-6FCB-485B-9F17-D40809921F1B"
          },
          {
            "defKey": "content",
            "defName": "内容",
            "comment": "",
            "type": "",
            "len": "",
            "scale": "",
            "primaryKey": false,
            "notNull": false,
            "autoIncrement": false,
            "defaultValue": "",
            "hideInGraph": false,
            "refDict": "",
            "extProps": {},
            "domain": "9092C4E0-1A54-4859-ABBB-5B62DBC27573",
            "id": "8F971BB4-FDC6-4243-8C34-C4FEA2BFC347"
          },
          {
            "defKey": "praiseUserIdList",
            "defName": "点赞的用户id列表",
            "comment": "",
            "type": "",
            "len": "",
            "scale": "",
            "primaryKey": false,
            "notNull": true,
            "autoIncrement": false,
            "defaultValue": "",
            "hideInGraph": false,
            "refDict": "",
            "extProps": {},
            "domain": "2123D5FA-22BB-449F-86A1-A863F21470CA",
            "id": "8FE3EF77-300B-449F-9543-173F05163D6C"
          },
          {
            "defKey": "pictureList",
            "defName": "图片列表",
            "comment": "",
            "type": "",
            "len": "",
            "scale": "",
            "primaryKey": false,
            "notNull": true,
            "autoIncrement": false,
            "defaultValue": "",
            "hideInGraph": false,
            "refDict": "",
            "extProps": {},
            "domain": "2123D5FA-22BB-449F-86A1-A863F21470CA",
            "id": "F56C8321-917C-41AB-9643-A5F3807EE619"
          }
        ],
        "correlations": [],
        "indexes": []
      },
      {
        "id": "686E4546-B8FA-4F06-BF0E-D6E4FCD9542F",
        "env": {
          "base": {
            "nameSpace": "",
            "codeRoot": ""
          }
        },
        "defKey": "Praise",
        "defName": "Praise",
        "comment": "对Moment写安全要求高，可以将Moment内praiserUserIdList分离到Praise表中，作为userIdList。\n权限注解也改下：\n@MethodAccess(\n\t\tPUT = {OWNER, ADMIN}\n\t\t)\nclass Moment {\n       …\n}\n\n@MethodAccess(\n\t\tPUT = {LOGIN, CONTACT, CIRCLE, OWNER, ADMIN}\n\t\t)\n class Praise {\n       …\n }\n",
        "properties": {},
        "nameTemplate": "{defKey}[{defName}]",
        "headers": [
          {
            "refKey": "hideInGraph",
            "freeze": true,
            "hideInGraph": true,
            "code": "relationNoShow",
            "value": "关系图",
            "newCode": "hideInGraph",
            "com": "Icon",
            "relationNoShow": true
          },
          {
            "refKey": "defKey",
            "freeze": true,
            "hideInGraph": false,
            "code": "name",
            "value": "字段代码",
            "newCode": "defKey",
            "com": "Input",
            "relationNoShow": false
          },
          {
            "refKey": "defName",
            "freeze": true,
            "hideInGraph": false,
            "code": "chnname",
            "value": "显示名称",
            "newCode": "defName",
            "com": "Input",
            "relationNoShow": false
          },
          {
            "refKey": "primaryKey",
            "hideInGraph": false,
            "code": "pk",
            "value": "主键",
            "newCode": "primaryKey",
            "com": "Checkbox",
            "relationNoShow": false
          },
          {
            "refKey": "notNull",
            "hideInGraph": true,
            "code": "notNull",
            "value": "不为空",
            "newCode": "notNull",
            "com": "Checkbox",
            "relationNoShow": true
          },
          {
            "refKey": "autoIncrement",
            "hideInGraph": true,
            "code": "autoIncrement",
            "value": "自增",
            "newCode": "autoIncrement",
            "com": "Checkbox",
            "relationNoShow": true
          },
          {
            "refKey": "domain",
            "hideInGraph": true,
            "code": "type",
            "value": "数据域",
            "newCode": "domain",
            "com": "Select",
            "relationNoShow": true
          },
          {
            "refKey": "type",
            "hideInGraph": false,
            "code": "dataType",
            "value": "数据类型",
            "newCode": "type",
            "com": "Text",
            "relationNoShow": false
          },
          {
            "refKey": "len",
            "hideInGraph": false,
            "code": "len",
            "value": "长度",
            "newCode": "len",
            "com": "Input",
            "relationNoShow": false
          },
          {
            "refKey": "scale",
            "hideInGraph": false,
            "code": "scale",
            "value": "小数位数",
            "newCode": "scale",
            "com": "Input",
            "relationNoShow": false
          },
          {
            "refKey": "comment",
            "hideInGraph": true,
            "code": "remark",
            "value": "说明",
            "newCode": "comment",
            "com": "Input",
            "relationNoShow": true
          },
          {
            "refKey": "refDict",
            "hideInGraph": true,
            "code": "refDict",
            "value": "数据字典",
            "newCode": "refDict",
            "com": "SearchSelect",
            "relationNoShow": true
          },
          {
            "refKey": "defaultValue",
            "hideInGraph": true,
            "code": "defaultValue",
            "value": "默认值",
            "newCode": "defaultValue",
            "com": "Input",
            "relationNoShow": true
          },
          {
            "refKey": "isStandard",
            "hideInGraph": false,
            "code": "isStandard",
            "value": "标准字段",
            "newCode": "isStandard",
            "com": "label",
            "relationNoShow": false
          },
          {
            "refKey": "uiHint",
            "hideInGraph": true,
            "code": "uiHint",
            "value": "UI建议",
            "newCode": "uiHint",
            "com": "Select",
            "relationNoShow": true
          },
          {
            "refKey": "extProps",
            "hideInGraph": true,
            "code": "extProps",
            "value": "拓展属性",
            "newCode": "extProps",
            "com": "linkButton",
            "relationNoShow": true
          }
        ],
        "fields": [
          {
            "defKey": "id",
            "defName": "动态id",
            "comment": "",
            "type": "",
            "len": "",
            "scale": "",
            "primaryKey": true,
            "notNull": true,
            "autoIncrement": false,
            "defaultValue": "",
            "hideInGraph": false,
            "refDict": "",
            "extProps": {},
            "domain": "6BC8F04B-6CFA-4995-98D3-318F5CDD774E",
            "id": "0E9DC2F1-8FB5-48AC-831E-1377330704E2"
          },
          {
            "defKey": "momentId",
            "defName": "唯一标识",
            "comment": "",
            "type": "",
            "len": "",
            "scale": "",
            "primaryKey": false,
            "notNull": true,
            "autoIncrement": false,
            "defaultValue": "",
            "hideInGraph": false,
            "refDict": "",
            "extProps": {},
            "domain": "9092C4E0-1A54-4859-ABBB-5B62DBC27573",
            "id": "66034807-A040-4380-A3A9-B77DAD9BD26D"
          },
          {
            "defKey": "userId",
            "defName": "用户id",
            "comment": "",
            "type": "",
            "len": "",
            "scale": "",
            "primaryKey": false,
            "notNull": true,
            "autoIncrement": false,
            "defaultValue": "",
            "hideInGraph": false,
            "refDict": "",
            "extProps": {},
            "domain": "9092C4E0-1A54-4859-ABBB-5B62DBC27573",
            "id": "C6DB3C59-5B8C-4702-BDBD-635DA944CA68"
          },
          {
            "defKey": "date",
            "defName": "点赞时间",
            "comment": "",
            "type": "",
            "len": "",
            "scale": "",
            "primaryKey": false,
            "notNull": false,
            "autoIncrement": false,
            "defaultValue": "",
            "hideInGraph": false,
            "refDict": "",
            "extProps": {},
            "domain": "9092C4E0-1A54-4859-ABBB-5B62DBC27573",
            "id": "CC9304CB-8B82-4C51-BA94-505333A68F86"
          }
        ],
        "correlations": [],
        "indexes": []
      },
      {
        "id": "143D13BC-37D9-42F1-B31F-44050DABD465",
        "env": {
          "base": {
            "nameSpace": "",
            "codeRoot": ""
          }
        },
        "defKey": "Random",
        "defName": "随机测试配置(必须)",
        "comment": "",
        "properties": {
          "partitioned by": "(date string)",
          "row format delimited": "",
          "fields terminated by ','": "",
          "collection items terminated by '-'": "",
          "map keys terminated by ':'": "",
          "store as textfile;": ""
        },
        "nameTemplate": "{defKey}[{defName}]",
        "headers": [
          {
            "refKey": "hideInGraph",
            "freeze": true,
            "hideInGraph": true,
            "code": "relationNoShow",
            "value": "关系图",
            "newCode": "hideInGraph",
            "com": "Icon",
            "relationNoShow": true
          },
          {
            "refKey": "defKey",
            "freeze": true,
            "hideInGraph": false,
            "code": "name",
            "value": "字段代码",
            "newCode": "defKey",
            "com": "Input",
            "relationNoShow": false
          },
          {
            "refKey": "defName",
            "freeze": true,
            "hideInGraph": false,
            "code": "chnname",
            "value": "显示名称",
            "newCode": "defName",
            "com": "Input",
            "relationNoShow": false
          },
          {
            "refKey": "primaryKey",
            "hideInGraph": false,
            "code": "pk",
            "value": "主键",
            "newCode": "primaryKey",
            "com": "Checkbox",
            "relationNoShow": false
          },
          {
            "refKey": "notNull",
            "hideInGraph": true,
            "code": "notNull",
            "value": "不为空",
            "newCode": "notNull",
            "com": "Checkbox",
            "relationNoShow": true
          },
          {
            "refKey": "autoIncrement",
            "hideInGraph": true,
            "code": "autoIncrement",
            "value": "自增",
            "newCode": "autoIncrement",
            "com": "Checkbox",
            "relationNoShow": true
          },
          {
            "refKey": "domain",
            "hideInGraph": true,
            "code": "type",
            "value": "数据域",
            "newCode": "domain",
            "com": "Select",
            "relationNoShow": true
          },
          {
            "refKey": "type",
            "hideInGraph": false,
            "code": "dataType",
            "value": "数据类型",
            "newCode": "type",
            "com": "Text",
            "relationNoShow": false
          },
          {
            "refKey": "len",
            "hideInGraph": false,
            "code": "len",
            "value": "长度",
            "newCode": "len",
            "com": "Input",
            "relationNoShow": false
          },
          {
            "refKey": "scale",
            "hideInGraph": false,
            "code": "scale",
            "value": "小数位数",
            "newCode": "scale",
            "com": "Input",
            "relationNoShow": false
          },
          {
            "refKey": "comment",
            "hideInGraph": true,
            "code": "remark",
            "value": "说明",
            "newCode": "comment",
            "com": "Input",
            "relationNoShow": true
          },
          {
            "refKey": "refDict",
            "hideInGraph": true,
            "code": "refDict",
            "value": "数据字典",
            "newCode": "refDict",
            "com": "SearchSelect",
            "relationNoShow": true
          },
          {
            "refKey": "defaultValue",
            "hideInGraph": true,
            "code": "defaultValue",
            "value": "默认值",
            "newCode": "defaultValue",
            "com": "Input",
            "relationNoShow": true
          },
          {
            "refKey": "isStandard",
            "hideInGraph": false,
            "code": "isStandard",
            "value": "标准字段",
            "newCode": "isStandard",
            "com": "label",
            "relationNoShow": false
          },
          {
            "refKey": "uiHint",
            "hideInGraph": true,
            "code": "uiHint",
            "value": "UI建议",
            "newCode": "uiHint",
            "com": "Select",
            "relationNoShow": true
          },
          {
            "refKey": "extProps",
            "hideInGraph": true,
            "code": "extProps",
            "value": "拓展属性",
            "newCode": "extProps",
            "com": "linkButton",
            "relationNoShow": true
          }
        ],
        "fields": [
          {
            "defKey": "id",
            "defName": "唯一标识",
            "comment": "",
            "type": "",
            "len": "",
            "scale": "",
            "primaryKey": true,
            "notNull": true,
            "autoIncrement": false,
            "defaultValue": "",
            "hideInGraph": false,
            "refDict": "",
            "extProps": {},
            "domain": "6BC8F04B-6CFA-4995-98D3-318F5CDD774E",
            "id": "B2622FD8-7232-4642-94A3-581BDD0B2D58"
          },
          {
            "defKey": "toId",
            "defName": "父项 id",
            "comment": "",
            "type": "",
            "len": "",
            "scale": "",
            "primaryKey": false,
            "notNull": true,
            "autoIncrement": false,
            "defaultValue": "",
            "hideInGraph": false,
            "refDict": "",
            "extProps": {},
            "domain": "6BC8F04B-6CFA-4995-98D3-318F5CDD774E",
            "id": "FE91195F-A9F5-423E-A665-B436AF0C76A5"
          },
          {
            "defKey": "userId",
            "defName": "",
            "comment": "",
            "type": "",
            "len": "",
            "scale": "",
            "primaryKey": false,
            "notNull": true,
            "autoIncrement": false,
            "defaultValue": "",
            "hideInGraph": false,
            "refDict": "",
            "extProps": {},
            "domain": "6BC8F04B-6CFA-4995-98D3-318F5CDD774E",
            "id": "32B96DE5-1063-49C6-B889-95634EA86D77"
          },
          {
            "defKey": "documentId",
            "defName": "测试用例 Document 的 id",
            "comment": "",
            "type": "",
            "len": "",
            "scale": "",
            "primaryKey": false,
            "notNull": true,
            "autoIncrement": false,
            "defaultValue": "",
            "hideInGraph": false,
            "refDict": "",
            "extProps": {},
            "domain": "6BC8F04B-6CFA-4995-98D3-318F5CDD774E",
            "id": "3F899784-3099-47E6-B998-F32C263B8E23"
          },
          {
            "defKey": "count",
            "defName": "请求次数，默认 1",
            "comment": "",
            "type": "",
            "len": "",
            "scale": "",
            "primaryKey": false,
            "notNull": true,
            "autoIncrement": false,
            "defaultValue": "",
            "hideInGraph": false,
            "refDict": "",
            "extProps": {},
            "domain": "6BC8F04B-6CFA-4995-98D3-318F5CDD774E",
            "id": "829AE0C5-147D-4519-A466-A7EFE915DC2F"
          },
          {
            "defKey": "name",
            "defName": "名称",
            "comment": "",
            "type": "",
            "len": "",
            "scale": "",
            "primaryKey": false,
            "notNull": true,
            "autoIncrement": false,
            "defaultValue": "",
            "hideInGraph": false,
            "refDict": "",
            "extProps": {},
            "domain": "9092C4E0-1A54-4859-ABBB-5B62DBC27573",
            "id": "6DE708C9-5613-4CF9-BA8E-9E2825BC0C31"
          },
          {
            "defKey": "config",
            "defName": "配置",
            "comment": "",
            "type": "",
            "len": "",
            "scale": "",
            "primaryKey": false,
            "notNull": true,
            "autoIncrement": false,
            "defaultValue": "",
            "hideInGraph": false,
            "refDict": "",
            "extProps": {},
            "domain": "3E948CEC-3070-472C-AF92-F3CA11EC9D15",
            "id": "9A3D6BE7-363C-4D0F-B89B-B8CB0DB3FB6C"
          },
          {
            "defKey": "date",
            "defName": "",
            "comment": "",
            "type": "",
            "len": "",
            "scale": "",
            "primaryKey": false,
            "notNull": true,
            "autoIncrement": false,
            "defaultValue": "CURRENT_TIMESTAMP",
            "hideInGraph": false,
            "refDict": "",
            "extProps": {},
            "domain": "7CFFA0D3-6A93-4DDC-BC10-DF21211064DC",
            "id": "C2810A17-8238-4117-98E7-300A23690CBD"
          }
        ],
        "correlations": [],
        "indexes": []
      },
      {
        "id": "EA0B23AF-34FD-447F-B89D-1C3403967BBE",
        "env": {
          "base": {
            "nameSpace": "",
            "codeRoot": ""
          }
        },
        "defKey": "Request",
        "defName": "请求参数校验配置(必须)",
        "comment": "请求参数校验配置(必须)。\n最好编辑完后删除主键，这样就是只读状态，不能随意更改。需要更改就重新加上主键。\n\n每次启动服务器时加载整个表到内存。\n这个表不可省略，model内注解的权限只是客户端能用的，其它可以保证即便服务端代码错误时也不会误删数据。",
        "properties": {},
        "nameTemplate": "{defKey}[{defName}]",
        "headers": [
          {
            "refKey": "hideInGraph",
            "freeze": true,
            "hideInGraph": true,
            "code": "relationNoShow",
            "value": "关系图",
            "newCode": "hideInGraph",
            "com": "Icon",
            "relationNoShow": true
          },
          {
            "refKey": "defKey",
            "freeze": true,
            "hideInGraph": false,
            "code": "name",
            "value": "字段代码",
            "newCode": "defKey",
            "com": "Input",
            "relationNoShow": false
          },
          {
            "refKey": "defName",
            "freeze": true,
            "hideInGraph": false,
            "code": "chnname",
            "value": "显示名称",
            "newCode": "defName",
            "com": "Input",
            "relationNoShow": false
          },
          {
            "refKey": "primaryKey",
            "hideInGraph": false,
            "code": "pk",
            "value": "主键",
            "newCode": "primaryKey",
            "com": "Checkbox",
            "relationNoShow": false
          },
          {
            "refKey": "notNull",
            "hideInGraph": true,
            "code": "notNull",
            "value": "不为空",
            "newCode": "notNull",
            "com": "Checkbox",
            "relationNoShow": true
          },
          {
            "refKey": "autoIncrement",
            "hideInGraph": true,
            "code": "autoIncrement",
            "value": "自增",
            "newCode": "autoIncrement",
            "com": "Checkbox",
            "relationNoShow": true
          },
          {
            "refKey": "domain",
            "hideInGraph": true,
            "code": "type",
            "value": "数据域",
            "newCode": "domain",
            "com": "Select",
            "relationNoShow": true
          },
          {
            "refKey": "type",
            "hideInGraph": false,
            "code": "dataType",
            "value": "数据类型",
            "newCode": "type",
            "com": "Text",
            "relationNoShow": false
          },
          {
            "refKey": "len",
            "hideInGraph": false,
            "code": "len",
            "value": "长度",
            "newCode": "len",
            "com": "Input",
            "relationNoShow": false
          },
          {
            "refKey": "scale",
            "hideInGraph": false,
            "code": "scale",
            "value": "小数位数",
            "newCode": "scale",
            "com": "Input",
            "relationNoShow": false
          },
          {
            "refKey": "comment",
            "hideInGraph": true,
            "code": "remark",
            "value": "说明",
            "newCode": "comment",
            "com": "Input",
            "relationNoShow": true
          },
          {
            "refKey": "refDict",
            "hideInGraph": true,
            "code": "refDict",
            "value": "数据字典",
            "newCode": "refDict",
            "com": "SearchSelect",
            "relationNoShow": true
          },
          {
            "refKey": "defaultValue",
            "hideInGraph": true,
            "code": "defaultValue",
            "value": "默认值",
            "newCode": "defaultValue",
            "com": "Input",
            "relationNoShow": true
          },
          {
            "refKey": "isStandard",
            "hideInGraph": false,
            "code": "isStandard",
            "value": "标准字段",
            "newCode": "isStandard",
            "com": "label",
            "relationNoShow": false
          },
          {
            "refKey": "uiHint",
            "hideInGraph": true,
            "code": "uiHint",
            "value": "UI建议",
            "newCode": "uiHint",
            "com": "Select",
            "relationNoShow": true
          },
          {
            "refKey": "extProps",
            "hideInGraph": true,
            "code": "extProps",
            "value": "拓展属性",
            "newCode": "extProps",
            "com": "linkButton",
            "relationNoShow": true
          }
        ],
        "fields": [
          {
            "defKey": "id",
            "defName": "唯一标识",
            "comment": "",
            "type": "",
            "len": "",
            "scale": "",
            "primaryKey": true,
            "notNull": true,
            "autoIncrement": true,
            "defaultValue": "",
            "hideInGraph": false,
            "refDict": "",
            "extProps": {},
            "domain": "6BC8F04B-6CFA-4995-98D3-318F5CDD774E",
            "id": "1A70968B-836C-4383-800B-D2D5DBB3D47B"
          },
          {
            "defKey": "debug",
            "defName": "是否为 DEBUG 调试数据",
            "comment": "是否为 DEBUG 调试数据，只允许在开发环境使用，测试和线上环境禁用：0-否，1-是。",
            "type": "",
            "len": "",
            "scale": "",
            "primaryKey": false,
            "notNull": false,
            "autoIncrement": false,
            "defaultValue": "",
            "hideInGraph": false,
            "refDict": "",
            "extProps": {},
            "domain": "6BC8F04B-6CFA-4995-98D3-318F5CDD774E",
            "id": "97AB10FA-6F47-488B-A5BD-FF392280C848"
          },
          {
            "defKey": "version",
            "defName": "",
            "comment": "GET,HEAD可用任意结构访问任意开放内容，不需要这个字段。\\n其它的操作因为写入了结构和内容，所以都需要，按照不同的version选择对应的structure。\\n\\n自动化版本管理：\\nRequest JSON最外层可以传  “version”:Integer 。\\n1.未传或 <= 0，用最新版。 “@order”:”version-“\\n2.已传且 > 0，用version以上的可用版本的最低版本。 “@order”:”version+”, “version{}”:”>={version}”",
            "type": "",
            "len": "",
            "scale": "",
            "primaryKey": false,
            "notNull": false,
            "autoIncrement": false,
            "defaultValue": "",
            "hideInGraph": false,
            "refDict": "",
            "extProps": {},
            "domain": "6BC8F04B-6CFA-4995-98D3-318F5CDD774E",
            "id": "E66624AA-73C8-4471-946E-1575874F5CDE"
          },
          {
            "defKey": "method",
            "defName": "操作方法",
            "comment": "只限于GET,HEAD外的操作方法。",
            "type": "",
            "len": "",
            "scale": "",
            "primaryKey": false,
            "notNull": false,
            "autoIncrement": false,
            "defaultValue": "",
            "hideInGraph": false,
            "refDict": "",
            "extProps": {},
            "domain": "9092C4E0-1A54-4859-ABBB-5B62DBC27573",
            "id": "C6694FCF-8E2C-4F96-8137-ED7892DC2EDB"
          },
          {
            "defKey": "tag",
            "defName": "标签",
            "comment": "",
            "type": "",
            "len": "",
            "scale": "",
            "primaryKey": false,
            "notNull": false,
            "autoIncrement": false,
            "defaultValue": "",
            "hideInGraph": false,
            "refDict": "",
            "extProps": {},
            "domain": "9092C4E0-1A54-4859-ABBB-5B62DBC27573",
            "id": "1EC87FB7-AF21-45BC-9773-59474D9A800D"
          },
          {
            "defKey": "structure",
            "defName": "结构",
            "comment": "\\nTODO 里面的 PUT 改为 UPDATE，避免和请求 PUT 搞混。",
            "type": "",
            "len": "",
            "scale": "",
            "primaryKey": false,
            "notNull": false,
            "autoIncrement": false,
            "defaultValue": "",
            "hideInGraph": false,
            "refDict": "",
            "extProps": {},
            "domain": "2123D5FA-22BB-449F-86A1-A863F21470CA",
            "id": "7D48B592-0F20-4C27-92D4-B4D16FC04115"
          },
          {
            "defKey": "detail",
            "defName": "详细说明",
            "comment": "",
            "type": "",
            "len": "",
            "scale": "",
            "primaryKey": false,
            "notNull": false,
            "autoIncrement": false,
            "defaultValue": "",
            "hideInGraph": false,
            "refDict": "",
            "extProps": {},
            "domain": "3E948CEC-3070-472C-AF92-F3CA11EC9D15",
            "id": "C2ED80CB-9B19-4178-9639-E2799CF50FFF"
          },
          {
            "defKey": "date",
            "defName": "创建日期",
            "comment": "",
            "type": "",
            "len": "",
            "scale": "",
            "primaryKey": false,
            "notNull": false,
            "autoIncrement": false,
            "defaultValue": "",
            "hideInGraph": false,
            "refDict": "",
            "extProps": {},
            "domain": "7CFFA0D3-6A93-4DDC-BC10-DF21211064DC",
            "id": "FB9A7EAE-F794-4774-AE85-899EE668FAF7"
          }
        ],
        "correlations": [],
        "indexes": []
      },
      {
        "id": "0C17714C-7A15-438E-B54A-72658F6D323E",
        "env": {
          "base": {
            "nameSpace": "",
            "codeRoot": ""
          }
        },
        "defKey": "TestRecord",
        "defName": "测试记录(必须)",
        "comment": "测试记录(必须)\n主要用于保存自动化接口回归测试。5.0.0 可能改为 Test(先废弃 Test 表) ",
        "properties": {},
        "nameTemplate": "{defKey}[{defName}]",
        "headers": [
          {
            "refKey": "hideInGraph",
            "freeze": true,
            "hideInGraph": true,
            "code": "relationNoShow",
            "value": "关系图",
            "newCode": "hideInGraph",
            "com": "Icon",
            "relationNoShow": true
          },
          {
            "refKey": "defKey",
            "freeze": true,
            "hideInGraph": false,
            "code": "name",
            "value": "字段代码",
            "newCode": "defKey",
            "com": "Input",
            "relationNoShow": false
          },
          {
            "refKey": "defName",
            "freeze": true,
            "hideInGraph": false,
            "code": "chnname",
            "value": "显示名称",
            "newCode": "defName",
            "com": "Input",
            "relationNoShow": false
          },
          {
            "refKey": "primaryKey",
            "hideInGraph": false,
            "code": "pk",
            "value": "主键",
            "newCode": "primaryKey",
            "com": "Checkbox",
            "relationNoShow": false
          },
          {
            "refKey": "notNull",
            "hideInGraph": true,
            "code": "notNull",
            "value": "不为空",
            "newCode": "notNull",
            "com": "Checkbox",
            "relationNoShow": true
          },
          {
            "refKey": "autoIncrement",
            "hideInGraph": true,
            "code": "autoIncrement",
            "value": "自增",
            "newCode": "autoIncrement",
            "com": "Checkbox",
            "relationNoShow": true
          },
          {
            "refKey": "domain",
            "hideInGraph": true,
            "code": "type",
            "value": "数据域",
            "newCode": "domain",
            "com": "Select",
            "relationNoShow": true
          },
          {
            "refKey": "type",
            "hideInGraph": false,
            "code": "dataType",
            "value": "数据类型",
            "newCode": "type",
            "com": "Text",
            "relationNoShow": false
          },
          {
            "refKey": "len",
            "hideInGraph": false,
            "code": "len",
            "value": "长度",
            "newCode": "len",
            "com": "Input",
            "relationNoShow": false
          },
          {
            "refKey": "scale",
            "hideInGraph": false,
            "code": "scale",
            "value": "小数位数",
            "newCode": "scale",
            "com": "Input",
            "relationNoShow": false
          },
          {
            "refKey": "comment",
            "hideInGraph": true,
            "code": "remark",
            "value": "说明",
            "newCode": "comment",
            "com": "Input",
            "relationNoShow": true
          },
          {
            "refKey": "refDict",
            "hideInGraph": true,
            "code": "refDict",
            "value": "数据字典",
            "newCode": "refDict",
            "com": "SearchSelect",
            "relationNoShow": true
          },
          {
            "refKey": "defaultValue",
            "hideInGraph": true,
            "code": "defaultValue",
            "value": "默认值",
            "newCode": "defaultValue",
            "com": "Input",
            "relationNoShow": true
          },
          {
            "refKey": "isStandard",
            "hideInGraph": false,
            "code": "isStandard",
            "value": "标准字段",
            "newCode": "isStandard",
            "com": "label",
            "relationNoShow": false
          },
          {
            "refKey": "uiHint",
            "hideInGraph": true,
            "code": "uiHint",
            "value": "UI建议",
            "newCode": "uiHint",
            "com": "Select",
            "relationNoShow": true
          },
          {
            "refKey": "extProps",
            "hideInGraph": true,
            "code": "extProps",
            "value": "拓展属性",
            "newCode": "extProps",
            "com": "linkButton",
            "relationNoShow": true
          }
        ],
        "fields": [
          {
            "defKey": "id",
            "defName": "唯一标识",
            "comment": "",
            "type": "",
            "len": "",
            "scale": "",
            "primaryKey": true,
            "notNull": true,
            "autoIncrement": false,
            "defaultValue": "",
            "hideInGraph": false,
            "refDict": "",
            "extProps": {},
            "domain": "6BC8F04B-6CFA-4995-98D3-318F5CDD774E",
            "id": "6A48D891-E89F-40A8-981C-59872BFDA593"
          },
          {
            "defKey": "userId",
            "defName": "用户id",
            "comment": "",
            "type": "",
            "len": "",
            "scale": "",
            "primaryKey": false,
            "notNull": true,
            "autoIncrement": false,
            "defaultValue": "",
            "hideInGraph": false,
            "refDict": "",
            "extProps": {},
            "domain": "6BC8F04B-6CFA-4995-98D3-318F5CDD774E",
            "id": "60828606-2E5C-4CFB-B48F-7E4A4EB6F9F0"
          },
          {
            "defKey": "testAccountId",
            "defName": "",
            "comment": "",
            "type": "",
            "len": "",
            "scale": "",
            "primaryKey": false,
            "notNull": true,
            "autoIncrement": false,
            "defaultValue": "0",
            "hideInGraph": false,
            "refDict": "",
            "extProps": {},
            "domain": "6BC8F04B-6CFA-4995-98D3-318F5CDD774E",
            "id": "63DA7005-8C40-4E15-8474-90B94B44369D"
          },
          {
            "defKey": "documentId",
            "defName": "测试用例文档id",
            "comment": "",
            "type": "",
            "len": "",
            "scale": "",
            "primaryKey": false,
            "notNull": true,
            "autoIncrement": false,
            "defaultValue": "",
            "hideInGraph": false,
            "refDict": "",
            "extProps": {},
            "domain": "6BC8F04B-6CFA-4995-98D3-318F5CDD774E",
            "id": "B3692279-92F4-4F04-9EF7-F30D97A9DFC1"
          },
          {
            "defKey": "randomId",
            "defName": "随机配置 id",
            "comment": "",
            "type": "",
            "len": "",
            "scale": "",
            "primaryKey": false,
            "notNull": true,
            "autoIncrement": false,
            "defaultValue": "",
            "hideInGraph": false,
            "refDict": "",
            "extProps": {},
            "domain": "6BC8F04B-6CFA-4995-98D3-318F5CDD774E",
            "id": "B1574FAC-2BDF-4C90-9BDC-AB81D3964199"
          },
          {
            "defKey": "host",
            "defName": "",
            "comment": "",
            "type": "",
            "len": "",
            "scale": "",
            "primaryKey": false,
            "notNull": true,
            "autoIncrement": false,
            "defaultValue": "",
            "hideInGraph": false,
            "refDict": "",
            "extProps": {},
            "domain": "3E948CEC-3070-472C-AF92-F3CA11EC9D15",
            "id": "01D0B909-C20D-4C18-B94E-C057696412BB"
          },
          {
            "defKey": "date",
            "defName": "创建日期",
            "comment": "",
            "type": "",
            "len": "",
            "scale": "",
            "primaryKey": false,
            "notNull": true,
            "autoIncrement": false,
            "defaultValue": "",
            "hideInGraph": false,
            "refDict": "",
            "extProps": {},
            "domain": "7CFFA0D3-6A93-4DDC-BC10-DF21211064DC",
            "id": "40E10665-1B15-4FD9-AE64-018BCF3533EC"
          },
          {
            "defKey": "duration",
            "defName": "服务处理耗时",
            "comment": "服务处理耗时，单位为毫秒(ms)",
            "type": "",
            "len": "",
            "scale": "",
            "primaryKey": false,
            "notNull": false,
            "autoIncrement": false,
            "defaultValue": "",
            "hideInGraph": false,
            "refDict": "",
            "extProps": {},
            "domain": "6BC8F04B-6CFA-4995-98D3-318F5CDD774E",
            "id": "E0ED9864-C595-4DC3-A69B-96CEF5D39A7C"
          },
          {
            "defKey": "minDuration",
            "defName": "统计过的最短服务处理耗时",
            "comment": "单位为毫秒(ms)",
            "type": "",
            "len": "",
            "scale": "",
            "primaryKey": false,
            "notNull": false,
            "autoIncrement": false,
            "defaultValue": "",
            "hideInGraph": false,
            "refDict": "",
            "extProps": {},
            "domain": "6BC8F04B-6CFA-4995-98D3-318F5CDD774E",
            "id": "D8F00974-2716-4834-90FF-F63EC53EEF4C"
          },
          {
            "defKey": "maxDuration",
            "defName": "统计过的最长服务处理耗时",
            "comment": "单位为毫秒(ms)",
            "type": "",
            "len": "",
            "scale": "",
            "primaryKey": false,
            "notNull": false,
            "autoIncrement": false,
            "defaultValue": "",
            "hideInGraph": false,
            "refDict": "",
            "extProps": {},
            "domain": "6BC8F04B-6CFA-4995-98D3-318F5CDD774E",
            "id": "253A808C-A241-4680-8DAC-6895930FF4EB"
          },
          {
            "defKey": "response",
            "defName": "接口返回结果JSON",
            "comment": "",
            "type": "",
            "len": "",
            "scale": "",
            "primaryKey": false,
            "notNull": true,
            "autoIncrement": false,
            "defaultValue": "",
            "hideInGraph": false,
            "refDict": "",
            "extProps": {},
            "domain": "3E948CEC-3070-472C-AF92-F3CA11EC9D15",
            "id": "F7441845-F7CC-4ADA-A6F2-A1038CB18D66"
          },
          {
            "defKey": "compare",
            "defName": "对比结果",
            "comment": "",
            "type": "",
            "len": "",
            "scale": "",
            "primaryKey": false,
            "notNull": false,
            "autoIncrement": false,
            "defaultValue": "",
            "hideInGraph": false,
            "refDict": "",
            "extProps": {},
            "domain": "3E948CEC-3070-472C-AF92-F3CA11EC9D15",
            "id": "385A30EB-888D-4613-A8FD-5E6E9BDCFCB4"
          },
          {
            "defKey": "standard",
            "defName": "response 的校验标准",
            "comment": "是一个 JSON 格式的 AST ，描述了正确 Response 的结构、里面的字段名称、类型、长度、取值范围 等属性。",
            "type": "",
            "len": "",
            "scale": "",
            "primaryKey": false,
            "notNull": false,
            "autoIncrement": false,
            "defaultValue": "",
            "hideInGraph": false,
            "refDict": "",
            "extProps": {},
            "domain": "3E948CEC-3070-472C-AF92-F3CA11EC9D15",
            "id": "70BAC16A-A548-4982-803D-DB41D49ADFB6"
          }
        ],
        "correlations": [],
        "indexes": []
      },
      {
        "id": "AE278E83-4853-408F-BBB8-205AF0A17945",
        "env": {
          "base": {
            "nameSpace": "",
            "codeRoot": ""
          }
        },
        "defKey": "Verify",
        "defName": "",
        "comment": "",
        "properties": {},
        "nameTemplate": "{defKey}[{defName}]",
        "headers": [
          {
            "refKey": "hideInGraph",
            "freeze": true,
            "hideInGraph": true,
            "code": "relationNoShow",
            "value": "关系图",
            "newCode": "hideInGraph",
            "com": "Icon",
            "relationNoShow": true
          },
          {
            "refKey": "defKey",
            "freeze": true,
            "hideInGraph": false,
            "code": "name",
            "value": "字段代码",
            "newCode": "defKey",
            "com": "Input",
            "relationNoShow": false
          },
          {
            "refKey": "defName",
            "freeze": true,
            "hideInGraph": false,
            "code": "chnname",
            "value": "显示名称",
            "newCode": "defName",
            "com": "Input",
            "relationNoShow": false
          },
          {
            "refKey": "primaryKey",
            "hideInGraph": false,
            "code": "pk",
            "value": "主键",
            "newCode": "primaryKey",
            "com": "Checkbox",
            "relationNoShow": false
          },
          {
            "refKey": "notNull",
            "hideInGraph": true,
            "code": "notNull",
            "value": "不为空",
            "newCode": "notNull",
            "com": "Checkbox",
            "relationNoShow": true
          },
          {
            "refKey": "autoIncrement",
            "hideInGraph": true,
            "code": "autoIncrement",
            "value": "自增",
            "newCode": "autoIncrement",
            "com": "Checkbox",
            "relationNoShow": true
          },
          {
            "refKey": "domain",
            "hideInGraph": true,
            "code": "type",
            "value": "数据域",
            "newCode": "domain",
            "com": "Select",
            "relationNoShow": true
          },
          {
            "refKey": "type",
            "hideInGraph": false,
            "code": "dataType",
            "value": "数据类型",
            "newCode": "type",
            "com": "Text",
            "relationNoShow": false
          },
          {
            "refKey": "len",
            "hideInGraph": false,
            "code": "len",
            "value": "长度",
            "newCode": "len",
            "com": "Input",
            "relationNoShow": false
          },
          {
            "refKey": "scale",
            "hideInGraph": false,
            "code": "scale",
            "value": "小数位数",
            "newCode": "scale",
            "com": "Input",
            "relationNoShow": false
          },
          {
            "refKey": "comment",
            "hideInGraph": true,
            "code": "remark",
            "value": "说明",
            "newCode": "comment",
            "com": "Input",
            "relationNoShow": true
          },
          {
            "refKey": "refDict",
            "hideInGraph": true,
            "code": "refDict",
            "value": "数据字典",
            "newCode": "refDict",
            "com": "SearchSelect",
            "relationNoShow": true
          },
          {
            "refKey": "defaultValue",
            "hideInGraph": true,
            "code": "defaultValue",
            "value": "默认值",
            "newCode": "defaultValue",
            "com": "Input",
            "relationNoShow": true
          },
          {
            "refKey": "isStandard",
            "hideInGraph": false,
            "code": "isStandard",
            "value": "标准字段",
            "newCode": "isStandard",
            "com": "label",
            "relationNoShow": false
          },
          {
            "refKey": "uiHint",
            "hideInGraph": true,
            "code": "uiHint",
            "value": "UI建议",
            "newCode": "uiHint",
            "com": "Select",
            "relationNoShow": true
          },
          {
            "refKey": "extProps",
            "hideInGraph": true,
            "code": "extProps",
            "value": "拓展属性",
            "newCode": "extProps",
            "com": "linkButton",
            "relationNoShow": true
          }
        ],
        "fields": [
          {
            "defKey": "id",
            "defName": "唯一标识",
            "comment": "",
            "type": "",
            "len": "",
            "scale": "",
            "primaryKey": false,
            "notNull": false,
            "autoIncrement": false,
            "defaultValue": "",
            "hideInGraph": false,
            "refDict": "",
            "extProps": {},
            "domain": "9092C4E0-1A54-4859-ABBB-5B62DBC27573",
            "id": "510EBA8D-3A5B-4923-B751-61B122FC0C41"
          },
          {
            "defKey": "type",
            "defName": "类型",
            "comment": "0-登录 1-注册 2-修改登录密码 3-修改支付密码",
            "type": "",
            "len": "",
            "scale": "",
            "primaryKey": false,
            "notNull": false,
            "autoIncrement": false,
            "defaultValue": "",
            "hideInGraph": false,
            "refDict": "",
            "extProps": {},
            "domain": "9092C4E0-1A54-4859-ABBB-5B62DBC27573",
            "id": "31FF308B-1560-42D5-A88A-7C861634C34C"
          },
          {
            "defKey": "phone",
            "defName": "手机号",
            "comment": "",
            "type": "",
            "len": "",
            "scale": "",
            "primaryKey": false,
            "notNull": false,
            "autoIncrement": false,
            "defaultValue": "",
            "hideInGraph": false,
            "refDict": "",
            "extProps": {},
            "domain": "9092C4E0-1A54-4859-ABBB-5B62DBC27573",
            "id": "B63474CB-1336-48E9-8896-0D6EC438B414"
          },
          {
            "defKey": "verify",
            "defName": "验证码",
            "comment": "",
            "type": "",
            "len": "",
            "scale": "",
            "primaryKey": false,
            "notNull": false,
            "autoIncrement": false,
            "defaultValue": "",
            "hideInGraph": false,
            "refDict": "",
            "extProps": {},
            "domain": "9092C4E0-1A54-4859-ABBB-5B62DBC27573",
            "id": "CFECD8BF-7E7B-4563-8A6C-E5E74BA1ACA2"
          },
          {
            "defKey": "date",
            "defName": "创建时间",
            "comment": "",
            "type": "",
            "len": "",
            "scale": "",
            "primaryKey": false,
            "notNull": false,
            "autoIncrement": false,
            "defaultValue": "",
            "hideInGraph": false,
            "refDict": "",
            "extProps": {},
            "domain": "9092C4E0-1A54-4859-ABBB-5B62DBC27573",
            "id": "D58E369A-F776-48FF-B38E-61260F695D1D"
          }
        ],
        "correlations": [],
        "indexes": []
      },
      {
        "id": "978A4F8C-EF4C-439C-9DEF-613B8E416A41",
        "env": {
          "base": {
            "nameSpace": "",
            "codeRoot": ""
          }
        },
        "defKey": "single_table",
        "defName": "单边表测试",
        "comment": "",
        "properties": {
          "partitioned by": "(date string)",
          "row format delimited": "",
          "fields terminated by ','": "",
          "collection items terminated by '-'": "",
          "map keys terminated by ':'": "",
          "store as textfile;": ""
        },
        "nameTemplate": "{defKey}[{defName}]",
        "headers": [
          {
            "refKey": "hideInGraph",
            "hideInGraph": true
          },
          {
            "refKey": "defKey",
            "hideInGraph": false
          },
          {
            "refKey": "defName",
            "hideInGraph": false
          },
          {
            "refKey": "primaryKey",
            "hideInGraph": false
          },
          {
            "refKey": "notNull",
            "hideInGraph": true
          },
          {
            "refKey": "autoIncrement",
            "hideInGraph": true
          },
          {
            "refKey": "domain",
            "hideInGraph": true
          },
          {
            "refKey": "type",
            "hideInGraph": false
          },
          {
            "refKey": "len",
            "hideInGraph": false
          },
          {
            "refKey": "scale",
            "hideInGraph": false
          },
          {
            "refKey": "comment",
            "hideInGraph": true
          },
          {
            "refKey": "refDict",
            "hideInGraph": true
          },
          {
            "refKey": "defaultValue",
            "hideInGraph": true
          },
          {
            "refKey": "isStandard",
            "hideInGraph": false
          },
          {
            "refKey": "uiHint",
            "hideInGraph": true
          },
          {
            "refKey": "extProps",
            "hideInGraph": true
          }
        ],
        "fields": [
          {
            "defKey": "id",
            "defName": "主键",
            "comment": "",
            "type": "",
            "len": "",
            "scale": "",
            "primaryKey": true,
            "notNull": true,
            "autoIncrement": true,
            "defaultValue": "",
            "hideInGraph": false,
            "refDict": "",
            "extProps": {},
            "domain": "6BC8F04B-6CFA-4995-98D3-318F5CDD774E",
            "id": "55451D3B-DBDC-49D1-B8DD-3BD42074C41E"
          },
          {
            "defKey": "name",
            "defName": "名字",
            "comment": "",
            "type": "",
            "len": "",
            "scale": "",
            "primaryKey": false,
            "notNull": true,
            "autoIncrement": false,
            "defaultValue": "",
            "hideInGraph": false,
            "refDict": "",
            "extProps": {},
            "domain": "9092C4E0-1A54-4859-ABBB-5B62DBC27573",
            "id": "28146385-57E4-4E08-A3B7-D3D13E256AE4"
          },
          {
            "defKey": "age",
            "defName": "年龄",
            "comment": "",
            "type": "",
            "len": "",
            "scale": "",
            "primaryKey": false,
            "notNull": false,
            "autoIncrement": false,
            "defaultValue": "",
            "hideInGraph": false,
            "refDict": "",
            "extProps": {},
            "domain": "6BC8F04B-6CFA-4995-98D3-318F5CDD774E",
            "id": "B397D2AB-84AC-4D37-94CA-C58EE8B265A0"
          },
          {
            "defKey": "birthday",
            "defName": "出生日期",
            "comment": "",
            "type": "",
            "len": "",
            "scale": "",
            "primaryKey": false,
            "notNull": false,
            "autoIncrement": false,
            "defaultValue": "",
            "hideInGraph": false,
            "refDict": "",
            "extProps": {},
            "domain": "7CFFA0D3-6A93-4DDC-BC10-DF21211064DC",
            "id": "B935169D-0AE2-4243-ACC5-A698550F9CDA"
          }
        ],
        "correlations": [],
        "indexes": []
      }
    ],
    "views": [],
    "dicts": [
      {
        "defKey": "Gender",
        "defName": "性别",
        "intro": "",
        "items": [
          {
            "defKey": "M",
            "defName": "男",
            "intro": "",
            "parentKey": "",
            "enabled": true,
            "attr1": "",
            "attr2": "",
            "attr3": "",
            "sort": "1",
            "id": "3622D417-DA1A-408F-BEE1-11D328D534A0"
          },
          {
            "defKey": "F",
            "defName": "女",
            "intro": "",
            "parentKey": "",
            "enabled": true,
            "attr1": "",
            "attr2": "",
            "attr3": "",
            "sort": "2",
            "id": "380A0790-64A7-481E-831C-32F7BEE1502B"
          },
          {
            "defKey": "U",
            "defName": "未知",
            "intro": "",
            "parentKey": "",
            "enabled": true,
            "attr1": "",
            "attr2": "",
            "attr3": "",
            "sort": "3",
            "id": "FA239F4D-1276-40D9-B230-F66BD35C3C27"
          }
        ],
        "id": "BF9E20E0-80D3-486D-BD58-5FADCF3E4A1D"
      },
      {
        "defKey": "Political",
        "defName": "政治面貌",
        "intro": "",
        "items": [
          {
            "defKey": "10",
            "defName": "共青团员",
            "intro": "",
            "parentKey": "",
            "enabled": true,
            "attr1": "",
            "attr2": "",
            "attr3": "",
            "id": "61F3145A-7599-4CCB-B298-D5EE788107BE"
          },
          {
            "defKey": "20",
            "defName": "中共党员",
            "intro": "",
            "parentKey": "",
            "enabled": true,
            "attr1": "",
            "attr2": "",
            "attr3": "",
            "id": "ED16D25A-AB2F-4FA0-BB48-2B9031FA28C4"
          },
          {
            "defKey": "30",
            "defName": "民主党派",
            "intro": "",
            "parentKey": "",
            "enabled": true,
            "attr1": "",
            "attr2": "",
            "attr3": "",
            "id": "0FB7974A-AE11-438F-86E0-B163316F9272"
          },
          {
            "defKey": "40",
            "defName": "群众",
            "intro": "",
            "parentKey": "",
            "enabled": true,
            "attr1": "",
            "attr2": "",
            "attr3": "",
            "id": "7D247234-7E97-45B1-8C56-4A17A370854A"
          },
          {
            "defKey": "90",
            "defName": "未知",
            "intro": "",
            "parentKey": "",
            "enabled": true,
            "attr1": "",
            "attr2": "",
            "attr3": "",
            "id": "DA65D752-AF04-4A11-81D8-14A38692A64A"
          }
        ],
        "id": "06EED564-BBA9-4747-8D73-AF809A330CB8"
      },
      {
        "defKey": "Marital",
        "defName": "婚姻状况",
        "intro": "婚姻状况的码表",
        "items": [
          {
            "defKey": "UNMARRIED",
            "defName": "未婚",
            "intro": "",
            "parentKey": "",
            "enabled": true,
            "attr1": "",
            "attr2": "",
            "attr3": "",
            "sort": "1",
            "id": "20EE81BC-74EE-47DA-A56F-9663B23F44BD"
          },
          {
            "defKey": "MARRIED",
            "defName": "已婚",
            "intro": "",
            "parentKey": "",
            "enabled": true,
            "attr1": "",
            "attr2": "",
            "attr3": "",
            "sort": "2",
            "id": "4DCA10A8-417E-4A8D-BDF6-0A278C060ADC"
          },
          {
            "defKey": "WIDOWED",
            "defName": "丧偶",
            "intro": "",
            "parentKey": "",
            "enabled": true,
            "attr1": "",
            "attr2": "",
            "attr3": "",
            "sort": "3",
            "id": "826062A7-057C-4892-B338-06459F5B808D"
          },
          {
            "defKey": "DIVORCE",
            "defName": "离婚",
            "intro": "",
            "parentKey": "",
            "enabled": true,
            "attr1": "",
            "attr2": "",
            "attr3": "",
            "sort": "4",
            "id": "B23200B4-5E59-4F5E-A779-D981A040FA32"
          },
          {
            "defKey": "UNSPECIFIED",
            "defName": "未说明",
            "intro": "",
            "parentKey": "",
            "enabled": true,
            "attr1": "",
            "attr2": "",
            "attr3": "",
            "sort": "5",
            "id": "A7928FE2-349A-4702-9682-2EF7205E077B"
          }
        ],
        "id": "EA1587B7-3954-437A-BFE0-FCB0453BCABA"
      },
      {
        "defKey": "StudentStatus",
        "defName": "学生状态",
        "intro": "",
        "items": [
          {
            "defKey": "Normal",
            "defName": "正常",
            "intro": "",
            "parentKey": "",
            "enabled": true,
            "attr1": "",
            "attr2": "",
            "attr3": "",
            "sort": "1",
            "id": "E9CA1CC9-8851-4F6B-86BA-B9CF0E44EB73"
          },
          {
            "defKey": "Graduated",
            "defName": "毕业",
            "intro": "",
            "parentKey": "",
            "enabled": true,
            "attr1": "",
            "attr2": "",
            "attr3": "",
            "sort": "2",
            "id": "DEC51D7C-99DF-430C-817D-0499862D3CCC"
          },
          {
            "defKey": "Studied",
            "defName": "肄业",
            "intro": "",
            "parentKey": "",
            "enabled": true,
            "attr1": "",
            "attr2": "",
            "attr3": "",
            "sort": "3",
            "id": "8853D6B6-75D3-4479-9006-FC731CD85B20"
          },
          {
            "defKey": "Stop",
            "defName": "休学",
            "intro": "",
            "parentKey": "",
            "enabled": true,
            "attr1": "",
            "attr2": "",
            "attr3": "",
            "sort": "4",
            "id": "C74BA8CF-1DC6-4C79-BAAC-F11EB9C6AF01"
          }
        ],
        "id": "4642BC5F-02EE-4E17-A60C-CF22F86A0282"
      },
      {
        "defKey": "GBNation",
        "defName": "民族",
        "intro": "",
        "items": [
          {
            "defKey": "01",
            "defName": "汉族",
            "intro": "",
            "parentKey": "",
            "enabled": true,
            "attr1": "",
            "attr2": "",
            "attr3": "",
            "id": "9224DF53-F7C0-447D-B8ED-0A39F799EE19"
          },
          {
            "defKey": "02",
            "defName": "蒙古族",
            "intro": "",
            "parentKey": "",
            "enabled": true,
            "attr1": "",
            "attr2": "",
            "attr3": "",
            "id": "D57818E3-9206-45BB-AE79-27C64A4AB80F"
          },
          {
            "defKey": "03",
            "defName": "回族",
            "intro": "",
            "parentKey": "",
            "enabled": true,
            "attr1": "",
            "attr2": "",
            "attr3": "",
            "id": "0A1A3CA9-6D68-4E15-8BD0-9A2FF428D804"
          },
          {
            "defKey": "04",
            "defName": "藏族",
            "intro": "",
            "parentKey": "",
            "enabled": true,
            "attr1": "",
            "attr2": "",
            "attr3": "",
            "id": "7CC6B6BE-47EA-460E-ACFA-C377468DEA11"
          },
          {
            "defKey": "05",
            "defName": "维吾尔族",
            "intro": "",
            "parentKey": "",
            "enabled": true,
            "attr1": "",
            "attr2": "",
            "attr3": "",
            "id": "A666D51F-D249-4FAC-B1F3-78C371836CB3"
          },
          {
            "defKey": "06",
            "defName": "苗族",
            "intro": "",
            "parentKey": "",
            "enabled": true,
            "attr1": "",
            "attr2": "",
            "attr3": "",
            "id": "A0C9E1BA-D87B-4695-ADFA-287FDA32BB5A"
          },
          {
            "defKey": "07",
            "defName": "彝族",
            "intro": "",
            "parentKey": "",
            "enabled": true,
            "attr1": "",
            "attr2": "",
            "attr3": "",
            "id": "149B5B9E-C1D1-4790-8CCF-0ED5F4B25172"
          },
          {
            "defKey": "08",
            "defName": "壮族",
            "intro": "",
            "parentKey": "",
            "enabled": true,
            "attr1": "",
            "attr2": "",
            "attr3": "",
            "id": "F9A3E65C-BF4D-4C6B-ADB7-8C9CF0487360"
          },
          {
            "defKey": "09",
            "defName": "布依族",
            "intro": "",
            "parentKey": "",
            "enabled": true,
            "attr1": "",
            "attr2": "",
            "attr3": "",
            "id": "14F17DE4-E96A-460B-98A6-F84EC8CF9885"
          },
          {
            "defKey": "10",
            "defName": "朝鲜族",
            "intro": "",
            "parentKey": "",
            "enabled": true,
            "attr1": "",
            "attr2": "",
            "attr3": "",
            "id": "8A81AB18-B1BF-4797-A6E5-DEDB2C6566B0"
          },
          {
            "defKey": "11",
            "defName": "满族",
            "intro": "",
            "parentKey": "",
            "enabled": true,
            "attr1": "",
            "attr2": "",
            "attr3": "",
            "id": "7D460947-FBD2-4E4D-8366-3B38DCAF09D1"
          }
        ],
        "id": "115EDEFC-0323-410E-81AB-CCAB8879837A"
      },
      {
        "defKey": "GradeLevel",
        "defName": "受教育程度",
        "sort": "",
        "intro": "",
        "items": [],
        "id": "9E7C9788-B805-4C7D-8531-FD1D9DC79B05"
      }
    ],
    "viewGroups": [],
    "dataTypeMapping": {
      "referURL": "",
      "mappings": [
        {
          "defKey": "string",
          "id": "FC9790A7-36B8-4A48-8F9A-BC1042BCFE64",
          "defName": "字串",
          "29D1CE08-4C35-4D2D-AAA9-23D93305B52E": "VARCHAR",
          "A4E23CB7-BB01-4BD1-9F71-F73F3E15A542": "VARCHAR2",
          "BFC87171-C74F-494A-B7C2-76B9C55FACC9": "VARCHAR",
          "DFBEC1DD-AA84-456E-BBF3-C95DD0DB2022": "VARCHAR",
          "89504F5D-94BF-4C9E-8B2E-44F37305FED5": "VARCHAR",
          "0BBCABA5-B8E4-41B0-B8E4-8F5EA6029307": "VARCHAR2",
          "592C7013-143D-4E7B-AF64-0D7BF1E28230": "VARCHAR",
          "77BD85E5-9D0D-4096-8427-CBA306FC9C6A": "VARCHAR",
          "11D1FB71-A587-4217-89BA-611B8A1F83E0": "STRING",
          "B363BE0B-F852-49B8-9B2E-F6D2174DEAC1": "TEXT",
          "797A1496-D649-4261-89B4-544132EC3F36": "String",
          "895CFD1D-4273-4D32-A2C4-CAC70200AB5B": "String",
          "A2EE7B4A-CE62-4290-B00C-B26C1BF18073": "String",
          "F3AC2415-E86B-40C6-9FEB-F4B7937D2C30": "string",
          "81CCA482-3F4D-4EAC-8CF9-F5E7BC098AD2": "string",
          "B91D99E0-9B7C-416C-8737-B760957DAF09": "string"
        },
        {
          "defKey": "double",
          "id": "1A0BDC09-0792-4174-9E8E-80BE8DF44B8E",
          "defName": "小数",
          "29D1CE08-4C35-4D2D-AAA9-23D93305B52E": "DECIMAL",
          "A4E23CB7-BB01-4BD1-9F71-F73F3E15A542": "DECIMAL",
          "BFC87171-C74F-494A-B7C2-76B9C55FACC9": "DECIMAL",
          "DFBEC1DD-AA84-456E-BBF3-C95DD0DB2022": "NUMERIC",
          "89504F5D-94BF-4C9E-8B2E-44F37305FED5": "DECIMAL",
          "0BBCABA5-B8E4-41B0-B8E4-8F5EA6029307": "DECIMAL",
          "592C7013-143D-4E7B-AF64-0D7BF1E28230": "NUMERIC",
          "77BD85E5-9D0D-4096-8427-CBA306FC9C6A": "NUMERIC",
          "11D1FB71-A587-4217-89BA-611B8A1F83E0": "DOUBLE",
          "B363BE0B-F852-49B8-9B2E-F6D2174DEAC1": "REAL",
          "797A1496-D649-4261-89B4-544132EC3F36": "Double",
          "895CFD1D-4273-4D32-A2C4-CAC70200AB5B": "Double",
          "A2EE7B4A-CE62-4290-B00C-B26C1BF18073": "Double",
          "F3AC2415-E86B-40C6-9FEB-F4B7937D2C30": "decimal",
          "81CCA482-3F4D-4EAC-8CF9-F5E7BC098AD2": "double",
          "B91D99E0-9B7C-416C-8737-B760957DAF09": "*float64"
        },
        {
          "defKey": "int",
          "id": "1D764C4A-6F9F-421E-B11A-6F3E23B51811",
          "defName": "整数",
          "29D1CE08-4C35-4D2D-AAA9-23D93305B52E": "INT",
          "A4E23CB7-BB01-4BD1-9F71-F73F3E15A542": "INT",
          "BFC87171-C74F-494A-B7C2-76B9C55FACC9": "INT",
          "DFBEC1DD-AA84-456E-BBF3-C95DD0DB2022": "INTEGER",
          "89504F5D-94BF-4C9E-8B2E-44F37305FED5": "INT",
          "0BBCABA5-B8E4-41B0-B8E4-8F5EA6029307": "INTEGER",
          "592C7013-143D-4E7B-AF64-0D7BF1E28230": "INTEGER",
          "77BD85E5-9D0D-4096-8427-CBA306FC9C6A": "INT4",
          "11D1FB71-A587-4217-89BA-611B8A1F83E0": "INT",
          "B363BE0B-F852-49B8-9B2E-F6D2174DEAC1": "INTEGER",
          "797A1496-D649-4261-89B4-544132EC3F36": "Integer",
          "895CFD1D-4273-4D32-A2C4-CAC70200AB5B": "Integer",
          "A2EE7B4A-CE62-4290-B00C-B26C1BF18073": "Integer",
          "F3AC2415-E86B-40C6-9FEB-F4B7937D2C30": "float",
          "81CCA482-3F4D-4EAC-8CF9-F5E7BC098AD2": "int",
          "B91D99E0-9B7C-416C-8737-B760957DAF09": "*int"
        },
        {
          "defKey": "date",
          "id": "89D69E81-EA34-42EE-9FA2-93B8BD27E098",
          "defName": "日期",
          "29D1CE08-4C35-4D2D-AAA9-23D93305B52E": "DATETIME",
          "A4E23CB7-BB01-4BD1-9F71-F73F3E15A542": "DATE",
          "BFC87171-C74F-494A-B7C2-76B9C55FACC9": "DATETIME",
          "DFBEC1DD-AA84-456E-BBF3-C95DD0DB2022": "TIMESTAMP",
          "89504F5D-94BF-4C9E-8B2E-44F37305FED5": "DATE",
          "0BBCABA5-B8E4-41B0-B8E4-8F5EA6029307": "DATE",
          "592C7013-143D-4E7B-AF64-0D7BF1E28230": "DATE",
          "77BD85E5-9D0D-4096-8427-CBA306FC9C6A": "DATE",
          "11D1FB71-A587-4217-89BA-611B8A1F83E0": "DATETIME",
          "B363BE0B-F852-49B8-9B2E-F6D2174DEAC1": "NUMERIC",
          "797A1496-D649-4261-89B4-544132EC3F36": "Date",
          "895CFD1D-4273-4D32-A2C4-CAC70200AB5B": "Date",
          "A2EE7B4A-CE62-4290-B00C-B26C1BF18073": "Date",
          "F3AC2415-E86B-40C6-9FEB-F4B7937D2C30": "DateTime",
          "81CCA482-3F4D-4EAC-8CF9-F5E7BC098AD2": "timestamp",
          "B91D99E0-9B7C-416C-8737-B760957DAF09": "*time.Time"
        },
        {
          "defKey": "bytes",
          "id": "D516E75B-90F5-4741-B9B3-A186A263F04C",
          "defName": "二进制",
          "29D1CE08-4C35-4D2D-AAA9-23D93305B52E": "BLOB",
          "A4E23CB7-BB01-4BD1-9F71-F73F3E15A542": "BLOB",
          "BFC87171-C74F-494A-B7C2-76B9C55FACC9": "VARBINARY",
          "DFBEC1DD-AA84-456E-BBF3-C95DD0DB2022": "BYTEA",
          "89504F5D-94BF-4C9E-8B2E-44F37305FED5": "BLOB",
          "0BBCABA5-B8E4-41B0-B8E4-8F5EA6029307": "BLOB",
          "592C7013-143D-4E7B-AF64-0D7BF1E28230": "BYTEA",
          "77BD85E5-9D0D-4096-8427-CBA306FC9C6A": "BYTEA",
          "11D1FB71-A587-4217-89BA-611B8A1F83E0": "BINARY",
          "B363BE0B-F852-49B8-9B2E-F6D2174DEAC1": "NONE",
          "797A1496-D649-4261-89B4-544132EC3F36": "byte[]",
          "895CFD1D-4273-4D32-A2C4-CAC70200AB5B": "byte[]",
          "A2EE7B4A-CE62-4290-B00C-B26C1BF18073": "byte[]",
          "F3AC2415-E86B-40C6-9FEB-F4B7937D2C30": "binary",
          "81CCA482-3F4D-4EAC-8CF9-F5E7BC098AD2": "binary",
          "B91D99E0-9B7C-416C-8737-B760957DAF09": "[]byte"
        },
        {
          "defKey": "largeText",
          "id": "B17BDED3-085F-40E1-9019-3B79CF2BF075",
          "defName": "大文本",
          "29D1CE08-4C35-4D2D-AAA9-23D93305B52E": "TEXT",
          "A4E23CB7-BB01-4BD1-9F71-F73F3E15A542": "CLOB",
          "BFC87171-C74F-494A-B7C2-76B9C55FACC9": "TEXT",
          "DFBEC1DD-AA84-456E-BBF3-C95DD0DB2022": "TEXT",
          "89504F5D-94BF-4C9E-8B2E-44F37305FED5": "CLOB",
          "0BBCABA5-B8E4-41B0-B8E4-8F5EA6029307": "CLOB",
          "592C7013-143D-4E7B-AF64-0D7BF1E28230": "TEXT",
          "77BD85E5-9D0D-4096-8427-CBA306FC9C6A": "TEXT",
          "11D1FB71-A587-4217-89BA-611B8A1F83E0": "STRING",
          "B363BE0B-F852-49B8-9B2E-F6D2174DEAC1": "TEXT",
          "797A1496-D649-4261-89B4-544132EC3F36": "String",
          "895CFD1D-4273-4D32-A2C4-CAC70200AB5B": "String",
          "A2EE7B4A-CE62-4290-B00C-B26C1BF18073": "String",
          "F3AC2415-E86B-40C6-9FEB-F4B7937D2C30": "string",
          "81CCA482-3F4D-4EAC-8CF9-F5E7BC098AD2": "string",
          "B91D99E0-9B7C-416C-8737-B760957DAF09": "string"
        },
        {
          "defKey": "json",
          "defName": "json",
          "id": "2D5544D3-7D47-4388-AF7C-92C5251637FC"
        }
      ]
    },
    "domains": [
      {
        "defKey": "DefaultString",
        "defName": "默认字串",
        "applyFor": "FC9790A7-36B8-4A48-8F9A-BC1042BCFE64",
        "len": 255,
        "scale": "",
        "uiHint": "",
        "id": "9092C4E0-1A54-4859-ABBB-5B62DBC27573"
      },
      {
        "defKey": "IdOrKey",
        "defName": "主键标识",
        "applyFor": "FC9790A7-36B8-4A48-8F9A-BC1042BCFE64",
        "len": 32,
        "scale": "",
        "uiHint": "",
        "id": "16120F75-6AA7-4483-868D-F07F511BB081"
      },
      {
        "defKey": "Name",
        "defName": "名称",
        "applyFor": "FC9790A7-36B8-4A48-8F9A-BC1042BCFE64",
        "len": 90,
        "scale": "",
        "uiHint": "",
        "id": "54611CCC-CA4B-42E1-9F32-4944C85B85A6"
      },
      {
        "defKey": "Int",
        "defName": "整数",
        "applyFor": "1D764C4A-6F9F-421E-B11A-6F3E23B51811",
        "len": "",
        "scale": "",
        "uiHint": "",
        "id": "6BC8F04B-6CFA-4995-98D3-318F5CDD774E"
      },
      {
        "defKey": "Double",
        "defName": "小数",
        "applyFor": "1A0BDC09-0792-4174-9E8E-80BE8DF44B8E",
        "len": 24,
        "scale": 6,
        "uiHint": "",
        "id": "FF4459C5-6B45-4DBF-8FC0-E06239BC05B4"
      },
      {
        "defKey": "Money",
        "defName": "金额",
        "applyFor": "1A0BDC09-0792-4174-9E8E-80BE8DF44B8E",
        "len": 24,
        "scale": 6,
        "uiHint": "",
        "id": "C3B1681B-99F9-4818-9E80-DE1652A51D85"
      },
      {
        "defKey": "DateTime",
        "defName": "日期时间",
        "applyFor": "89D69E81-EA34-42EE-9FA2-93B8BD27E098",
        "len": "",
        "scale": "",
        "uiHint": "",
        "id": "7CFFA0D3-6A93-4DDC-BC10-DF21211064DC"
      },
      {
        "defKey": "YesNo",
        "defName": "是否",
        "applyFor": "FC9790A7-36B8-4A48-8F9A-BC1042BCFE64",
        "len": "1",
        "scale": "",
        "uiHint": "",
        "id": "6F7C1C5C-D159-41E6-BF9D-54DEEFA79AFF"
      },
      {
        "defKey": "Dict",
        "defName": "数据字典",
        "applyFor": "FC9790A7-36B8-4A48-8F9A-BC1042BCFE64",
        "len": "32",
        "scale": "",
        "uiHint": "",
        "id": "73FD2BAD-2358-4336-B96D-45DC897BD792"
      },
      {
        "defKey": "DescText",
        "defName": "描述文本",
        "applyFor": "FC9790A7-36B8-4A48-8F9A-BC1042BCFE64",
        "len": "900",
        "scale": "",
        "uiHint": "",
        "id": "3E948CEC-3070-472C-AF92-F3CA11EC9D15"
      },
      {
        "defKey": "json",
        "defName": "json",
        "applyFor": "2D5544D3-7D47-4388-AF7C-92C5251637FC",
        "len": "",
        "scale": "",
        "uiHint": "",
        "id": "2123D5FA-22BB-449F-86A1-A863F21470CA"
      }
    ],
    "diagrams": [
      {
        "defKey": "基础配置",
        "defName": "",
        "relationType": "field",
        "canvasData": {
          "cells": [
            {
              "id": "63dbf97f-f478-4b75-b8c9-a7d76ac1a17c",
              "shape": "erdRelation",
              "source": {
                "cell": "961e5fcc-8a05-4100-8794-94b12ad18277",
                "port": "63D2C0E1-6145-477B-B2D2-9AD2DF160C9D%in"
              },
              "target": {
                "cell": "c26935ff-146a-4eff-869d-c2792436981e",
                "port": "3F899784-3099-47E6-B998-F32C263B8E23%out"
              },
              "relation": "1:n",
              "fillColor": "#ACDAFC",
              "router": {
                "name": "manhattan"
              }
            },
            {
              "id": "352b1cf4-48dc-4533-9d02-14e0d040571e",
              "shape": "erdRelation",
              "source": {
                "cell": "c42277f5-2670-4c3a-898b-0f0b89c71c49",
                "port": "83318CD2-1CA1-4CF3-AE6C-B129584E56D4%in"
              },
              "target": {
                "cell": "aeab6377-3680-4fdc-acc6-1ff789a86e30",
                "port": "60828606-2E5C-4CFB-B48F-7E4A4EB6F9F0%out"
              },
              "relation": "1:n",
              "fillColor": "#ACDAFC",
              "router": {
                "name": "manhattan"
              }
            },
            {
              "id": "33f62084-8854-405e-8bd1-3906225ec2c0",
              "shape": "erdRelation",
              "source": {
                "cell": "c42277f5-2670-4c3a-898b-0f0b89c71c49",
                "port": "83318CD2-1CA1-4CF3-AE6C-B129584E56D4%in"
              },
              "target": {
                "cell": "60db12ad-27f0-4c83-98e6-2a2a14caf04e",
                "port": "F93737F7-F7E0-47C5-8D81-17225B10C31C%in"
              },
              "relation": "1:n",
              "fillColor": "#ACDAFC",
              "router": {
                "name": "manhattan"
              }
            },
            {
              "id": "49b764b7-f94d-45fb-9164-bc0076076625",
              "shape": "erdRelation",
              "source": {
                "cell": "c42277f5-2670-4c3a-898b-0f0b89c71c49",
                "port": "83318CD2-1CA1-4CF3-AE6C-B129584E56D4%out"
              },
              "target": {
                "cell": "961e5fcc-8a05-4100-8794-94b12ad18277",
                "port": "4DDF70E0-779E-4725-9878-30673B9FDF7D%in"
              },
              "relation": "1:n",
              "fillColor": "#ACDAFC",
              "router": {
                "name": "manhattan"
              }
            },
            {
              "id": "961e5fcc-8a05-4100-8794-94b12ad18277",
              "shape": "table",
              "position": {
                "x": 1381,
                "y": 120
              },
              "count": 0,
              "originKey": "C873A5E9-1338-43AA-A5DC-57BCD8BCC5AA"
            },
            {
              "id": "cc2d0ae7-1205-4311-a2d2-0b22768ecedb",
              "shape": "erdRelation",
              "source": {
                "cell": "c42277f5-2670-4c3a-898b-0f0b89c71c49",
                "port": "83318CD2-1CA1-4CF3-AE6C-B129584E56D4%in"
              },
              "target": {
                "cell": "f6c223b7-1ca4-4984-af59-807db5c99750",
                "port": "A2FA6F70-F4F5-457F-B2E5-4A263427CC3E%in"
              },
              "relation": "1:n",
              "fillColor": "#ACDAFC",
              "router": {
                "name": "manhattan"
              }
            },
            {
              "id": "737db2c5-8f5b-4334-9ac9-0b2a935f021b",
              "shape": "table",
              "position": {
                "x": 1521,
                "y": 596
              },
              "count": 0,
              "originKey": "5AA1FBB1-4F23-4E2E-ACC3-65A861507763"
            },
            {
              "id": "eb1a22ce-69ca-4994-827f-d2ed374544af",
              "shape": "table",
              "position": {
                "x": 1080,
                "y": 949
              },
              "count": 0,
              "originKey": "EA0B23AF-34FD-447F-B89D-1C3403967BBE"
            },
            {
              "id": "de5458c7-dbe1-45c8-b824-6a7e6b8e509a",
              "shape": "table",
              "position": {
                "x": 1036,
                "y": 1377
              },
              "count": 0,
              "originKey": "686E4546-B8FA-4F06-BF0E-D6E4FCD9542F"
            },
            {
              "id": "cc84c41a-70c9-44b4-93cc-bd3bebb47c90",
              "shape": "table",
              "position": {
                "x": 487,
                "y": 1306
              },
              "count": 0,
              "originKey": "64E4B105-28DA-4EE7-B10A-FA6F82A8A5D7"
            },
            {
              "id": "f6c223b7-1ca4-4984-af59-807db5c99750",
              "shape": "table",
              "position": {
                "x": 522,
                "y": 1041
              },
              "count": 0,
              "originKey": "D0A8658A-AD22-47F2-A418-B6B441961070"
            },
            {
              "id": "60db12ad-27f0-4c83-98e6-2a2a14caf04e",
              "shape": "table",
              "position": {
                "x": 522,
                "y": 760
              },
              "count": 0,
              "originKey": "7C63DF7D-2C67-4313-8F95-34137F845B7A"
            },
            {
              "id": "fe585b30-2c46-42b2-bdbd-7a041fcaa7af",
              "shape": "table",
              "position": {
                "x": 50,
                "y": 110
              },
              "count": 0,
              "originKey": "62F3BDC0-AE84-4F2F-87FB-7BAA7C036CB2"
            },
            {
              "id": "c26935ff-146a-4eff-869d-c2792436981e",
              "shape": "table",
              "position": {
                "x": 440,
                "y": 110
              },
              "count": 0,
              "originKey": "143D13BC-37D9-42F1-B31F-44050DABD465"
            },
            {
              "id": "c42277f5-2670-4c3a-898b-0f0b89c71c49",
              "shape": "table",
              "position": {
                "x": 519,
                "y": 417
              },
              "count": 0,
              "originKey": "0178A2C2-DC48-474E-AED0-1F86DF273A93",
              "fillColor": "#ffc000"
            },
            {
              "id": "d76181c8-800c-4e30-a9af-f11e6954608a",
              "shape": "table",
              "position": {
                "x": 1009,
                "y": 540
              },
              "count": 0,
              "originKey": "948C801D-3082-41F1-BDCF-9308D772B27E"
            },
            {
              "id": "aeab6377-3680-4fdc-acc6-1ff789a86e30",
              "shape": "table",
              "position": {
                "x": -40.5,
                "y": 655
              },
              "count": 0,
              "originKey": "0C17714C-7A15-438E-B54A-72658F6D323E"
            },
            {
              "id": "98c79315-817a-443e-9e79-a5d1111d88e3",
              "shape": "table",
              "position": {
                "x": -45,
                "y": 1041
              },
              "count": 0,
              "originKey": "29C6FC79-675D-428F-8811-8FE4C1EB8D25"
            },
            {
              "id": "8a7a43c2-7fc1-42a4-844c-09a2b51e9252",
              "shape": "table",
              "position": {
                "x": 50,
                "y": -131
              },
              "count": 0,
              "originKey": "AE278E83-4853-408F-BBB8-205AF0A17945"
            },
            {
              "id": "aeda11a2-aa0c-4555-ad52-cfab6aab12f2",
              "shape": "table",
              "position": {
                "x": 1381,
                "y": -290
              },
              "count": 1,
              "originKey": "0C17714C-7A15-438E-B54A-72658F6D323E"
            }
          ]
        },
        "id": "9D2571A3-2BD6-4EA1-96C8-DCBE214D6D8B"
      }
    ],
    "standardFields": [
      {
        "defKey": "personInfo",
        "defName": "个人基本信息要素",
        "fields": [
          {
            "defKey": "ID_CARD_NO",
            "defName": "身份证号",
            "comment": "",
            "type": "VARCHAR",
            "len": "60",
            "scale": "",
            "primaryKey": false,
            "notNull": false,
            "autoIncrement": false,
            "defaultValue": "",
            "hideInGraph": false,
            "domain": "9092C4E0-1A54-4859-ABBB-5B62DBC27573",
            "refDict": "",
            "uiHint": "",
            "id": "A64A91C8-A41F-4113-92FB-7563D7EF054D"
          },
          {
            "defKey": "MOBILE_PHONE",
            "defName": "手机号",
            "comment": "",
            "type": "VARCHAR",
            "len": "60",
            "scale": "",
            "primaryKey": false,
            "notNull": false,
            "autoIncrement": false,
            "defaultValue": "",
            "hideInGraph": false,
            "domain": "9092C4E0-1A54-4859-ABBB-5B62DBC27573",
            "refDict": "",
            "uiHint": "",
            "id": "479DA2AB-1974-411A-A81E-92FB939E75EB"
          },
          {
            "defKey": "GENDER",
            "defName": "性别",
            "comment": "",
            "type": "VARCHAR",
            "len": "32",
            "scale": "",
            "primaryKey": false,
            "notNull": false,
            "autoIncrement": false,
            "defaultValue": "",
            "hideInGraph": false,
            "domain": "73FD2BAD-2358-4336-B96D-45DC897BD792",
            "refDict": "BF9E20E0-80D3-486D-BD58-5FADCF3E4A1D",
            "uiHint": "",
            "id": "48473E29-6594-4912-AADE-C8AB44FCA3E9"
          },
          {
            "defKey": "BIRTH",
            "defName": "出生日期",
            "comment": "",
            "type": "DATETIME",
            "len": "",
            "scale": "",
            "primaryKey": false,
            "notNull": false,
            "autoIncrement": false,
            "defaultValue": "",
            "hideInGraph": false,
            "domain": "7CFFA0D3-6A93-4DDC-BC10-DF21211064DC",
            "refDict": "",
            "uiHint": "",
            "id": "2BD3D2EE-2411-49A6-983D-84B81057312F"
          },
          {
            "defKey": "AVATAR",
            "defName": "头像",
            "comment": "",
            "type": "VARCHAR",
            "len": "60",
            "scale": "",
            "primaryKey": false,
            "notNull": false,
            "autoIncrement": false,
            "defaultValue": "",
            "hideInGraph": false,
            "domain": "9092C4E0-1A54-4859-ABBB-5B62DBC27573",
            "refDict": "",
            "uiHint": "",
            "id": "FDD67CEE-4B52-4BD1-A1A3-9C5EBC6037E6"
          },
          {
            "defKey": "HEIGHT",
            "defName": "身高",
            "comment": "",
            "type": "INT",
            "len": "",
            "scale": "",
            "primaryKey": false,
            "notNull": false,
            "autoIncrement": false,
            "defaultValue": "",
            "hideInGraph": false,
            "domain": "6BC8F04B-6CFA-4995-98D3-318F5CDD774E",
            "refDict": "",
            "uiHint": "",
            "id": "CAAA0E79-41A1-4758-B481-D171168C4D68"
          },
          {
            "defKey": "WEIGHT",
            "defName": "体重",
            "comment": "",
            "type": "INT",
            "len": "",
            "scale": "",
            "primaryKey": false,
            "notNull": false,
            "autoIncrement": false,
            "defaultValue": "",
            "hideInGraph": false,
            "domain": "6BC8F04B-6CFA-4995-98D3-318F5CDD774E",
            "refDict": "",
            "uiHint": "",
            "id": "575482CE-64A6-4CB9-99DC-8E126D190AAA"
          },
          {
            "defKey": "NATION",
            "defName": "名族",
            "comment": "",
            "type": "VARCHAR",
            "len": "32",
            "scale": "",
            "primaryKey": false,
            "notNull": false,
            "autoIncrement": false,
            "defaultValue": "",
            "hideInGraph": false,
            "domain": "73FD2BAD-2358-4336-B96D-45DC897BD792",
            "refDict": "115EDEFC-0323-410E-81AB-CCAB8879837A",
            "uiHint": "",
            "id": "15B0D75D-0B97-4985-A816-D0EAFA90446B"
          },
          {
            "defKey": "POLITICAL",
            "defName": "政治面貌",
            "comment": "",
            "type": "VARCHAR",
            "len": "32",
            "scale": "",
            "primaryKey": false,
            "notNull": false,
            "autoIncrement": false,
            "defaultValue": "",
            "hideInGraph": false,
            "domain": "73FD2BAD-2358-4336-B96D-45DC897BD792",
            "refDict": "06EED564-BBA9-4747-8D73-AF809A330CB8",
            "uiHint": "",
            "id": "F458E86D-84D6-45A1-9DD3-51E6C8170D7F"
          },
          {
            "defKey": "MARITAL",
            "defName": "婚姻状况",
            "comment": "",
            "type": "VARCHAR",
            "len": "32",
            "scale": "",
            "primaryKey": false,
            "notNull": false,
            "autoIncrement": false,
            "defaultValue": "",
            "hideInGraph": false,
            "domain": "73FD2BAD-2358-4336-B96D-45DC897BD792",
            "refDict": "EA1587B7-3954-437A-BFE0-FCB0453BCABA",
            "uiHint": "",
            "id": "7275E578-6893-4922-AC69-95B261BFBD61"
          },
          {
            "defKey": "DOMICILE_PLACE_PROVINCE",
            "defName": "籍贯（省）",
            "comment": "",
            "type": "VARCHAR",
            "len": "60",
            "scale": "",
            "primaryKey": false,
            "notNull": false,
            "autoIncrement": false,
            "defaultValue": "",
            "hideInGraph": false,
            "domain": "9092C4E0-1A54-4859-ABBB-5B62DBC27573",
            "refDict": "",
            "uiHint": "",
            "id": "F04BF130-3EC1-4E02-9DED-3214CA88E352"
          },
          {
            "defKey": "DOMICILE_PLACE_CITY",
            "defName": "籍贯（市）",
            "comment": "",
            "type": "VARCHAR",
            "len": "32",
            "scale": "",
            "primaryKey": false,
            "notNull": false,
            "autoIncrement": false,
            "defaultValue": "",
            "hideInGraph": false,
            "domain": "73FD2BAD-2358-4336-B96D-45DC897BD792",
            "refDict": "",
            "uiHint": "",
            "id": "B97F5BC2-33DE-4857-9DB8-ECFD02C9040C"
          },
          {
            "defKey": "DOMICILE_PLACE_ADDRESS",
            "defName": "户籍地址",
            "comment": "",
            "type": "VARCHAR",
            "len": "60",
            "scale": "",
            "primaryKey": false,
            "notNull": false,
            "autoIncrement": false,
            "defaultValue": "",
            "hideInGraph": false,
            "domain": "9092C4E0-1A54-4859-ABBB-5B62DBC27573",
            "refDict": "",
            "uiHint": "",
            "id": "812ADF1D-8C03-40CA-B030-E539838FB889"
          }
        ],
        "id": "F30202B9-4B5D-4CE7-87CE-B3890C84D3F2"
      }
    ],
    "dbConn": [
      {
        "defKey": "F5814C1E-7161-4D4C-8117-FE77D7D3EA11",
        "defName": "apiJSON",
        "type": "29D1CE08-4C35-4D2D-AAA9-23D93305B52E",
        "properties": {
          "driver_class_name": "com.mysql.cj.jdbc.Driver",
          "url": "jdbc:mysql://10.4.2.55:3307/ApiJson?characterEncoding=UTF-8&useSSL=false&useUnicode=true&serverTimezone=UTC",
          "password": "root",
          "username": "root",
          "customer_driver": ""
        }
      }
    ]
  }
}